// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SendPKRandomByProto.proto

#ifndef PROTOBUF_SendPKRandomByProto_2eproto__INCLUDED
#define PROTOBUF_SendPKRandomByProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Entity.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_SendPKRandomByProto_2eproto();
void protobuf_InitDefaults_SendPKRandomByProto_2eproto();
void protobuf_AssignDesc_SendPKRandomByProto_2eproto();
void protobuf_ShutdownFile_SendPKRandomByProto_2eproto();

class SendPKRandomReq;
class SendPKRandomRes;

// ===================================================================

class SendPKRandomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SendPKRandomReq) */ {
 public:
  SendPKRandomReq();
  virtual ~SendPKRandomReq();

  SendPKRandomReq(const SendPKRandomReq& from);

  inline SendPKRandomReq& operator=(const SendPKRandomReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendPKRandomReq& default_instance();

  static const SendPKRandomReq* internal_default_instance();

  void Swap(SendPKRandomReq* other);

  // implements Message ----------------------------------------------

  inline SendPKRandomReq* New() const { return New(NULL); }

  SendPKRandomReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendPKRandomReq& from);
  void MergeFrom(const SendPKRandomReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendPKRandomReq* other);
  void UnsafeMergeFrom(const SendPKRandomReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string roomId = 1;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  const ::std::string& roomid() const;
  void set_roomid(const ::std::string& value);
  void set_roomid(const char* value);
  void set_roomid(const char* value, size_t size);
  ::std::string* mutable_roomid();
  ::std::string* release_roomid();
  void set_allocated_roomid(::std::string* roomid);

  // optional string streamId = 2;
  void clear_streamid();
  static const int kStreamIdFieldNumber = 2;
  const ::std::string& streamid() const;
  void set_streamid(const ::std::string& value);
  void set_streamid(const char* value);
  void set_streamid(const char* value, size_t size);
  ::std::string* mutable_streamid();
  ::std::string* release_streamid();
  void set_allocated_streamid(::std::string* streamid);

  // @@protoc_insertion_point(class_scope:proto.SendPKRandomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr roomid_;
  ::google::protobuf::internal::ArenaStringPtr streamid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_SendPKRandomByProto_2eproto_impl();
  friend void  protobuf_AddDesc_SendPKRandomByProto_2eproto_impl();
  friend void protobuf_AssignDesc_SendPKRandomByProto_2eproto();
  friend void protobuf_ShutdownFile_SendPKRandomByProto_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SendPKRandomReq> SendPKRandomReq_default_instance_;

// -------------------------------------------------------------------

class SendPKRandomRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SendPKRandomRes) */ {
 public:
  SendPKRandomRes();
  virtual ~SendPKRandomRes();

  SendPKRandomRes(const SendPKRandomRes& from);

  inline SendPKRandomRes& operator=(const SendPKRandomRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendPKRandomRes& default_instance();

  static const SendPKRandomRes* internal_default_instance();

  void Swap(SendPKRandomRes* other);

  // implements Message ----------------------------------------------

  inline SendPKRandomRes* New() const { return New(NULL); }

  SendPKRandomRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendPKRandomRes& from);
  void MergeFrom(const SendPKRandomRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendPKRandomRes* other);
  void UnsafeMergeFrom(const SendPKRandomRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.ReturnMsg msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::proto::ReturnMsg& msg() const;
  ::proto::ReturnMsg* mutable_msg();
  ::proto::ReturnMsg* release_msg();
  void set_allocated_msg(::proto::ReturnMsg* msg);

  // @@protoc_insertion_point(class_scope:proto.SendPKRandomRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ReturnMsg* msg_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_SendPKRandomByProto_2eproto_impl();
  friend void  protobuf_AddDesc_SendPKRandomByProto_2eproto_impl();
  friend void protobuf_AssignDesc_SendPKRandomByProto_2eproto();
  friend void protobuf_ShutdownFile_SendPKRandomByProto_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SendPKRandomRes> SendPKRandomRes_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SendPKRandomReq

// optional string roomId = 1;
inline void SendPKRandomReq::clear_roomid() {
  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendPKRandomReq::roomid() const {
  // @@protoc_insertion_point(field_get:proto.SendPKRandomReq.roomId)
  return roomid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendPKRandomReq::set_roomid(const ::std::string& value) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SendPKRandomReq.roomId)
}
inline void SendPKRandomReq::set_roomid(const char* value) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SendPKRandomReq.roomId)
}
inline void SendPKRandomReq::set_roomid(const char* value, size_t size) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SendPKRandomReq.roomId)
}
inline ::std::string* SendPKRandomReq::mutable_roomid() {
  
  // @@protoc_insertion_point(field_mutable:proto.SendPKRandomReq.roomId)
  return roomid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendPKRandomReq::release_roomid() {
  // @@protoc_insertion_point(field_release:proto.SendPKRandomReq.roomId)
  
  return roomid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendPKRandomReq::set_allocated_roomid(::std::string* roomid) {
  if (roomid != NULL) {
    
  } else {
    
  }
  roomid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomid);
  // @@protoc_insertion_point(field_set_allocated:proto.SendPKRandomReq.roomId)
}

// optional string streamId = 2;
inline void SendPKRandomReq::clear_streamid() {
  streamid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendPKRandomReq::streamid() const {
  // @@protoc_insertion_point(field_get:proto.SendPKRandomReq.streamId)
  return streamid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendPKRandomReq::set_streamid(const ::std::string& value) {
  
  streamid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SendPKRandomReq.streamId)
}
inline void SendPKRandomReq::set_streamid(const char* value) {
  
  streamid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SendPKRandomReq.streamId)
}
inline void SendPKRandomReq::set_streamid(const char* value, size_t size) {
  
  streamid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SendPKRandomReq.streamId)
}
inline ::std::string* SendPKRandomReq::mutable_streamid() {
  
  // @@protoc_insertion_point(field_mutable:proto.SendPKRandomReq.streamId)
  return streamid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendPKRandomReq::release_streamid() {
  // @@protoc_insertion_point(field_release:proto.SendPKRandomReq.streamId)
  
  return streamid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendPKRandomReq::set_allocated_streamid(::std::string* streamid) {
  if (streamid != NULL) {
    
  } else {
    
  }
  streamid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), streamid);
  // @@protoc_insertion_point(field_set_allocated:proto.SendPKRandomReq.streamId)
}

inline const SendPKRandomReq* SendPKRandomReq::internal_default_instance() {
  return &SendPKRandomReq_default_instance_.get();
}
// -------------------------------------------------------------------

// SendPKRandomRes

// optional .proto.ReturnMsg msg = 1;
inline bool SendPKRandomRes::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
inline void SendPKRandomRes::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
inline const ::proto::ReturnMsg& SendPKRandomRes::msg() const {
  // @@protoc_insertion_point(field_get:proto.SendPKRandomRes.msg)
  return msg_ != NULL ? *msg_
                         : *::proto::ReturnMsg::internal_default_instance();
}
inline ::proto::ReturnMsg* SendPKRandomRes::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::proto::ReturnMsg;
  }
  // @@protoc_insertion_point(field_mutable:proto.SendPKRandomRes.msg)
  return msg_;
}
inline ::proto::ReturnMsg* SendPKRandomRes::release_msg() {
  // @@protoc_insertion_point(field_release:proto.SendPKRandomRes.msg)
  
  ::proto::ReturnMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void SendPKRandomRes::set_allocated_msg(::proto::ReturnMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SendPKRandomRes.msg)
}

inline const SendPKRandomRes* SendPKRandomRes::internal_default_instance() {
  return &SendPKRandomRes_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SendPKRandomByProto_2eproto__INCLUDED
