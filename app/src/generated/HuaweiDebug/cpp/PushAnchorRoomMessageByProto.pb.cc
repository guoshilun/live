// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PushAnchorRoomMessageByProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PushAnchorRoomMessageByProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {

namespace {

const ::google::protobuf::Descriptor* pushAnchorRoomMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pushAnchorRoomMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PushAnchorRoomMessageByProto_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_PushAnchorRoomMessageByProto_2eproto() {
  protobuf_AddDesc_PushAnchorRoomMessageByProto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PushAnchorRoomMessageByProto.proto");
  GOOGLE_CHECK(file != NULL);
  pushAnchorRoomMessage_descriptor_ = file->message_type(0);
  static const int pushAnchorRoomMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushAnchorRoomMessage, grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushAnchorRoomMessage, experience_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushAnchorRoomMessage, roomid_),
  };
  pushAnchorRoomMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      pushAnchorRoomMessage_descriptor_,
      pushAnchorRoomMessage::internal_default_instance(),
      pushAnchorRoomMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(pushAnchorRoomMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushAnchorRoomMessage, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PushAnchorRoomMessageByProto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      pushAnchorRoomMessage_descriptor_, pushAnchorRoomMessage::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PushAnchorRoomMessageByProto_2eproto() {
  pushAnchorRoomMessage_default_instance_.Shutdown();
  delete pushAnchorRoomMessage_reflection_;
}

void protobuf_InitDefaults_PushAnchorRoomMessageByProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto::protobuf_InitDefaults_Entity_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  pushAnchorRoomMessage_default_instance_.DefaultConstruct();
  pushAnchorRoomMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_PushAnchorRoomMessageByProto_2eproto_once_);
void protobuf_InitDefaults_PushAnchorRoomMessageByProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_PushAnchorRoomMessageByProto_2eproto_once_,
                 &protobuf_InitDefaults_PushAnchorRoomMessageByProto_2eproto_impl);
}
void protobuf_AddDesc_PushAnchorRoomMessageByProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_PushAnchorRoomMessageByProto_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\"PushAnchorRoomMessageByProto.proto\022\005pr"
    "oto\032\014Entity.proto\"J\n\025pushAnchorRoomMessa"
    "ge\022\r\n\005grade\030\001 \001(\005\022\022\n\nexperience\030\002 \001(\004\022\016\n"
    "\006roomId\030\003 \001(\tB \n\036com.sencorsta.ids.commo"
    "n.protob\006proto3", 175);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PushAnchorRoomMessageByProto.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_AddDesc_Entity_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PushAnchorRoomMessageByProto_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_PushAnchorRoomMessageByProto_2eproto_once_);
void protobuf_AddDesc_PushAnchorRoomMessageByProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_PushAnchorRoomMessageByProto_2eproto_once_,
                 &protobuf_AddDesc_PushAnchorRoomMessageByProto_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PushAnchorRoomMessageByProto_2eproto {
  StaticDescriptorInitializer_PushAnchorRoomMessageByProto_2eproto() {
    protobuf_AddDesc_PushAnchorRoomMessageByProto_2eproto();
  }
} static_descriptor_initializer_PushAnchorRoomMessageByProto_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pushAnchorRoomMessage::kGradeFieldNumber;
const int pushAnchorRoomMessage::kExperienceFieldNumber;
const int pushAnchorRoomMessage::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pushAnchorRoomMessage::pushAnchorRoomMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_PushAnchorRoomMessageByProto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.pushAnchorRoomMessage)
}

void pushAnchorRoomMessage::InitAsDefaultInstance() {
}

pushAnchorRoomMessage::pushAnchorRoomMessage(const pushAnchorRoomMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.pushAnchorRoomMessage)
}

void pushAnchorRoomMessage::SharedCtor() {
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&experience_, 0, reinterpret_cast<char*>(&grade_) -
    reinterpret_cast<char*>(&experience_) + sizeof(grade_));
  _cached_size_ = 0;
}

pushAnchorRoomMessage::~pushAnchorRoomMessage() {
  // @@protoc_insertion_point(destructor:proto.pushAnchorRoomMessage)
  SharedDtor();
}

void pushAnchorRoomMessage::SharedDtor() {
  roomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void pushAnchorRoomMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pushAnchorRoomMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pushAnchorRoomMessage_descriptor_;
}

const pushAnchorRoomMessage& pushAnchorRoomMessage::default_instance() {
  protobuf_InitDefaults_PushAnchorRoomMessageByProto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<pushAnchorRoomMessage> pushAnchorRoomMessage_default_instance_;

pushAnchorRoomMessage* pushAnchorRoomMessage::New(::google::protobuf::Arena* arena) const {
  pushAnchorRoomMessage* n = new pushAnchorRoomMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void pushAnchorRoomMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.pushAnchorRoomMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(pushAnchorRoomMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<pushAnchorRoomMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(experience_, grade_);
  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool pushAnchorRoomMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.pushAnchorRoomMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 grade = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grade_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_experience;
        break;
      }

      // optional uint64 experience = 2;
      case 2: {
        if (tag == 16) {
         parse_experience:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &experience_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_roomId;
        break;
      }

      // optional string roomId = 3;
      case 3: {
        if (tag == 26) {
         parse_roomId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.pushAnchorRoomMessage.roomId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.pushAnchorRoomMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.pushAnchorRoomMessage)
  return false;
#undef DO_
}

void pushAnchorRoomMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.pushAnchorRoomMessage)
  // optional int32 grade = 1;
  if (this->grade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->grade(), output);
  }

  // optional uint64 experience = 2;
  if (this->experience() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->experience(), output);
  }

  // optional string roomId = 3;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushAnchorRoomMessage.roomId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->roomid(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.pushAnchorRoomMessage)
}

::google::protobuf::uint8* pushAnchorRoomMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.pushAnchorRoomMessage)
  // optional int32 grade = 1;
  if (this->grade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->grade(), target);
  }

  // optional uint64 experience = 2;
  if (this->experience() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->experience(), target);
  }

  // optional string roomId = 3;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushAnchorRoomMessage.roomId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->roomid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.pushAnchorRoomMessage)
  return target;
}

size_t pushAnchorRoomMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.pushAnchorRoomMessage)
  size_t total_size = 0;

  // optional int32 grade = 1;
  if (this->grade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->grade());
  }

  // optional uint64 experience = 2;
  if (this->experience() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->experience());
  }

  // optional string roomId = 3;
  if (this->roomid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pushAnchorRoomMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.pushAnchorRoomMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const pushAnchorRoomMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pushAnchorRoomMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.pushAnchorRoomMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.pushAnchorRoomMessage)
    UnsafeMergeFrom(*source);
  }
}

void pushAnchorRoomMessage::MergeFrom(const pushAnchorRoomMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.pushAnchorRoomMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void pushAnchorRoomMessage::UnsafeMergeFrom(const pushAnchorRoomMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.grade() != 0) {
    set_grade(from.grade());
  }
  if (from.experience() != 0) {
    set_experience(from.experience());
  }
  if (from.roomid().size() > 0) {

    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
}

void pushAnchorRoomMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.pushAnchorRoomMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pushAnchorRoomMessage::CopyFrom(const pushAnchorRoomMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.pushAnchorRoomMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool pushAnchorRoomMessage::IsInitialized() const {

  return true;
}

void pushAnchorRoomMessage::Swap(pushAnchorRoomMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pushAnchorRoomMessage::InternalSwap(pushAnchorRoomMessage* other) {
  std::swap(grade_, other->grade_);
  std::swap(experience_, other->experience_);
  roomid_.Swap(&other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata pushAnchorRoomMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pushAnchorRoomMessage_descriptor_;
  metadata.reflection = pushAnchorRoomMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// pushAnchorRoomMessage

// optional int32 grade = 1;
void pushAnchorRoomMessage::clear_grade() {
  grade_ = 0;
}
::google::protobuf::int32 pushAnchorRoomMessage::grade() const {
  // @@protoc_insertion_point(field_get:proto.pushAnchorRoomMessage.grade)
  return grade_;
}
void pushAnchorRoomMessage::set_grade(::google::protobuf::int32 value) {
  
  grade_ = value;
  // @@protoc_insertion_point(field_set:proto.pushAnchorRoomMessage.grade)
}

// optional uint64 experience = 2;
void pushAnchorRoomMessage::clear_experience() {
  experience_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 pushAnchorRoomMessage::experience() const {
  // @@protoc_insertion_point(field_get:proto.pushAnchorRoomMessage.experience)
  return experience_;
}
void pushAnchorRoomMessage::set_experience(::google::protobuf::uint64 value) {
  
  experience_ = value;
  // @@protoc_insertion_point(field_set:proto.pushAnchorRoomMessage.experience)
}

// optional string roomId = 3;
void pushAnchorRoomMessage::clear_roomid() {
  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& pushAnchorRoomMessage::roomid() const {
  // @@protoc_insertion_point(field_get:proto.pushAnchorRoomMessage.roomId)
  return roomid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushAnchorRoomMessage::set_roomid(const ::std::string& value) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushAnchorRoomMessage.roomId)
}
void pushAnchorRoomMessage::set_roomid(const char* value) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushAnchorRoomMessage.roomId)
}
void pushAnchorRoomMessage::set_roomid(const char* value, size_t size) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushAnchorRoomMessage.roomId)
}
::std::string* pushAnchorRoomMessage::mutable_roomid() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushAnchorRoomMessage.roomId)
  return roomid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* pushAnchorRoomMessage::release_roomid() {
  // @@protoc_insertion_point(field_release:proto.pushAnchorRoomMessage.roomId)
  
  return roomid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushAnchorRoomMessage::set_allocated_roomid(::std::string* roomid) {
  if (roomid != NULL) {
    
  } else {
    
  }
  roomid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomid);
  // @@protoc_insertion_point(field_set_allocated:proto.pushAnchorRoomMessage.roomId)
}

inline const pushAnchorRoomMessage* pushAnchorRoomMessage::internal_default_instance() {
  return &pushAnchorRoomMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
