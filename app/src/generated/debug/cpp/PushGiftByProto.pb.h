// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PushGiftByProto.proto

#ifndef PROTOBUF_PushGiftByProto_2eproto__INCLUDED
#define PROTOBUF_PushGiftByProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Entity.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_PushGiftByProto_2eproto();
void protobuf_InitDefaults_PushGiftByProto_2eproto();
void protobuf_AssignDesc_PushGiftByProto_2eproto();
void protobuf_ShutdownFile_PushGiftByProto_2eproto();

class pushGift;

// ===================================================================

class pushGift : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.pushGift) */ {
 public:
  pushGift();
  virtual ~pushGift();

  pushGift(const pushGift& from);

  inline pushGift& operator=(const pushGift& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pushGift& default_instance();

  static const pushGift* internal_default_instance();

  void Swap(pushGift* other);

  // implements Message ----------------------------------------------

  inline pushGift* New() const { return New(NULL); }

  pushGift* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pushGift& from);
  void MergeFrom(const pushGift& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(pushGift* other);
  void UnsafeMergeFrom(const pushGift& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional string userId = 3;
  void clear_userid();
  static const int kUserIdFieldNumber = 3;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // optional string picture = 4;
  void clear_picture();
  static const int kPictureFieldNumber = 4;
  const ::std::string& picture() const;
  void set_picture(const ::std::string& value);
  void set_picture(const char* value);
  void set_picture(const char* value, size_t size);
  ::std::string* mutable_picture();
  ::std::string* release_picture();
  void set_allocated_picture(::std::string* picture);

  // optional string username = 5;
  void clear_username();
  static const int kUsernameFieldNumber = 5;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string giftId = 6;
  void clear_giftid();
  static const int kGiftIdFieldNumber = 6;
  const ::std::string& giftid() const;
  void set_giftid(const ::std::string& value);
  void set_giftid(const char* value);
  void set_giftid(const char* value, size_t size);
  ::std::string* mutable_giftid();
  ::std::string* release_giftid();
  void set_allocated_giftid(::std::string* giftid);

  // optional string giftName = 7;
  void clear_giftname();
  static const int kGiftNameFieldNumber = 7;
  const ::std::string& giftname() const;
  void set_giftname(const ::std::string& value);
  void set_giftname(const char* value);
  void set_giftname(const char* value, size_t size);
  ::std::string* mutable_giftname();
  ::std::string* release_giftname();
  void set_allocated_giftname(::std::string* giftname);

  // optional string giftUrl = 8;
  void clear_gifturl();
  static const int kGiftUrlFieldNumber = 8;
  const ::std::string& gifturl() const;
  void set_gifturl(const ::std::string& value);
  void set_gifturl(const char* value);
  void set_gifturl(const char* value, size_t size);
  ::std::string* mutable_gifturl();
  ::std::string* release_gifturl();
  void set_allocated_gifturl(::std::string* gifturl);

  // optional string gCartoonUrl = 9;
  void clear_gcartoonurl();
  static const int kGCartoonUrlFieldNumber = 9;
  const ::std::string& gcartoonurl() const;
  void set_gcartoonurl(const ::std::string& value);
  void set_gcartoonurl(const char* value);
  void set_gcartoonurl(const char* value, size_t size);
  ::std::string* mutable_gcartoonurl();
  ::std::string* release_gcartoonurl();
  void set_allocated_gcartoonurl(::std::string* gcartoonurl);

  // optional int32 amount = 10;
  void clear_amount();
  static const int kAmountFieldNumber = 10;
  ::google::protobuf::int32 amount() const;
  void set_amount(::google::protobuf::int32 value);

  // optional string msgId = 11;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 11;
  const ::std::string& msgid() const;
  void set_msgid(const ::std::string& value);
  void set_msgid(const char* value);
  void set_msgid(const char* value, size_t size);
  ::std::string* mutable_msgid();
  ::std::string* release_msgid();
  void set_allocated_msgid(::std::string* msgid);

  // @@protoc_insertion_point(class_scope:proto.pushGift)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr picture_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr giftid_;
  ::google::protobuf::internal::ArenaStringPtr giftname_;
  ::google::protobuf::internal::ArenaStringPtr gifturl_;
  ::google::protobuf::internal::ArenaStringPtr gcartoonurl_;
  ::google::protobuf::internal::ArenaStringPtr msgid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 amount_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_PushGiftByProto_2eproto_impl();
  friend void  protobuf_AddDesc_PushGiftByProto_2eproto_impl();
  friend void protobuf_AssignDesc_PushGiftByProto_2eproto();
  friend void protobuf_ShutdownFile_PushGiftByProto_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<pushGift> pushGift_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// pushGift

// optional int32 type = 1;
inline void pushGift::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 pushGift::type() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.type)
  return type_;
}
inline void pushGift::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.pushGift.type)
}

// optional int32 status = 2;
inline void pushGift::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 pushGift::status() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.status)
  return status_;
}
inline void pushGift::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:proto.pushGift.status)
}

// optional string userId = 3;
inline void pushGift::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& pushGift::userid() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.userId)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pushGift::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushGift.userId)
}
inline void pushGift::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushGift.userId)
}
inline void pushGift::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushGift.userId)
}
inline ::std::string* pushGift::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushGift.userId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pushGift::release_userid() {
  // @@protoc_insertion_point(field_release:proto.pushGift.userId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pushGift::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:proto.pushGift.userId)
}

// optional string picture = 4;
inline void pushGift::clear_picture() {
  picture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& pushGift::picture() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.picture)
  return picture_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pushGift::set_picture(const ::std::string& value) {
  
  picture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushGift.picture)
}
inline void pushGift::set_picture(const char* value) {
  
  picture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushGift.picture)
}
inline void pushGift::set_picture(const char* value, size_t size) {
  
  picture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushGift.picture)
}
inline ::std::string* pushGift::mutable_picture() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushGift.picture)
  return picture_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pushGift::release_picture() {
  // @@protoc_insertion_point(field_release:proto.pushGift.picture)
  
  return picture_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pushGift::set_allocated_picture(::std::string* picture) {
  if (picture != NULL) {
    
  } else {
    
  }
  picture_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), picture);
  // @@protoc_insertion_point(field_set_allocated:proto.pushGift.picture)
}

// optional string username = 5;
inline void pushGift::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& pushGift::username() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pushGift::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushGift.username)
}
inline void pushGift::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushGift.username)
}
inline void pushGift::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushGift.username)
}
inline ::std::string* pushGift::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushGift.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pushGift::release_username() {
  // @@protoc_insertion_point(field_release:proto.pushGift.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pushGift::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:proto.pushGift.username)
}

// optional string giftId = 6;
inline void pushGift::clear_giftid() {
  giftid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& pushGift::giftid() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.giftId)
  return giftid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pushGift::set_giftid(const ::std::string& value) {
  
  giftid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushGift.giftId)
}
inline void pushGift::set_giftid(const char* value) {
  
  giftid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushGift.giftId)
}
inline void pushGift::set_giftid(const char* value, size_t size) {
  
  giftid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushGift.giftId)
}
inline ::std::string* pushGift::mutable_giftid() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushGift.giftId)
  return giftid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pushGift::release_giftid() {
  // @@protoc_insertion_point(field_release:proto.pushGift.giftId)
  
  return giftid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pushGift::set_allocated_giftid(::std::string* giftid) {
  if (giftid != NULL) {
    
  } else {
    
  }
  giftid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), giftid);
  // @@protoc_insertion_point(field_set_allocated:proto.pushGift.giftId)
}

// optional string giftName = 7;
inline void pushGift::clear_giftname() {
  giftname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& pushGift::giftname() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.giftName)
  return giftname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pushGift::set_giftname(const ::std::string& value) {
  
  giftname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushGift.giftName)
}
inline void pushGift::set_giftname(const char* value) {
  
  giftname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushGift.giftName)
}
inline void pushGift::set_giftname(const char* value, size_t size) {
  
  giftname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushGift.giftName)
}
inline ::std::string* pushGift::mutable_giftname() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushGift.giftName)
  return giftname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pushGift::release_giftname() {
  // @@protoc_insertion_point(field_release:proto.pushGift.giftName)
  
  return giftname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pushGift::set_allocated_giftname(::std::string* giftname) {
  if (giftname != NULL) {
    
  } else {
    
  }
  giftname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), giftname);
  // @@protoc_insertion_point(field_set_allocated:proto.pushGift.giftName)
}

// optional string giftUrl = 8;
inline void pushGift::clear_gifturl() {
  gifturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& pushGift::gifturl() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.giftUrl)
  return gifturl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pushGift::set_gifturl(const ::std::string& value) {
  
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushGift.giftUrl)
}
inline void pushGift::set_gifturl(const char* value) {
  
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushGift.giftUrl)
}
inline void pushGift::set_gifturl(const char* value, size_t size) {
  
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushGift.giftUrl)
}
inline ::std::string* pushGift::mutable_gifturl() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushGift.giftUrl)
  return gifturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pushGift::release_gifturl() {
  // @@protoc_insertion_point(field_release:proto.pushGift.giftUrl)
  
  return gifturl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pushGift::set_allocated_gifturl(::std::string* gifturl) {
  if (gifturl != NULL) {
    
  } else {
    
  }
  gifturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gifturl);
  // @@protoc_insertion_point(field_set_allocated:proto.pushGift.giftUrl)
}

// optional string gCartoonUrl = 9;
inline void pushGift::clear_gcartoonurl() {
  gcartoonurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& pushGift::gcartoonurl() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.gCartoonUrl)
  return gcartoonurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pushGift::set_gcartoonurl(const ::std::string& value) {
  
  gcartoonurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushGift.gCartoonUrl)
}
inline void pushGift::set_gcartoonurl(const char* value) {
  
  gcartoonurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushGift.gCartoonUrl)
}
inline void pushGift::set_gcartoonurl(const char* value, size_t size) {
  
  gcartoonurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushGift.gCartoonUrl)
}
inline ::std::string* pushGift::mutable_gcartoonurl() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushGift.gCartoonUrl)
  return gcartoonurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pushGift::release_gcartoonurl() {
  // @@protoc_insertion_point(field_release:proto.pushGift.gCartoonUrl)
  
  return gcartoonurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pushGift::set_allocated_gcartoonurl(::std::string* gcartoonurl) {
  if (gcartoonurl != NULL) {
    
  } else {
    
  }
  gcartoonurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gcartoonurl);
  // @@protoc_insertion_point(field_set_allocated:proto.pushGift.gCartoonUrl)
}

// optional int32 amount = 10;
inline void pushGift::clear_amount() {
  amount_ = 0;
}
inline ::google::protobuf::int32 pushGift::amount() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.amount)
  return amount_;
}
inline void pushGift::set_amount(::google::protobuf::int32 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:proto.pushGift.amount)
}

// optional string msgId = 11;
inline void pushGift::clear_msgid() {
  msgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& pushGift::msgid() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.msgId)
  return msgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pushGift::set_msgid(const ::std::string& value) {
  
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushGift.msgId)
}
inline void pushGift::set_msgid(const char* value) {
  
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushGift.msgId)
}
inline void pushGift::set_msgid(const char* value, size_t size) {
  
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushGift.msgId)
}
inline ::std::string* pushGift::mutable_msgid() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushGift.msgId)
  return msgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pushGift::release_msgid() {
  // @@protoc_insertion_point(field_release:proto.pushGift.msgId)
  
  return msgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pushGift::set_allocated_msgid(::std::string* msgid) {
  if (msgid != NULL) {
    
  } else {
    
  }
  msgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgid);
  // @@protoc_insertion_point(field_set_allocated:proto.pushGift.msgId)
}

inline const pushGift* pushGift::internal_default_instance() {
  return &pushGift_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PushGiftByProto_2eproto__INCLUDED
