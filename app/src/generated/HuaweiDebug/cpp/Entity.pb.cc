// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Entity.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Entity.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {

namespace {

const ::google::protobuf::Descriptor* ReturnMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReturnMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserinfoMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserinfoMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Entity_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Entity_2eproto() {
  protobuf_AddDesc_Entity_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Entity.proto");
  GOOGLE_CHECK(file != NULL);
  ReturnMsg_descriptor_ = file->message_type(0);
  static const int ReturnMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnMsg, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnMsg, msg_),
  };
  ReturnMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReturnMsg_descriptor_,
      ReturnMsg::internal_default_instance(),
      ReturnMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReturnMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnMsg, _internal_metadata_));
  UserinfoMsg_descriptor_ = file->message_type(1);
  static const int UserinfoMsg_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserinfoMsg, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserinfoMsg, nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserinfoMsg, portrait_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserinfoMsg, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserinfoMsg, state_),
  };
  UserinfoMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserinfoMsg_descriptor_,
      UserinfoMsg::internal_default_instance(),
      UserinfoMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserinfoMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserinfoMsg, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Entity_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReturnMsg_descriptor_, ReturnMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserinfoMsg_descriptor_, UserinfoMsg::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Entity_2eproto() {
  ReturnMsg_default_instance_.Shutdown();
  delete ReturnMsg_reflection_;
  UserinfoMsg_default_instance_.Shutdown();
  delete UserinfoMsg_reflection_;
}

void protobuf_InitDefaults_Entity_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  ReturnMsg_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  UserinfoMsg_default_instance_.DefaultConstruct();
  ReturnMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  UserinfoMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_Entity_2eproto_once_);
void protobuf_InitDefaults_Entity_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_Entity_2eproto_once_,
                 &protobuf_InitDefaults_Entity_2eproto_impl);
}
void protobuf_AddDesc_Entity_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_Entity_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014Entity.proto\022\005proto\"&\n\tReturnMsg\022\014\n\004co"
    "de\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"]\n\013UserinfoMsg\022\016\n\006"
    "userId\030\001 \001(\t\022\020\n\010nickname\030\002 \001(\t\022\020\n\010portra"
    "it\030\003 \001(\t\022\013\n\003sex\030\004 \001(\005\022\r\n\005state\030\005 \001(\005B \n\036"
    "com.sencorsta.ids.common.protob\006proto3", 198);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Entity.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Entity_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_Entity_2eproto_once_);
void protobuf_AddDesc_Entity_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_Entity_2eproto_once_,
                 &protobuf_AddDesc_Entity_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Entity_2eproto {
  StaticDescriptorInitializer_Entity_2eproto() {
    protobuf_AddDesc_Entity_2eproto();
  }
} static_descriptor_initializer_Entity_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReturnMsg::kCodeFieldNumber;
const int ReturnMsg::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReturnMsg::ReturnMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Entity_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ReturnMsg)
}

void ReturnMsg::InitAsDefaultInstance() {
}

ReturnMsg::ReturnMsg(const ReturnMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.ReturnMsg)
}

void ReturnMsg::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

ReturnMsg::~ReturnMsg() {
  // @@protoc_insertion_point(destructor:proto.ReturnMsg)
  SharedDtor();
}

void ReturnMsg::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReturnMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReturnMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReturnMsg_descriptor_;
}

const ReturnMsg& ReturnMsg::default_instance() {
  protobuf_InitDefaults_Entity_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReturnMsg> ReturnMsg_default_instance_;

ReturnMsg* ReturnMsg::New(::google::protobuf::Arena* arena) const {
  ReturnMsg* n = new ReturnMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReturnMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ReturnMsg)
  code_ = 0;
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReturnMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ReturnMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ReturnMsg.msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ReturnMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ReturnMsg)
  return false;
#undef DO_
}

void ReturnMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ReturnMsg)
  // optional int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReturnMsg.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.ReturnMsg)
}

::google::protobuf::uint8* ReturnMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ReturnMsg)
  // optional int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReturnMsg.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.ReturnMsg)
  return target;
}

size_t ReturnMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ReturnMsg)
  size_t total_size = 0;

  // optional int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  // optional string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReturnMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ReturnMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReturnMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReturnMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ReturnMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ReturnMsg)
    UnsafeMergeFrom(*source);
  }
}

void ReturnMsg::MergeFrom(const ReturnMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ReturnMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReturnMsg::UnsafeMergeFrom(const ReturnMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void ReturnMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ReturnMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReturnMsg::CopyFrom(const ReturnMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ReturnMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReturnMsg::IsInitialized() const {

  return true;
}

void ReturnMsg::Swap(ReturnMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReturnMsg::InternalSwap(ReturnMsg* other) {
  std::swap(code_, other->code_);
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReturnMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReturnMsg_descriptor_;
  metadata.reflection = ReturnMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReturnMsg

// optional int32 code = 1;
void ReturnMsg::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 ReturnMsg::code() const {
  // @@protoc_insertion_point(field_get:proto.ReturnMsg.code)
  return code_;
}
void ReturnMsg::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:proto.ReturnMsg.code)
}

// optional string msg = 2;
void ReturnMsg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReturnMsg::msg() const {
  // @@protoc_insertion_point(field_get:proto.ReturnMsg.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReturnMsg::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ReturnMsg.msg)
}
void ReturnMsg::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ReturnMsg.msg)
}
void ReturnMsg::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ReturnMsg.msg)
}
::std::string* ReturnMsg::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.ReturnMsg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReturnMsg::release_msg() {
  // @@protoc_insertion_point(field_release:proto.ReturnMsg.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReturnMsg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.ReturnMsg.msg)
}

inline const ReturnMsg* ReturnMsg::internal_default_instance() {
  return &ReturnMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserinfoMsg::kUserIdFieldNumber;
const int UserinfoMsg::kNicknameFieldNumber;
const int UserinfoMsg::kPortraitFieldNumber;
const int UserinfoMsg::kSexFieldNumber;
const int UserinfoMsg::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserinfoMsg::UserinfoMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Entity_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UserinfoMsg)
}

void UserinfoMsg::InitAsDefaultInstance() {
}

UserinfoMsg::UserinfoMsg(const UserinfoMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.UserinfoMsg)
}

void UserinfoMsg::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portrait_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sex_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&sex_) + sizeof(state_));
  _cached_size_ = 0;
}

UserinfoMsg::~UserinfoMsg() {
  // @@protoc_insertion_point(destructor:proto.UserinfoMsg)
  SharedDtor();
}

void UserinfoMsg::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portrait_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserinfoMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserinfoMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserinfoMsg_descriptor_;
}

const UserinfoMsg& UserinfoMsg::default_instance() {
  protobuf_InitDefaults_Entity_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UserinfoMsg> UserinfoMsg_default_instance_;

UserinfoMsg* UserinfoMsg::New(::google::protobuf::Arena* arena) const {
  UserinfoMsg* n = new UserinfoMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserinfoMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UserinfoMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UserinfoMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UserinfoMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(sex_, state_);
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portrait_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool UserinfoMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UserinfoMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string userId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.UserinfoMsg.userId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_nickname;
        break;
      }

      // optional string nickname = 2;
      case 2: {
        if (tag == 18) {
         parse_nickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.UserinfoMsg.nickname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_portrait;
        break;
      }

      // optional string portrait = 3;
      case 3: {
        if (tag == 26) {
         parse_portrait:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portrait()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portrait().data(), this->portrait().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.UserinfoMsg.portrait"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sex;
        break;
      }

      // optional int32 sex = 4;
      case 4: {
        if (tag == 32) {
         parse_sex:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_state;
        break;
      }

      // optional int32 state = 5;
      case 5: {
        if (tag == 40) {
         parse_state:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UserinfoMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UserinfoMsg)
  return false;
#undef DO_
}

void UserinfoMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UserinfoMsg)
  // optional string userId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.UserinfoMsg.userId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // optional string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.UserinfoMsg.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // optional string portrait = 3;
  if (this->portrait().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portrait().data(), this->portrait().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.UserinfoMsg.portrait");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->portrait(), output);
  }

  // optional int32 sex = 4;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sex(), output);
  }

  // optional int32 state = 5;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->state(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.UserinfoMsg)
}

::google::protobuf::uint8* UserinfoMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UserinfoMsg)
  // optional string userId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.UserinfoMsg.userId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // optional string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.UserinfoMsg.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // optional string portrait = 3;
  if (this->portrait().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portrait().data(), this->portrait().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.UserinfoMsg.portrait");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->portrait(), target);
  }

  // optional int32 sex = 4;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sex(), target);
  }

  // optional int32 state = 5;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->state(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.UserinfoMsg)
  return target;
}

size_t UserinfoMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UserinfoMsg)
  size_t total_size = 0;

  // optional string userId = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // optional string nickname = 2;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // optional string portrait = 3;
  if (this->portrait().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portrait());
  }

  // optional int32 sex = 4;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  // optional int32 state = 5;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserinfoMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UserinfoMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UserinfoMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserinfoMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UserinfoMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UserinfoMsg)
    UnsafeMergeFrom(*source);
  }
}

void UserinfoMsg::MergeFrom(const UserinfoMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UserinfoMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UserinfoMsg::UnsafeMergeFrom(const UserinfoMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.portrait().size() > 0) {

    portrait_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portrait_);
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void UserinfoMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UserinfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserinfoMsg::CopyFrom(const UserinfoMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UserinfoMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UserinfoMsg::IsInitialized() const {

  return true;
}

void UserinfoMsg::Swap(UserinfoMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserinfoMsg::InternalSwap(UserinfoMsg* other) {
  userid_.Swap(&other->userid_);
  nickname_.Swap(&other->nickname_);
  portrait_.Swap(&other->portrait_);
  std::swap(sex_, other->sex_);
  std::swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserinfoMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserinfoMsg_descriptor_;
  metadata.reflection = UserinfoMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserinfoMsg

// optional string userId = 1;
void UserinfoMsg::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserinfoMsg::userid() const {
  // @@protoc_insertion_point(field_get:proto.UserinfoMsg.userId)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserinfoMsg::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.UserinfoMsg.userId)
}
void UserinfoMsg::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.UserinfoMsg.userId)
}
void UserinfoMsg::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.UserinfoMsg.userId)
}
::std::string* UserinfoMsg::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:proto.UserinfoMsg.userId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserinfoMsg::release_userid() {
  // @@protoc_insertion_point(field_release:proto.UserinfoMsg.userId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserinfoMsg::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:proto.UserinfoMsg.userId)
}

// optional string nickname = 2;
void UserinfoMsg::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserinfoMsg::nickname() const {
  // @@protoc_insertion_point(field_get:proto.UserinfoMsg.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserinfoMsg::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.UserinfoMsg.nickname)
}
void UserinfoMsg::set_nickname(const char* value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.UserinfoMsg.nickname)
}
void UserinfoMsg::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.UserinfoMsg.nickname)
}
::std::string* UserinfoMsg::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.UserinfoMsg.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserinfoMsg::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.UserinfoMsg.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserinfoMsg::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.UserinfoMsg.nickname)
}

// optional string portrait = 3;
void UserinfoMsg::clear_portrait() {
  portrait_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserinfoMsg::portrait() const {
  // @@protoc_insertion_point(field_get:proto.UserinfoMsg.portrait)
  return portrait_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserinfoMsg::set_portrait(const ::std::string& value) {
  
  portrait_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.UserinfoMsg.portrait)
}
void UserinfoMsg::set_portrait(const char* value) {
  
  portrait_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.UserinfoMsg.portrait)
}
void UserinfoMsg::set_portrait(const char* value, size_t size) {
  
  portrait_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.UserinfoMsg.portrait)
}
::std::string* UserinfoMsg::mutable_portrait() {
  
  // @@protoc_insertion_point(field_mutable:proto.UserinfoMsg.portrait)
  return portrait_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserinfoMsg::release_portrait() {
  // @@protoc_insertion_point(field_release:proto.UserinfoMsg.portrait)
  
  return portrait_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserinfoMsg::set_allocated_portrait(::std::string* portrait) {
  if (portrait != NULL) {
    
  } else {
    
  }
  portrait_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portrait);
  // @@protoc_insertion_point(field_set_allocated:proto.UserinfoMsg.portrait)
}

// optional int32 sex = 4;
void UserinfoMsg::clear_sex() {
  sex_ = 0;
}
::google::protobuf::int32 UserinfoMsg::sex() const {
  // @@protoc_insertion_point(field_get:proto.UserinfoMsg.sex)
  return sex_;
}
void UserinfoMsg::set_sex(::google::protobuf::int32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:proto.UserinfoMsg.sex)
}

// optional int32 state = 5;
void UserinfoMsg::clear_state() {
  state_ = 0;
}
::google::protobuf::int32 UserinfoMsg::state() const {
  // @@protoc_insertion_point(field_get:proto.UserinfoMsg.state)
  return state_;
}
void UserinfoMsg::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.UserinfoMsg.state)
}

inline const UserinfoMsg* UserinfoMsg::internal_default_instance() {
  return &UserinfoMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
