// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PKResponseByProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PKResponseByProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {

namespace {

const ::google::protobuf::Descriptor* PKResponseReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PKResponseReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PKResponseRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PKResponseRes_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PKResponseByProto_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_PKResponseByProto_2eproto() {
  protobuf_AddDesc_PKResponseByProto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PKResponseByProto.proto");
  GOOGLE_CHECK(file != NULL);
  PKResponseReq_descriptor_ = file->message_type(0);
  static const int PKResponseReq_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PKResponseReq, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PKResponseReq, streamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PKResponseReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PKResponseReq, myroomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PKResponseReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PKResponseReq, mystreamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PKResponseReq, aisle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PKResponseReq, mergestreamurl_),
  };
  PKResponseReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PKResponseReq_descriptor_,
      PKResponseReq::internal_default_instance(),
      PKResponseReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(PKResponseReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PKResponseReq, _internal_metadata_));
  PKResponseRes_descriptor_ = file->message_type(1);
  static const int PKResponseRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PKResponseRes, msg_),
  };
  PKResponseRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PKResponseRes_descriptor_,
      PKResponseRes::internal_default_instance(),
      PKResponseRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(PKResponseRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PKResponseRes, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PKResponseByProto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PKResponseReq_descriptor_, PKResponseReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PKResponseRes_descriptor_, PKResponseRes::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PKResponseByProto_2eproto() {
  PKResponseReq_default_instance_.Shutdown();
  delete PKResponseReq_reflection_;
  PKResponseRes_default_instance_.Shutdown();
  delete PKResponseRes_reflection_;
}

void protobuf_InitDefaults_PKResponseByProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto::protobuf_InitDefaults_Entity_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  PKResponseReq_default_instance_.DefaultConstruct();
  PKResponseRes_default_instance_.DefaultConstruct();
  PKResponseReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  PKResponseRes_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_PKResponseByProto_2eproto_once_);
void protobuf_InitDefaults_PKResponseByProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_PKResponseByProto_2eproto_once_,
                 &protobuf_InitDefaults_PKResponseByProto_2eproto_impl);
}
void protobuf_AddDesc_PKResponseByProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_PKResponseByProto_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027PKResponseByProto.proto\022\005proto\032\014Entity"
    ".proto\"\234\001\n\rPKResponseReq\022\016\n\006roomId\030\001 \001(\t"
    "\022\020\n\010streamId\030\002 \001(\t\022\014\n\004type\030\003 \001(\005\022\020\n\010myRo"
    "omId\030\004 \001(\t\022\016\n\006userId\030\005 \001(\t\022\022\n\nmyStreamId"
    "\030\006 \001(\t\022\r\n\005aisle\030\007 \001(\005\022\026\n\016mergeStreamUrl\030"
    "\010 \001(\t\".\n\rPKResponseRes\022\035\n\003msg\030\001 \001(\0132\020.pr"
    "oto.ReturnMsgB \n\036com.sencorsta.ids.commo"
    "n.protob\006proto3", 295);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PKResponseByProto.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_AddDesc_Entity_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PKResponseByProto_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_PKResponseByProto_2eproto_once_);
void protobuf_AddDesc_PKResponseByProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_PKResponseByProto_2eproto_once_,
                 &protobuf_AddDesc_PKResponseByProto_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PKResponseByProto_2eproto {
  StaticDescriptorInitializer_PKResponseByProto_2eproto() {
    protobuf_AddDesc_PKResponseByProto_2eproto();
  }
} static_descriptor_initializer_PKResponseByProto_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PKResponseReq::kRoomIdFieldNumber;
const int PKResponseReq::kStreamIdFieldNumber;
const int PKResponseReq::kTypeFieldNumber;
const int PKResponseReq::kMyRoomIdFieldNumber;
const int PKResponseReq::kUserIdFieldNumber;
const int PKResponseReq::kMyStreamIdFieldNumber;
const int PKResponseReq::kAisleFieldNumber;
const int PKResponseReq::kMergeStreamUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PKResponseReq::PKResponseReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_PKResponseByProto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PKResponseReq)
}

void PKResponseReq::InitAsDefaultInstance() {
}

PKResponseReq::PKResponseReq(const PKResponseReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.PKResponseReq)
}

void PKResponseReq::SharedCtor() {
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streamid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  myroomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mystreamid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mergestreamurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&aisle_) -
    reinterpret_cast<char*>(&type_) + sizeof(aisle_));
  _cached_size_ = 0;
}

PKResponseReq::~PKResponseReq() {
  // @@protoc_insertion_point(destructor:proto.PKResponseReq)
  SharedDtor();
}

void PKResponseReq::SharedDtor() {
  roomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streamid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  myroomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mystreamid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mergestreamurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PKResponseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PKResponseReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PKResponseReq_descriptor_;
}

const PKResponseReq& PKResponseReq::default_instance() {
  protobuf_InitDefaults_PKResponseByProto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PKResponseReq> PKResponseReq_default_instance_;

PKResponseReq* PKResponseReq::New(::google::protobuf::Arena* arena) const {
  PKResponseReq* n = new PKResponseReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PKResponseReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PKResponseReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PKResponseReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PKResponseReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, aisle_);
  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  streamid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  myroomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mystreamid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mergestreamurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PKResponseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PKResponseReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string roomId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PKResponseReq.roomId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_streamId;
        break;
      }

      // optional string streamId = 2;
      case 2: {
        if (tag == 18) {
         parse_streamId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_streamid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->streamid().data(), this->streamid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PKResponseReq.streamId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional int32 type = 3;
      case 3: {
        if (tag == 24) {
         parse_type:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_myRoomId;
        break;
      }

      // optional string myRoomId = 4;
      case 4: {
        if (tag == 34) {
         parse_myRoomId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_myroomid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->myroomid().data(), this->myroomid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PKResponseReq.myRoomId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_userId;
        break;
      }

      // optional string userId = 5;
      case 5: {
        if (tag == 42) {
         parse_userId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PKResponseReq.userId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_myStreamId;
        break;
      }

      // optional string myStreamId = 6;
      case 6: {
        if (tag == 50) {
         parse_myStreamId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mystreamid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mystreamid().data(), this->mystreamid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PKResponseReq.myStreamId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_aisle;
        break;
      }

      // optional int32 aisle = 7;
      case 7: {
        if (tag == 56) {
         parse_aisle:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &aisle_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_mergeStreamUrl;
        break;
      }

      // optional string mergeStreamUrl = 8;
      case 8: {
        if (tag == 66) {
         parse_mergeStreamUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mergestreamurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mergestreamurl().data(), this->mergestreamurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PKResponseReq.mergeStreamUrl"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PKResponseReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PKResponseReq)
  return false;
#undef DO_
}

void PKResponseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PKResponseReq)
  // optional string roomId = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PKResponseReq.roomId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomid(), output);
  }

  // optional string streamId = 2;
  if (this->streamid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->streamid().data(), this->streamid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PKResponseReq.streamId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->streamid(), output);
  }

  // optional int32 type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // optional string myRoomId = 4;
  if (this->myroomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->myroomid().data(), this->myroomid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PKResponseReq.myRoomId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->myroomid(), output);
  }

  // optional string userId = 5;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PKResponseReq.userId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->userid(), output);
  }

  // optional string myStreamId = 6;
  if (this->mystreamid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mystreamid().data(), this->mystreamid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PKResponseReq.myStreamId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->mystreamid(), output);
  }

  // optional int32 aisle = 7;
  if (this->aisle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->aisle(), output);
  }

  // optional string mergeStreamUrl = 8;
  if (this->mergestreamurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mergestreamurl().data(), this->mergestreamurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PKResponseReq.mergeStreamUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->mergestreamurl(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.PKResponseReq)
}

::google::protobuf::uint8* PKResponseReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PKResponseReq)
  // optional string roomId = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PKResponseReq.roomId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // optional string streamId = 2;
  if (this->streamid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->streamid().data(), this->streamid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PKResponseReq.streamId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->streamid(), target);
  }

  // optional int32 type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // optional string myRoomId = 4;
  if (this->myroomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->myroomid().data(), this->myroomid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PKResponseReq.myRoomId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->myroomid(), target);
  }

  // optional string userId = 5;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PKResponseReq.userId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->userid(), target);
  }

  // optional string myStreamId = 6;
  if (this->mystreamid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mystreamid().data(), this->mystreamid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PKResponseReq.myStreamId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->mystreamid(), target);
  }

  // optional int32 aisle = 7;
  if (this->aisle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->aisle(), target);
  }

  // optional string mergeStreamUrl = 8;
  if (this->mergestreamurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mergestreamurl().data(), this->mergestreamurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PKResponseReq.mergeStreamUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->mergestreamurl(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.PKResponseReq)
  return target;
}

size_t PKResponseReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PKResponseReq)
  size_t total_size = 0;

  // optional string roomId = 1;
  if (this->roomid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());
  }

  // optional string streamId = 2;
  if (this->streamid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->streamid());
  }

  // optional int32 type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional string myRoomId = 4;
  if (this->myroomid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->myroomid());
  }

  // optional string userId = 5;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // optional string myStreamId = 6;
  if (this->mystreamid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mystreamid());
  }

  // optional int32 aisle = 7;
  if (this->aisle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->aisle());
  }

  // optional string mergeStreamUrl = 8;
  if (this->mergestreamurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mergestreamurl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PKResponseReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PKResponseReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PKResponseReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PKResponseReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PKResponseReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PKResponseReq)
    UnsafeMergeFrom(*source);
  }
}

void PKResponseReq::MergeFrom(const PKResponseReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PKResponseReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PKResponseReq::UnsafeMergeFrom(const PKResponseReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.roomid().size() > 0) {

    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  if (from.streamid().size() > 0) {

    streamid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.streamid_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.myroomid().size() > 0) {

    myroomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.myroomid_);
  }
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.mystreamid().size() > 0) {

    mystreamid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mystreamid_);
  }
  if (from.aisle() != 0) {
    set_aisle(from.aisle());
  }
  if (from.mergestreamurl().size() > 0) {

    mergestreamurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mergestreamurl_);
  }
}

void PKResponseReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PKResponseReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PKResponseReq::CopyFrom(const PKResponseReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PKResponseReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PKResponseReq::IsInitialized() const {

  return true;
}

void PKResponseReq::Swap(PKResponseReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PKResponseReq::InternalSwap(PKResponseReq* other) {
  roomid_.Swap(&other->roomid_);
  streamid_.Swap(&other->streamid_);
  std::swap(type_, other->type_);
  myroomid_.Swap(&other->myroomid_);
  userid_.Swap(&other->userid_);
  mystreamid_.Swap(&other->mystreamid_);
  std::swap(aisle_, other->aisle_);
  mergestreamurl_.Swap(&other->mergestreamurl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PKResponseReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PKResponseReq_descriptor_;
  metadata.reflection = PKResponseReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PKResponseReq

// optional string roomId = 1;
void PKResponseReq::clear_roomid() {
  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PKResponseReq::roomid() const {
  // @@protoc_insertion_point(field_get:proto.PKResponseReq.roomId)
  return roomid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PKResponseReq::set_roomid(const ::std::string& value) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PKResponseReq.roomId)
}
void PKResponseReq::set_roomid(const char* value) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PKResponseReq.roomId)
}
void PKResponseReq::set_roomid(const char* value, size_t size) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PKResponseReq.roomId)
}
::std::string* PKResponseReq::mutable_roomid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PKResponseReq.roomId)
  return roomid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PKResponseReq::release_roomid() {
  // @@protoc_insertion_point(field_release:proto.PKResponseReq.roomId)
  
  return roomid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PKResponseReq::set_allocated_roomid(::std::string* roomid) {
  if (roomid != NULL) {
    
  } else {
    
  }
  roomid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomid);
  // @@protoc_insertion_point(field_set_allocated:proto.PKResponseReq.roomId)
}

// optional string streamId = 2;
void PKResponseReq::clear_streamid() {
  streamid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PKResponseReq::streamid() const {
  // @@protoc_insertion_point(field_get:proto.PKResponseReq.streamId)
  return streamid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PKResponseReq::set_streamid(const ::std::string& value) {
  
  streamid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PKResponseReq.streamId)
}
void PKResponseReq::set_streamid(const char* value) {
  
  streamid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PKResponseReq.streamId)
}
void PKResponseReq::set_streamid(const char* value, size_t size) {
  
  streamid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PKResponseReq.streamId)
}
::std::string* PKResponseReq::mutable_streamid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PKResponseReq.streamId)
  return streamid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PKResponseReq::release_streamid() {
  // @@protoc_insertion_point(field_release:proto.PKResponseReq.streamId)
  
  return streamid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PKResponseReq::set_allocated_streamid(::std::string* streamid) {
  if (streamid != NULL) {
    
  } else {
    
  }
  streamid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), streamid);
  // @@protoc_insertion_point(field_set_allocated:proto.PKResponseReq.streamId)
}

// optional int32 type = 3;
void PKResponseReq::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 PKResponseReq::type() const {
  // @@protoc_insertion_point(field_get:proto.PKResponseReq.type)
  return type_;
}
void PKResponseReq::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.PKResponseReq.type)
}

// optional string myRoomId = 4;
void PKResponseReq::clear_myroomid() {
  myroomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PKResponseReq::myroomid() const {
  // @@protoc_insertion_point(field_get:proto.PKResponseReq.myRoomId)
  return myroomid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PKResponseReq::set_myroomid(const ::std::string& value) {
  
  myroomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PKResponseReq.myRoomId)
}
void PKResponseReq::set_myroomid(const char* value) {
  
  myroomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PKResponseReq.myRoomId)
}
void PKResponseReq::set_myroomid(const char* value, size_t size) {
  
  myroomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PKResponseReq.myRoomId)
}
::std::string* PKResponseReq::mutable_myroomid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PKResponseReq.myRoomId)
  return myroomid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PKResponseReq::release_myroomid() {
  // @@protoc_insertion_point(field_release:proto.PKResponseReq.myRoomId)
  
  return myroomid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PKResponseReq::set_allocated_myroomid(::std::string* myroomid) {
  if (myroomid != NULL) {
    
  } else {
    
  }
  myroomid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), myroomid);
  // @@protoc_insertion_point(field_set_allocated:proto.PKResponseReq.myRoomId)
}

// optional string userId = 5;
void PKResponseReq::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PKResponseReq::userid() const {
  // @@protoc_insertion_point(field_get:proto.PKResponseReq.userId)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PKResponseReq::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PKResponseReq.userId)
}
void PKResponseReq::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PKResponseReq.userId)
}
void PKResponseReq::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PKResponseReq.userId)
}
::std::string* PKResponseReq::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PKResponseReq.userId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PKResponseReq::release_userid() {
  // @@protoc_insertion_point(field_release:proto.PKResponseReq.userId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PKResponseReq::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:proto.PKResponseReq.userId)
}

// optional string myStreamId = 6;
void PKResponseReq::clear_mystreamid() {
  mystreamid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PKResponseReq::mystreamid() const {
  // @@protoc_insertion_point(field_get:proto.PKResponseReq.myStreamId)
  return mystreamid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PKResponseReq::set_mystreamid(const ::std::string& value) {
  
  mystreamid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PKResponseReq.myStreamId)
}
void PKResponseReq::set_mystreamid(const char* value) {
  
  mystreamid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PKResponseReq.myStreamId)
}
void PKResponseReq::set_mystreamid(const char* value, size_t size) {
  
  mystreamid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PKResponseReq.myStreamId)
}
::std::string* PKResponseReq::mutable_mystreamid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PKResponseReq.myStreamId)
  return mystreamid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PKResponseReq::release_mystreamid() {
  // @@protoc_insertion_point(field_release:proto.PKResponseReq.myStreamId)
  
  return mystreamid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PKResponseReq::set_allocated_mystreamid(::std::string* mystreamid) {
  if (mystreamid != NULL) {
    
  } else {
    
  }
  mystreamid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mystreamid);
  // @@protoc_insertion_point(field_set_allocated:proto.PKResponseReq.myStreamId)
}

// optional int32 aisle = 7;
void PKResponseReq::clear_aisle() {
  aisle_ = 0;
}
::google::protobuf::int32 PKResponseReq::aisle() const {
  // @@protoc_insertion_point(field_get:proto.PKResponseReq.aisle)
  return aisle_;
}
void PKResponseReq::set_aisle(::google::protobuf::int32 value) {
  
  aisle_ = value;
  // @@protoc_insertion_point(field_set:proto.PKResponseReq.aisle)
}

// optional string mergeStreamUrl = 8;
void PKResponseReq::clear_mergestreamurl() {
  mergestreamurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PKResponseReq::mergestreamurl() const {
  // @@protoc_insertion_point(field_get:proto.PKResponseReq.mergeStreamUrl)
  return mergestreamurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PKResponseReq::set_mergestreamurl(const ::std::string& value) {
  
  mergestreamurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PKResponseReq.mergeStreamUrl)
}
void PKResponseReq::set_mergestreamurl(const char* value) {
  
  mergestreamurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PKResponseReq.mergeStreamUrl)
}
void PKResponseReq::set_mergestreamurl(const char* value, size_t size) {
  
  mergestreamurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PKResponseReq.mergeStreamUrl)
}
::std::string* PKResponseReq::mutable_mergestreamurl() {
  
  // @@protoc_insertion_point(field_mutable:proto.PKResponseReq.mergeStreamUrl)
  return mergestreamurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PKResponseReq::release_mergestreamurl() {
  // @@protoc_insertion_point(field_release:proto.PKResponseReq.mergeStreamUrl)
  
  return mergestreamurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PKResponseReq::set_allocated_mergestreamurl(::std::string* mergestreamurl) {
  if (mergestreamurl != NULL) {
    
  } else {
    
  }
  mergestreamurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mergestreamurl);
  // @@protoc_insertion_point(field_set_allocated:proto.PKResponseReq.mergeStreamUrl)
}

inline const PKResponseReq* PKResponseReq::internal_default_instance() {
  return &PKResponseReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PKResponseRes::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PKResponseRes::PKResponseRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_PKResponseByProto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PKResponseRes)
}

void PKResponseRes::InitAsDefaultInstance() {
  msg_ = const_cast< ::proto::ReturnMsg*>(
      ::proto::ReturnMsg::internal_default_instance());
}

PKResponseRes::PKResponseRes(const PKResponseRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.PKResponseRes)
}

void PKResponseRes::SharedCtor() {
  msg_ = NULL;
  _cached_size_ = 0;
}

PKResponseRes::~PKResponseRes() {
  // @@protoc_insertion_point(destructor:proto.PKResponseRes)
  SharedDtor();
}

void PKResponseRes::SharedDtor() {
  if (this != &PKResponseRes_default_instance_.get()) {
    delete msg_;
  }
}

void PKResponseRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PKResponseRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PKResponseRes_descriptor_;
}

const PKResponseRes& PKResponseRes::default_instance() {
  protobuf_InitDefaults_PKResponseByProto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PKResponseRes> PKResponseRes_default_instance_;

PKResponseRes* PKResponseRes::New(::google::protobuf::Arena* arena) const {
  PKResponseRes* n = new PKResponseRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PKResponseRes::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PKResponseRes)
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}

bool PKResponseRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PKResponseRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.ReturnMsg msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PKResponseRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PKResponseRes)
  return false;
#undef DO_
}

void PKResponseRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PKResponseRes)
  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_, output);
  }

  // @@protoc_insertion_point(serialize_end:proto.PKResponseRes)
}

::google::protobuf::uint8* PKResponseRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PKResponseRes)
  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.PKResponseRes)
  return target;
}

size_t PKResponseRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PKResponseRes)
  size_t total_size = 0;

  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PKResponseRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PKResponseRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PKResponseRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PKResponseRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PKResponseRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PKResponseRes)
    UnsafeMergeFrom(*source);
  }
}

void PKResponseRes::MergeFrom(const PKResponseRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PKResponseRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PKResponseRes::UnsafeMergeFrom(const PKResponseRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_msg()) {
    mutable_msg()->::proto::ReturnMsg::MergeFrom(from.msg());
  }
}

void PKResponseRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PKResponseRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PKResponseRes::CopyFrom(const PKResponseRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PKResponseRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PKResponseRes::IsInitialized() const {

  return true;
}

void PKResponseRes::Swap(PKResponseRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PKResponseRes::InternalSwap(PKResponseRes* other) {
  std::swap(msg_, other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PKResponseRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PKResponseRes_descriptor_;
  metadata.reflection = PKResponseRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PKResponseRes

// optional .proto.ReturnMsg msg = 1;
bool PKResponseRes::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
void PKResponseRes::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::proto::ReturnMsg& PKResponseRes::msg() const {
  // @@protoc_insertion_point(field_get:proto.PKResponseRes.msg)
  return msg_ != NULL ? *msg_
                         : *::proto::ReturnMsg::internal_default_instance();
}
::proto::ReturnMsg* PKResponseRes::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::proto::ReturnMsg;
  }
  // @@protoc_insertion_point(field_mutable:proto.PKResponseRes.msg)
  return msg_;
}
::proto::ReturnMsg* PKResponseRes::release_msg() {
  // @@protoc_insertion_point(field_release:proto.PKResponseRes.msg)
  
  ::proto::ReturnMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
void PKResponseRes::set_allocated_msg(::proto::ReturnMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PKResponseRes.msg)
}

inline const PKResponseRes* PKResponseRes::internal_default_instance() {
  return &PKResponseRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
