// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Entity.proto

#ifndef PROTOBUF_Entity_2eproto__INCLUDED
#define PROTOBUF_Entity_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Entity_2eproto();
void protobuf_InitDefaults_Entity_2eproto();
void protobuf_AssignDesc_Entity_2eproto();
void protobuf_ShutdownFile_Entity_2eproto();

class ReturnMsg;
class UserinfoMsg;

// ===================================================================

class ReturnMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReturnMsg) */ {
 public:
  ReturnMsg();
  virtual ~ReturnMsg();

  ReturnMsg(const ReturnMsg& from);

  inline ReturnMsg& operator=(const ReturnMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnMsg& default_instance();

  static const ReturnMsg* internal_default_instance();

  void Swap(ReturnMsg* other);

  // implements Message ----------------------------------------------

  inline ReturnMsg* New() const { return New(NULL); }

  ReturnMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnMsg& from);
  void MergeFrom(const ReturnMsg& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReturnMsg* other);
  void UnsafeMergeFrom(const ReturnMsg& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // optional string msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:proto.ReturnMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_Entity_2eproto_impl();
  friend void  protobuf_AddDesc_Entity_2eproto_impl();
  friend void protobuf_AssignDesc_Entity_2eproto();
  friend void protobuf_ShutdownFile_Entity_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReturnMsg> ReturnMsg_default_instance_;

// -------------------------------------------------------------------

class UserinfoMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UserinfoMsg) */ {
 public:
  UserinfoMsg();
  virtual ~UserinfoMsg();

  UserinfoMsg(const UserinfoMsg& from);

  inline UserinfoMsg& operator=(const UserinfoMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserinfoMsg& default_instance();

  static const UserinfoMsg* internal_default_instance();

  void Swap(UserinfoMsg* other);

  // implements Message ----------------------------------------------

  inline UserinfoMsg* New() const { return New(NULL); }

  UserinfoMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserinfoMsg& from);
  void MergeFrom(const UserinfoMsg& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserinfoMsg* other);
  void UnsafeMergeFrom(const UserinfoMsg& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // optional string nickname = 2;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string portrait = 3;
  void clear_portrait();
  static const int kPortraitFieldNumber = 3;
  const ::std::string& portrait() const;
  void set_portrait(const ::std::string& value);
  void set_portrait(const char* value);
  void set_portrait(const char* value, size_t size);
  ::std::string* mutable_portrait();
  ::std::string* release_portrait();
  void set_allocated_portrait(::std::string* portrait);

  // optional int32 sex = 4;
  void clear_sex();
  static const int kSexFieldNumber = 4;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional int32 state = 5;
  void clear_state();
  static const int kStateFieldNumber = 5;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.UserinfoMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr portrait_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_Entity_2eproto_impl();
  friend void  protobuf_AddDesc_Entity_2eproto_impl();
  friend void protobuf_AssignDesc_Entity_2eproto();
  friend void protobuf_ShutdownFile_Entity_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserinfoMsg> UserinfoMsg_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ReturnMsg

// optional int32 code = 1;
inline void ReturnMsg::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 ReturnMsg::code() const {
  // @@protoc_insertion_point(field_get:proto.ReturnMsg.code)
  return code_;
}
inline void ReturnMsg::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:proto.ReturnMsg.code)
}

// optional string msg = 2;
inline void ReturnMsg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReturnMsg::msg() const {
  // @@protoc_insertion_point(field_get:proto.ReturnMsg.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReturnMsg::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ReturnMsg.msg)
}
inline void ReturnMsg::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ReturnMsg.msg)
}
inline void ReturnMsg::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ReturnMsg.msg)
}
inline ::std::string* ReturnMsg::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.ReturnMsg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReturnMsg::release_msg() {
  // @@protoc_insertion_point(field_release:proto.ReturnMsg.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReturnMsg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.ReturnMsg.msg)
}

inline const ReturnMsg* ReturnMsg::internal_default_instance() {
  return &ReturnMsg_default_instance_.get();
}
// -------------------------------------------------------------------

// UserinfoMsg

// optional string userId = 1;
inline void UserinfoMsg::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserinfoMsg::userid() const {
  // @@protoc_insertion_point(field_get:proto.UserinfoMsg.userId)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserinfoMsg::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.UserinfoMsg.userId)
}
inline void UserinfoMsg::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.UserinfoMsg.userId)
}
inline void UserinfoMsg::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.UserinfoMsg.userId)
}
inline ::std::string* UserinfoMsg::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:proto.UserinfoMsg.userId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserinfoMsg::release_userid() {
  // @@protoc_insertion_point(field_release:proto.UserinfoMsg.userId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserinfoMsg::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:proto.UserinfoMsg.userId)
}

// optional string nickname = 2;
inline void UserinfoMsg::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserinfoMsg::nickname() const {
  // @@protoc_insertion_point(field_get:proto.UserinfoMsg.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserinfoMsg::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.UserinfoMsg.nickname)
}
inline void UserinfoMsg::set_nickname(const char* value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.UserinfoMsg.nickname)
}
inline void UserinfoMsg::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.UserinfoMsg.nickname)
}
inline ::std::string* UserinfoMsg::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.UserinfoMsg.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserinfoMsg::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.UserinfoMsg.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserinfoMsg::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.UserinfoMsg.nickname)
}

// optional string portrait = 3;
inline void UserinfoMsg::clear_portrait() {
  portrait_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserinfoMsg::portrait() const {
  // @@protoc_insertion_point(field_get:proto.UserinfoMsg.portrait)
  return portrait_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserinfoMsg::set_portrait(const ::std::string& value) {
  
  portrait_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.UserinfoMsg.portrait)
}
inline void UserinfoMsg::set_portrait(const char* value) {
  
  portrait_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.UserinfoMsg.portrait)
}
inline void UserinfoMsg::set_portrait(const char* value, size_t size) {
  
  portrait_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.UserinfoMsg.portrait)
}
inline ::std::string* UserinfoMsg::mutable_portrait() {
  
  // @@protoc_insertion_point(field_mutable:proto.UserinfoMsg.portrait)
  return portrait_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserinfoMsg::release_portrait() {
  // @@protoc_insertion_point(field_release:proto.UserinfoMsg.portrait)
  
  return portrait_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserinfoMsg::set_allocated_portrait(::std::string* portrait) {
  if (portrait != NULL) {
    
  } else {
    
  }
  portrait_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portrait);
  // @@protoc_insertion_point(field_set_allocated:proto.UserinfoMsg.portrait)
}

// optional int32 sex = 4;
inline void UserinfoMsg::clear_sex() {
  sex_ = 0;
}
inline ::google::protobuf::int32 UserinfoMsg::sex() const {
  // @@protoc_insertion_point(field_get:proto.UserinfoMsg.sex)
  return sex_;
}
inline void UserinfoMsg::set_sex(::google::protobuf::int32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:proto.UserinfoMsg.sex)
}

// optional int32 state = 5;
inline void UserinfoMsg::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 UserinfoMsg::state() const {
  // @@protoc_insertion_point(field_get:proto.UserinfoMsg.state)
  return state_;
}
inline void UserinfoMsg::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.UserinfoMsg.state)
}

inline const UserinfoMsg* UserinfoMsg::internal_default_instance() {
  return &UserinfoMsg_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Entity_2eproto__INCLUDED
