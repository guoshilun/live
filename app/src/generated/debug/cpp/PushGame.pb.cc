// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PushGame.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PushGame.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {

namespace {

const ::google::protobuf::Descriptor* PushGameMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PushGameMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PushGame_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_PushGame_2eproto() {
  protobuf_AddDesc_PushGame_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PushGame.proto");
  GOOGLE_CHECK(file != NULL);
  PushGameMessage_descriptor_ = file->message_type(0);
  static const int PushGameMessage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushGameMessage, front_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushGameMessage, contrary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushGameMessage, maxbet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushGameMessage, time_),
  };
  PushGameMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PushGameMessage_descriptor_,
      PushGameMessage::internal_default_instance(),
      PushGameMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(PushGameMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushGameMessage, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PushGame_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PushGameMessage_descriptor_, PushGameMessage::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PushGame_2eproto() {
  PushGameMessage_default_instance_.Shutdown();
  delete PushGameMessage_reflection_;
}

void protobuf_InitDefaults_PushGame_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto::protobuf_InitDefaults_Entity_2eproto();
  PushGameMessage_default_instance_.DefaultConstruct();
  PushGameMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_PushGame_2eproto_once_);
void protobuf_InitDefaults_PushGame_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_PushGame_2eproto_once_,
                 &protobuf_InitDefaults_PushGame_2eproto_impl);
}
void protobuf_AddDesc_PushGame_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_PushGame_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016PushGame.proto\022\005proto\032\014Entity.proto\"P\n"
    "\017PushGameMessage\022\r\n\005front\030\002 \001(\005\022\020\n\010contr"
    "ary\030\003 \001(\005\022\016\n\006maxBet\030\004 \001(\005\022\014\n\004time\030\010 \001(\005B"
    " \n\036com.sencorsta.ids.common.protob\006proto"
    "3", 161);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PushGame.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_AddDesc_Entity_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PushGame_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_PushGame_2eproto_once_);
void protobuf_AddDesc_PushGame_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_PushGame_2eproto_once_,
                 &protobuf_AddDesc_PushGame_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PushGame_2eproto {
  StaticDescriptorInitializer_PushGame_2eproto() {
    protobuf_AddDesc_PushGame_2eproto();
  }
} static_descriptor_initializer_PushGame_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushGameMessage::kFrontFieldNumber;
const int PushGameMessage::kContraryFieldNumber;
const int PushGameMessage::kMaxBetFieldNumber;
const int PushGameMessage::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushGameMessage::PushGameMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_PushGame_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PushGameMessage)
}

void PushGameMessage::InitAsDefaultInstance() {
}

PushGameMessage::PushGameMessage(const PushGameMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.PushGameMessage)
}

void PushGameMessage::SharedCtor() {
  ::memset(&front_, 0, reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&front_) + sizeof(time_));
  _cached_size_ = 0;
}

PushGameMessage::~PushGameMessage() {
  // @@protoc_insertion_point(destructor:proto.PushGameMessage)
  SharedDtor();
}

void PushGameMessage::SharedDtor() {
}

void PushGameMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushGameMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PushGameMessage_descriptor_;
}

const PushGameMessage& PushGameMessage::default_instance() {
  protobuf_InitDefaults_PushGame_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PushGameMessage> PushGameMessage_default_instance_;

PushGameMessage* PushGameMessage::New(::google::protobuf::Arena* arena) const {
  PushGameMessage* n = new PushGameMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PushGameMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PushGameMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PushGameMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PushGameMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(front_, time_);

#undef ZR_HELPER_
#undef ZR_

}

bool PushGameMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PushGameMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 front = 2;
      case 2: {
        if (tag == 16) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &front_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_contrary;
        break;
      }

      // optional int32 contrary = 3;
      case 3: {
        if (tag == 24) {
         parse_contrary:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &contrary_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_maxBet;
        break;
      }

      // optional int32 maxBet = 4;
      case 4: {
        if (tag == 32) {
         parse_maxBet:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxbet_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_time;
        break;
      }

      // optional int32 time = 8;
      case 8: {
        if (tag == 64) {
         parse_time:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PushGameMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PushGameMessage)
  return false;
#undef DO_
}

void PushGameMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PushGameMessage)
  // optional int32 front = 2;
  if (this->front() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->front(), output);
  }

  // optional int32 contrary = 3;
  if (this->contrary() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->contrary(), output);
  }

  // optional int32 maxBet = 4;
  if (this->maxbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->maxbet(), output);
  }

  // optional int32 time = 8;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->time(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.PushGameMessage)
}

::google::protobuf::uint8* PushGameMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PushGameMessage)
  // optional int32 front = 2;
  if (this->front() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->front(), target);
  }

  // optional int32 contrary = 3;
  if (this->contrary() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->contrary(), target);
  }

  // optional int32 maxBet = 4;
  if (this->maxbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->maxbet(), target);
  }

  // optional int32 time = 8;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.PushGameMessage)
  return target;
}

size_t PushGameMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PushGameMessage)
  size_t total_size = 0;

  // optional int32 front = 2;
  if (this->front() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->front());
  }

  // optional int32 contrary = 3;
  if (this->contrary() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->contrary());
  }

  // optional int32 maxBet = 4;
  if (this->maxbet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxbet());
  }

  // optional int32 time = 8;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushGameMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PushGameMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PushGameMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushGameMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PushGameMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PushGameMessage)
    UnsafeMergeFrom(*source);
  }
}

void PushGameMessage::MergeFrom(const PushGameMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PushGameMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PushGameMessage::UnsafeMergeFrom(const PushGameMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.front() != 0) {
    set_front(from.front());
  }
  if (from.contrary() != 0) {
    set_contrary(from.contrary());
  }
  if (from.maxbet() != 0) {
    set_maxbet(from.maxbet());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void PushGameMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PushGameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushGameMessage::CopyFrom(const PushGameMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PushGameMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PushGameMessage::IsInitialized() const {

  return true;
}

void PushGameMessage::Swap(PushGameMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushGameMessage::InternalSwap(PushGameMessage* other) {
  std::swap(front_, other->front_);
  std::swap(contrary_, other->contrary_);
  std::swap(maxbet_, other->maxbet_);
  std::swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PushGameMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PushGameMessage_descriptor_;
  metadata.reflection = PushGameMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PushGameMessage

// optional int32 front = 2;
void PushGameMessage::clear_front() {
  front_ = 0;
}
::google::protobuf::int32 PushGameMessage::front() const {
  // @@protoc_insertion_point(field_get:proto.PushGameMessage.front)
  return front_;
}
void PushGameMessage::set_front(::google::protobuf::int32 value) {
  
  front_ = value;
  // @@protoc_insertion_point(field_set:proto.PushGameMessage.front)
}

// optional int32 contrary = 3;
void PushGameMessage::clear_contrary() {
  contrary_ = 0;
}
::google::protobuf::int32 PushGameMessage::contrary() const {
  // @@protoc_insertion_point(field_get:proto.PushGameMessage.contrary)
  return contrary_;
}
void PushGameMessage::set_contrary(::google::protobuf::int32 value) {
  
  contrary_ = value;
  // @@protoc_insertion_point(field_set:proto.PushGameMessage.contrary)
}

// optional int32 maxBet = 4;
void PushGameMessage::clear_maxbet() {
  maxbet_ = 0;
}
::google::protobuf::int32 PushGameMessage::maxbet() const {
  // @@protoc_insertion_point(field_get:proto.PushGameMessage.maxBet)
  return maxbet_;
}
void PushGameMessage::set_maxbet(::google::protobuf::int32 value) {
  
  maxbet_ = value;
  // @@protoc_insertion_point(field_set:proto.PushGameMessage.maxBet)
}

// optional int32 time = 8;
void PushGameMessage::clear_time() {
  time_ = 0;
}
::google::protobuf::int32 PushGameMessage::time() const {
  // @@protoc_insertion_point(field_get:proto.PushGameMessage.time)
  return time_;
}
void PushGameMessage::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.PushGameMessage.time)
}

inline const PushGameMessage* PushGameMessage::internal_default_instance() {
  return &PushGameMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
