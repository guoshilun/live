// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PushPKResult.proto

#ifndef PROTOBUF_PushPKResult_2eproto__INCLUDED
#define PROTOBUF_PushPKResult_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Entity.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_PushPKResult_2eproto();
void protobuf_InitDefaults_PushPKResult_2eproto();
void protobuf_AssignDesc_PushPKResult_2eproto();
void protobuf_ShutdownFile_PushPKResult_2eproto();

class PushPKResultMessage;

// ===================================================================

class PushPKResultMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PushPKResultMessage) */ {
 public:
  PushPKResultMessage();
  virtual ~PushPKResultMessage();

  PushPKResultMessage(const PushPKResultMessage& from);

  inline PushPKResultMessage& operator=(const PushPKResultMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushPKResultMessage& default_instance();

  static const PushPKResultMessage* internal_default_instance();

  void Swap(PushPKResultMessage* other);

  // implements Message ----------------------------------------------

  inline PushPKResultMessage* New() const { return New(NULL); }

  PushPKResultMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushPKResultMessage& from);
  void MergeFrom(const PushPKResultMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PushPKResultMessage* other);
  void UnsafeMergeFrom(const PushPKResultMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string victoryUserId = 1;
  void clear_victoryuserid();
  static const int kVictoryUserIdFieldNumber = 1;
  const ::std::string& victoryuserid() const;
  void set_victoryuserid(const ::std::string& value);
  void set_victoryuserid(const char* value);
  void set_victoryuserid(const char* value, size_t size);
  ::std::string* mutable_victoryuserid();
  ::std::string* release_victoryuserid();
  void set_allocated_victoryuserid(::std::string* victoryuserid);

  // optional string picture = 2;
  void clear_picture();
  static const int kPictureFieldNumber = 2;
  const ::std::string& picture() const;
  void set_picture(const ::std::string& value);
  void set_picture(const char* value);
  void set_picture(const char* value, size_t size);
  ::std::string* mutable_picture();
  ::std::string* release_picture();
  void set_allocated_picture(::std::string* picture);

  // optional int32 condition = 3;
  void clear_condition();
  static const int kConditionFieldNumber = 3;
  ::google::protobuf::int32 condition() const;
  void set_condition(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PushPKResultMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr victoryuserid_;
  ::google::protobuf::internal::ArenaStringPtr picture_;
  ::google::protobuf::int32 condition_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_PushPKResult_2eproto_impl();
  friend void  protobuf_AddDesc_PushPKResult_2eproto_impl();
  friend void protobuf_AssignDesc_PushPKResult_2eproto();
  friend void protobuf_ShutdownFile_PushPKResult_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PushPKResultMessage> PushPKResultMessage_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PushPKResultMessage

// optional string victoryUserId = 1;
inline void PushPKResultMessage::clear_victoryuserid() {
  victoryuserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushPKResultMessage::victoryuserid() const {
  // @@protoc_insertion_point(field_get:proto.PushPKResultMessage.victoryUserId)
  return victoryuserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushPKResultMessage::set_victoryuserid(const ::std::string& value) {
  
  victoryuserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PushPKResultMessage.victoryUserId)
}
inline void PushPKResultMessage::set_victoryuserid(const char* value) {
  
  victoryuserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PushPKResultMessage.victoryUserId)
}
inline void PushPKResultMessage::set_victoryuserid(const char* value, size_t size) {
  
  victoryuserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PushPKResultMessage.victoryUserId)
}
inline ::std::string* PushPKResultMessage::mutable_victoryuserid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PushPKResultMessage.victoryUserId)
  return victoryuserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushPKResultMessage::release_victoryuserid() {
  // @@protoc_insertion_point(field_release:proto.PushPKResultMessage.victoryUserId)
  
  return victoryuserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushPKResultMessage::set_allocated_victoryuserid(::std::string* victoryuserid) {
  if (victoryuserid != NULL) {
    
  } else {
    
  }
  victoryuserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), victoryuserid);
  // @@protoc_insertion_point(field_set_allocated:proto.PushPKResultMessage.victoryUserId)
}

// optional string picture = 2;
inline void PushPKResultMessage::clear_picture() {
  picture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PushPKResultMessage::picture() const {
  // @@protoc_insertion_point(field_get:proto.PushPKResultMessage.picture)
  return picture_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushPKResultMessage::set_picture(const ::std::string& value) {
  
  picture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PushPKResultMessage.picture)
}
inline void PushPKResultMessage::set_picture(const char* value) {
  
  picture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PushPKResultMessage.picture)
}
inline void PushPKResultMessage::set_picture(const char* value, size_t size) {
  
  picture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PushPKResultMessage.picture)
}
inline ::std::string* PushPKResultMessage::mutable_picture() {
  
  // @@protoc_insertion_point(field_mutable:proto.PushPKResultMessage.picture)
  return picture_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PushPKResultMessage::release_picture() {
  // @@protoc_insertion_point(field_release:proto.PushPKResultMessage.picture)
  
  return picture_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PushPKResultMessage::set_allocated_picture(::std::string* picture) {
  if (picture != NULL) {
    
  } else {
    
  }
  picture_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), picture);
  // @@protoc_insertion_point(field_set_allocated:proto.PushPKResultMessage.picture)
}

// optional int32 condition = 3;
inline void PushPKResultMessage::clear_condition() {
  condition_ = 0;
}
inline ::google::protobuf::int32 PushPKResultMessage::condition() const {
  // @@protoc_insertion_point(field_get:proto.PushPKResultMessage.condition)
  return condition_;
}
inline void PushPKResultMessage::set_condition(::google::protobuf::int32 value) {
  
  condition_ = value;
  // @@protoc_insertion_point(field_set:proto.PushPKResultMessage.condition)
}

inline const PushPKResultMessage* PushPKResultMessage::internal_default_instance() {
  return &PushPKResultMessage_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PushPKResult_2eproto__INCLUDED
