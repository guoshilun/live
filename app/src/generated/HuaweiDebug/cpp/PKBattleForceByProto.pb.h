// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PKBattleForceByProto.proto

#ifndef PROTOBUF_PKBattleForceByProto_2eproto__INCLUDED
#define PROTOBUF_PKBattleForceByProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Entity.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_PKBattleForceByProto_2eproto();
void protobuf_InitDefaults_PKBattleForceByProto_2eproto();
void protobuf_AssignDesc_PKBattleForceByProto_2eproto();
void protobuf_ShutdownFile_PKBattleForceByProto_2eproto();

class PKBattleForce;

// ===================================================================

class PKBattleForce : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PKBattleForce) */ {
 public:
  PKBattleForce();
  virtual ~PKBattleForce();

  PKBattleForce(const PKBattleForce& from);

  inline PKBattleForce& operator=(const PKBattleForce& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PKBattleForce& default_instance();

  static const PKBattleForce* internal_default_instance();

  void Swap(PKBattleForce* other);

  // implements Message ----------------------------------------------

  inline PKBattleForce* New() const { return New(NULL); }

  PKBattleForce* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PKBattleForce& from);
  void MergeFrom(const PKBattleForce& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PKBattleForce* other);
  void UnsafeMergeFrom(const PKBattleForce& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string aRoomId = 1;
  void clear_aroomid();
  static const int kARoomIdFieldNumber = 1;
  const ::std::string& aroomid() const;
  void set_aroomid(const ::std::string& value);
  void set_aroomid(const char* value);
  void set_aroomid(const char* value, size_t size);
  ::std::string* mutable_aroomid();
  ::std::string* release_aroomid();
  void set_allocated_aroomid(::std::string* aroomid);

  // optional uint64 aReceiveNumber = 2;
  void clear_areceivenumber();
  static const int kAReceiveNumberFieldNumber = 2;
  ::google::protobuf::uint64 areceivenumber() const;
  void set_areceivenumber(::google::protobuf::uint64 value);

  // optional string aMessage = 3;
  void clear_amessage();
  static const int kAMessageFieldNumber = 3;
  const ::std::string& amessage() const;
  void set_amessage(const ::std::string& value);
  void set_amessage(const char* value);
  void set_amessage(const char* value, size_t size);
  ::std::string* mutable_amessage();
  ::std::string* release_amessage();
  void set_allocated_amessage(::std::string* amessage);

  // optional string bRoomId = 4;
  void clear_broomid();
  static const int kBRoomIdFieldNumber = 4;
  const ::std::string& broomid() const;
  void set_broomid(const ::std::string& value);
  void set_broomid(const char* value);
  void set_broomid(const char* value, size_t size);
  ::std::string* mutable_broomid();
  ::std::string* release_broomid();
  void set_allocated_broomid(::std::string* broomid);

  // optional uint64 bReceiveNumber = 5;
  void clear_breceivenumber();
  static const int kBReceiveNumberFieldNumber = 5;
  ::google::protobuf::uint64 breceivenumber() const;
  void set_breceivenumber(::google::protobuf::uint64 value);

  // optional string bMessage = 6;
  void clear_bmessage();
  static const int kBMessageFieldNumber = 6;
  const ::std::string& bmessage() const;
  void set_bmessage(const ::std::string& value);
  void set_bmessage(const char* value);
  void set_bmessage(const char* value, size_t size);
  ::std::string* mutable_bmessage();
  ::std::string* release_bmessage();
  void set_allocated_bmessage(::std::string* bmessage);

  // @@protoc_insertion_point(class_scope:proto.PKBattleForce)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr aroomid_;
  ::google::protobuf::internal::ArenaStringPtr amessage_;
  ::google::protobuf::internal::ArenaStringPtr broomid_;
  ::google::protobuf::internal::ArenaStringPtr bmessage_;
  ::google::protobuf::uint64 areceivenumber_;
  ::google::protobuf::uint64 breceivenumber_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_PKBattleForceByProto_2eproto_impl();
  friend void  protobuf_AddDesc_PKBattleForceByProto_2eproto_impl();
  friend void protobuf_AssignDesc_PKBattleForceByProto_2eproto();
  friend void protobuf_ShutdownFile_PKBattleForceByProto_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PKBattleForce> PKBattleForce_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PKBattleForce

// optional string aRoomId = 1;
inline void PKBattleForce::clear_aroomid() {
  aroomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PKBattleForce::aroomid() const {
  // @@protoc_insertion_point(field_get:proto.PKBattleForce.aRoomId)
  return aroomid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PKBattleForce::set_aroomid(const ::std::string& value) {
  
  aroomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PKBattleForce.aRoomId)
}
inline void PKBattleForce::set_aroomid(const char* value) {
  
  aroomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PKBattleForce.aRoomId)
}
inline void PKBattleForce::set_aroomid(const char* value, size_t size) {
  
  aroomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PKBattleForce.aRoomId)
}
inline ::std::string* PKBattleForce::mutable_aroomid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PKBattleForce.aRoomId)
  return aroomid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PKBattleForce::release_aroomid() {
  // @@protoc_insertion_point(field_release:proto.PKBattleForce.aRoomId)
  
  return aroomid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PKBattleForce::set_allocated_aroomid(::std::string* aroomid) {
  if (aroomid != NULL) {
    
  } else {
    
  }
  aroomid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aroomid);
  // @@protoc_insertion_point(field_set_allocated:proto.PKBattleForce.aRoomId)
}

// optional uint64 aReceiveNumber = 2;
inline void PKBattleForce::clear_areceivenumber() {
  areceivenumber_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PKBattleForce::areceivenumber() const {
  // @@protoc_insertion_point(field_get:proto.PKBattleForce.aReceiveNumber)
  return areceivenumber_;
}
inline void PKBattleForce::set_areceivenumber(::google::protobuf::uint64 value) {
  
  areceivenumber_ = value;
  // @@protoc_insertion_point(field_set:proto.PKBattleForce.aReceiveNumber)
}

// optional string aMessage = 3;
inline void PKBattleForce::clear_amessage() {
  amessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PKBattleForce::amessage() const {
  // @@protoc_insertion_point(field_get:proto.PKBattleForce.aMessage)
  return amessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PKBattleForce::set_amessage(const ::std::string& value) {
  
  amessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PKBattleForce.aMessage)
}
inline void PKBattleForce::set_amessage(const char* value) {
  
  amessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PKBattleForce.aMessage)
}
inline void PKBattleForce::set_amessage(const char* value, size_t size) {
  
  amessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PKBattleForce.aMessage)
}
inline ::std::string* PKBattleForce::mutable_amessage() {
  
  // @@protoc_insertion_point(field_mutable:proto.PKBattleForce.aMessage)
  return amessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PKBattleForce::release_amessage() {
  // @@protoc_insertion_point(field_release:proto.PKBattleForce.aMessage)
  
  return amessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PKBattleForce::set_allocated_amessage(::std::string* amessage) {
  if (amessage != NULL) {
    
  } else {
    
  }
  amessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), amessage);
  // @@protoc_insertion_point(field_set_allocated:proto.PKBattleForce.aMessage)
}

// optional string bRoomId = 4;
inline void PKBattleForce::clear_broomid() {
  broomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PKBattleForce::broomid() const {
  // @@protoc_insertion_point(field_get:proto.PKBattleForce.bRoomId)
  return broomid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PKBattleForce::set_broomid(const ::std::string& value) {
  
  broomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PKBattleForce.bRoomId)
}
inline void PKBattleForce::set_broomid(const char* value) {
  
  broomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PKBattleForce.bRoomId)
}
inline void PKBattleForce::set_broomid(const char* value, size_t size) {
  
  broomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PKBattleForce.bRoomId)
}
inline ::std::string* PKBattleForce::mutable_broomid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PKBattleForce.bRoomId)
  return broomid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PKBattleForce::release_broomid() {
  // @@protoc_insertion_point(field_release:proto.PKBattleForce.bRoomId)
  
  return broomid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PKBattleForce::set_allocated_broomid(::std::string* broomid) {
  if (broomid != NULL) {
    
  } else {
    
  }
  broomid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), broomid);
  // @@protoc_insertion_point(field_set_allocated:proto.PKBattleForce.bRoomId)
}

// optional uint64 bReceiveNumber = 5;
inline void PKBattleForce::clear_breceivenumber() {
  breceivenumber_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PKBattleForce::breceivenumber() const {
  // @@protoc_insertion_point(field_get:proto.PKBattleForce.bReceiveNumber)
  return breceivenumber_;
}
inline void PKBattleForce::set_breceivenumber(::google::protobuf::uint64 value) {
  
  breceivenumber_ = value;
  // @@protoc_insertion_point(field_set:proto.PKBattleForce.bReceiveNumber)
}

// optional string bMessage = 6;
inline void PKBattleForce::clear_bmessage() {
  bmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PKBattleForce::bmessage() const {
  // @@protoc_insertion_point(field_get:proto.PKBattleForce.bMessage)
  return bmessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PKBattleForce::set_bmessage(const ::std::string& value) {
  
  bmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PKBattleForce.bMessage)
}
inline void PKBattleForce::set_bmessage(const char* value) {
  
  bmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PKBattleForce.bMessage)
}
inline void PKBattleForce::set_bmessage(const char* value, size_t size) {
  
  bmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PKBattleForce.bMessage)
}
inline ::std::string* PKBattleForce::mutable_bmessage() {
  
  // @@protoc_insertion_point(field_mutable:proto.PKBattleForce.bMessage)
  return bmessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PKBattleForce::release_bmessage() {
  // @@protoc_insertion_point(field_release:proto.PKBattleForce.bMessage)
  
  return bmessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PKBattleForce::set_allocated_bmessage(::std::string* bmessage) {
  if (bmessage != NULL) {
    
  } else {
    
  }
  bmessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bmessage);
  // @@protoc_insertion_point(field_set_allocated:proto.PKBattleForce.bMessage)
}

inline const PKBattleForce* PKBattleForce::internal_default_instance() {
  return &PKBattleForce_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PKBattleForceByProto_2eproto__INCLUDED
