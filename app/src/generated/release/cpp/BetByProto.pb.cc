// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BetByProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BetByProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {

namespace {

const ::google::protobuf::Descriptor* BetMessageReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BetMessageReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BetMessageRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BetMessageRes_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_BetByProto_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_BetByProto_2eproto() {
  protobuf_AddDesc_BetByProto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "BetByProto.proto");
  GOOGLE_CHECK(file != NULL);
  BetMessageReq_descriptor_ = file->message_type(0);
  static const int BetMessageReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BetMessageReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BetMessageReq, bet_),
  };
  BetMessageReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BetMessageReq_descriptor_,
      BetMessageReq::internal_default_instance(),
      BetMessageReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(BetMessageReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BetMessageReq, _internal_metadata_));
  BetMessageRes_descriptor_ = file->message_type(1);
  static const int BetMessageRes_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BetMessageRes, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BetMessageRes, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BetMessageRes, frontbet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BetMessageRes, contrarybet_),
  };
  BetMessageRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BetMessageRes_descriptor_,
      BetMessageRes::internal_default_instance(),
      BetMessageRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(BetMessageRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BetMessageRes, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_BetByProto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BetMessageReq_descriptor_, BetMessageReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BetMessageRes_descriptor_, BetMessageRes::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_BetByProto_2eproto() {
  BetMessageReq_default_instance_.Shutdown();
  delete BetMessageReq_reflection_;
  BetMessageRes_default_instance_.Shutdown();
  delete BetMessageRes_reflection_;
}

void protobuf_InitDefaults_BetByProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto::protobuf_InitDefaults_Entity_2eproto();
  BetMessageReq_default_instance_.DefaultConstruct();
  BetMessageRes_default_instance_.DefaultConstruct();
  BetMessageReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  BetMessageRes_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_BetByProto_2eproto_once_);
void protobuf_InitDefaults_BetByProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_BetByProto_2eproto_once_,
                 &protobuf_InitDefaults_BetByProto_2eproto_impl);
}
void protobuf_AddDesc_BetByProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_BetByProto_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020BetByProto.proto\022\005proto\032\014Entity.proto\""
    "*\n\rBetMessageReq\022\014\n\004type\030\001 \001(\005\022\013\n\003bet\030\002 "
    "\001(\005\"d\n\rBetMessageRes\022\035\n\003msg\030\001 \001(\0132\020.prot"
    "o.ReturnMsg\022\r\n\005money\030\002 \001(\005\022\020\n\010frontBet\030\005"
    " \001(\005\022\023\n\013contraryBet\030\006 \001(\005B \n\036com.sencors"
    "ta.ids.common.protob\006proto3", 227);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BetByProto.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_AddDesc_Entity_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BetByProto_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_BetByProto_2eproto_once_);
void protobuf_AddDesc_BetByProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_BetByProto_2eproto_once_,
                 &protobuf_AddDesc_BetByProto_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BetByProto_2eproto {
  StaticDescriptorInitializer_BetByProto_2eproto() {
    protobuf_AddDesc_BetByProto_2eproto();
  }
} static_descriptor_initializer_BetByProto_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BetMessageReq::kTypeFieldNumber;
const int BetMessageReq::kBetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BetMessageReq::BetMessageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_BetByProto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BetMessageReq)
}

void BetMessageReq::InitAsDefaultInstance() {
}

BetMessageReq::BetMessageReq(const BetMessageReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.BetMessageReq)
}

void BetMessageReq::SharedCtor() {
  ::memset(&type_, 0, reinterpret_cast<char*>(&bet_) -
    reinterpret_cast<char*>(&type_) + sizeof(bet_));
  _cached_size_ = 0;
}

BetMessageReq::~BetMessageReq() {
  // @@protoc_insertion_point(destructor:proto.BetMessageReq)
  SharedDtor();
}

void BetMessageReq::SharedDtor() {
}

void BetMessageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BetMessageReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BetMessageReq_descriptor_;
}

const BetMessageReq& BetMessageReq::default_instance() {
  protobuf_InitDefaults_BetByProto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BetMessageReq> BetMessageReq_default_instance_;

BetMessageReq* BetMessageReq::New(::google::protobuf::Arena* arena) const {
  BetMessageReq* n = new BetMessageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BetMessageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BetMessageReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BetMessageReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BetMessageReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, bet_);

#undef ZR_HELPER_
#undef ZR_

}

bool BetMessageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BetMessageReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_bet;
        break;
      }

      // optional int32 bet = 2;
      case 2: {
        if (tag == 16) {
         parse_bet:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bet_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BetMessageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BetMessageReq)
  return false;
#undef DO_
}

void BetMessageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BetMessageReq)
  // optional int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 bet = 2;
  if (this->bet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bet(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.BetMessageReq)
}

::google::protobuf::uint8* BetMessageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BetMessageReq)
  // optional int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 bet = 2;
  if (this->bet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bet(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.BetMessageReq)
  return target;
}

size_t BetMessageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BetMessageReq)
  size_t total_size = 0;

  // optional int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional int32 bet = 2;
  if (this->bet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bet());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BetMessageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BetMessageReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BetMessageReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BetMessageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BetMessageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BetMessageReq)
    UnsafeMergeFrom(*source);
  }
}

void BetMessageReq::MergeFrom(const BetMessageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BetMessageReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BetMessageReq::UnsafeMergeFrom(const BetMessageReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.bet() != 0) {
    set_bet(from.bet());
  }
}

void BetMessageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BetMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BetMessageReq::CopyFrom(const BetMessageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BetMessageReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BetMessageReq::IsInitialized() const {

  return true;
}

void BetMessageReq::Swap(BetMessageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BetMessageReq::InternalSwap(BetMessageReq* other) {
  std::swap(type_, other->type_);
  std::swap(bet_, other->bet_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BetMessageReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BetMessageReq_descriptor_;
  metadata.reflection = BetMessageReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BetMessageReq

// optional int32 type = 1;
void BetMessageReq::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 BetMessageReq::type() const {
  // @@protoc_insertion_point(field_get:proto.BetMessageReq.type)
  return type_;
}
void BetMessageReq::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.BetMessageReq.type)
}

// optional int32 bet = 2;
void BetMessageReq::clear_bet() {
  bet_ = 0;
}
::google::protobuf::int32 BetMessageReq::bet() const {
  // @@protoc_insertion_point(field_get:proto.BetMessageReq.bet)
  return bet_;
}
void BetMessageReq::set_bet(::google::protobuf::int32 value) {
  
  bet_ = value;
  // @@protoc_insertion_point(field_set:proto.BetMessageReq.bet)
}

inline const BetMessageReq* BetMessageReq::internal_default_instance() {
  return &BetMessageReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BetMessageRes::kMsgFieldNumber;
const int BetMessageRes::kMoneyFieldNumber;
const int BetMessageRes::kFrontBetFieldNumber;
const int BetMessageRes::kContraryBetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BetMessageRes::BetMessageRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_BetByProto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BetMessageRes)
}

void BetMessageRes::InitAsDefaultInstance() {
  msg_ = const_cast< ::proto::ReturnMsg*>(
      ::proto::ReturnMsg::internal_default_instance());
}

BetMessageRes::BetMessageRes(const BetMessageRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.BetMessageRes)
}

void BetMessageRes::SharedCtor() {
  msg_ = NULL;
  ::memset(&money_, 0, reinterpret_cast<char*>(&contrarybet_) -
    reinterpret_cast<char*>(&money_) + sizeof(contrarybet_));
  _cached_size_ = 0;
}

BetMessageRes::~BetMessageRes() {
  // @@protoc_insertion_point(destructor:proto.BetMessageRes)
  SharedDtor();
}

void BetMessageRes::SharedDtor() {
  if (this != &BetMessageRes_default_instance_.get()) {
    delete msg_;
  }
}

void BetMessageRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BetMessageRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BetMessageRes_descriptor_;
}

const BetMessageRes& BetMessageRes::default_instance() {
  protobuf_InitDefaults_BetByProto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BetMessageRes> BetMessageRes_default_instance_;

BetMessageRes* BetMessageRes::New(::google::protobuf::Arena* arena) const {
  BetMessageRes* n = new BetMessageRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BetMessageRes::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BetMessageRes)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BetMessageRes, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BetMessageRes*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(money_, contrarybet_);
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool BetMessageRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BetMessageRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.ReturnMsg msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_money;
        break;
      }

      // optional int32 money = 2;
      case 2: {
        if (tag == 16) {
         parse_money:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_frontBet;
        break;
      }

      // optional int32 frontBet = 5;
      case 5: {
        if (tag == 40) {
         parse_frontBet:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frontbet_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_contraryBet;
        break;
      }

      // optional int32 contraryBet = 6;
      case 6: {
        if (tag == 48) {
         parse_contraryBet:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &contrarybet_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BetMessageRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BetMessageRes)
  return false;
#undef DO_
}

void BetMessageRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BetMessageRes)
  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_, output);
  }

  // optional int32 money = 2;
  if (this->money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->money(), output);
  }

  // optional int32 frontBet = 5;
  if (this->frontbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->frontbet(), output);
  }

  // optional int32 contraryBet = 6;
  if (this->contrarybet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->contrarybet(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.BetMessageRes)
}

::google::protobuf::uint8* BetMessageRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BetMessageRes)
  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_, false, target);
  }

  // optional int32 money = 2;
  if (this->money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->money(), target);
  }

  // optional int32 frontBet = 5;
  if (this->frontbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->frontbet(), target);
  }

  // optional int32 contraryBet = 6;
  if (this->contrarybet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->contrarybet(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.BetMessageRes)
  return target;
}

size_t BetMessageRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BetMessageRes)
  size_t total_size = 0;

  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  // optional int32 money = 2;
  if (this->money() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->money());
  }

  // optional int32 frontBet = 5;
  if (this->frontbet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frontbet());
  }

  // optional int32 contraryBet = 6;
  if (this->contrarybet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->contrarybet());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BetMessageRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BetMessageRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BetMessageRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BetMessageRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BetMessageRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BetMessageRes)
    UnsafeMergeFrom(*source);
  }
}

void BetMessageRes::MergeFrom(const BetMessageRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BetMessageRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BetMessageRes::UnsafeMergeFrom(const BetMessageRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_msg()) {
    mutable_msg()->::proto::ReturnMsg::MergeFrom(from.msg());
  }
  if (from.money() != 0) {
    set_money(from.money());
  }
  if (from.frontbet() != 0) {
    set_frontbet(from.frontbet());
  }
  if (from.contrarybet() != 0) {
    set_contrarybet(from.contrarybet());
  }
}

void BetMessageRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BetMessageRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BetMessageRes::CopyFrom(const BetMessageRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BetMessageRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BetMessageRes::IsInitialized() const {

  return true;
}

void BetMessageRes::Swap(BetMessageRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BetMessageRes::InternalSwap(BetMessageRes* other) {
  std::swap(msg_, other->msg_);
  std::swap(money_, other->money_);
  std::swap(frontbet_, other->frontbet_);
  std::swap(contrarybet_, other->contrarybet_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BetMessageRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BetMessageRes_descriptor_;
  metadata.reflection = BetMessageRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BetMessageRes

// optional .proto.ReturnMsg msg = 1;
bool BetMessageRes::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
void BetMessageRes::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::proto::ReturnMsg& BetMessageRes::msg() const {
  // @@protoc_insertion_point(field_get:proto.BetMessageRes.msg)
  return msg_ != NULL ? *msg_
                         : *::proto::ReturnMsg::internal_default_instance();
}
::proto::ReturnMsg* BetMessageRes::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::proto::ReturnMsg;
  }
  // @@protoc_insertion_point(field_mutable:proto.BetMessageRes.msg)
  return msg_;
}
::proto::ReturnMsg* BetMessageRes::release_msg() {
  // @@protoc_insertion_point(field_release:proto.BetMessageRes.msg)
  
  ::proto::ReturnMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
void BetMessageRes::set_allocated_msg(::proto::ReturnMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BetMessageRes.msg)
}

// optional int32 money = 2;
void BetMessageRes::clear_money() {
  money_ = 0;
}
::google::protobuf::int32 BetMessageRes::money() const {
  // @@protoc_insertion_point(field_get:proto.BetMessageRes.money)
  return money_;
}
void BetMessageRes::set_money(::google::protobuf::int32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:proto.BetMessageRes.money)
}

// optional int32 frontBet = 5;
void BetMessageRes::clear_frontbet() {
  frontbet_ = 0;
}
::google::protobuf::int32 BetMessageRes::frontbet() const {
  // @@protoc_insertion_point(field_get:proto.BetMessageRes.frontBet)
  return frontbet_;
}
void BetMessageRes::set_frontbet(::google::protobuf::int32 value) {
  
  frontbet_ = value;
  // @@protoc_insertion_point(field_set:proto.BetMessageRes.frontBet)
}

// optional int32 contraryBet = 6;
void BetMessageRes::clear_contrarybet() {
  contrarybet_ = 0;
}
::google::protobuf::int32 BetMessageRes::contrarybet() const {
  // @@protoc_insertion_point(field_get:proto.BetMessageRes.contraryBet)
  return contrarybet_;
}
void BetMessageRes::set_contrarybet(::google::protobuf::int32 value) {
  
  contrarybet_ = value;
  // @@protoc_insertion_point(field_set:proto.BetMessageRes.contraryBet)
}

inline const BetMessageRes* BetMessageRes::internal_default_instance() {
  return &BetMessageRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
