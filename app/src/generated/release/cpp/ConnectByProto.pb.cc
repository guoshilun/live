// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConnectByProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ConnectByProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {

namespace {

const ::google::protobuf::Descriptor* ConnectByProtoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConnectByProtoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConnectByProtoRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConnectByProtoRes_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ConnectByProto_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ConnectByProto_2eproto() {
  protobuf_AddDesc_ConnectByProto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ConnectByProto.proto");
  GOOGLE_CHECK(file != NULL);
  ConnectByProtoReq_descriptor_ = file->message_type(0);
  static const int ConnectByProtoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoReq, token_),
  };
  ConnectByProtoReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConnectByProtoReq_descriptor_,
      ConnectByProtoReq::internal_default_instance(),
      ConnectByProtoReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ConnectByProtoReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoReq, _internal_metadata_));
  ConnectByProtoRes_descriptor_ = file->message_type(1);
  static const int ConnectByProtoRes_offsets_[24] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, birthday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, sgin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, background_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, picture_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, region_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, phone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, userexperience_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, usergrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, anchorexperience_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, anchorgrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, onlinetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, pwdstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, userstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, autonymstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, openid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, qqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, iphoneid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, isskip_),
  };
  ConnectByProtoRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConnectByProtoRes_descriptor_,
      ConnectByProtoRes::internal_default_instance(),
      ConnectByProtoRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(ConnectByProtoRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectByProtoRes, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ConnectByProto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConnectByProtoReq_descriptor_, ConnectByProtoReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConnectByProtoRes_descriptor_, ConnectByProtoRes::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ConnectByProto_2eproto() {
  ConnectByProtoReq_default_instance_.Shutdown();
  delete ConnectByProtoReq_reflection_;
  ConnectByProtoRes_default_instance_.Shutdown();
  delete ConnectByProtoRes_reflection_;
}

void protobuf_InitDefaults_ConnectByProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto::protobuf_InitDefaults_Entity_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ConnectByProtoReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ConnectByProtoRes_default_instance_.DefaultConstruct();
  ConnectByProtoReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  ConnectByProtoRes_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_ConnectByProto_2eproto_once_);
void protobuf_InitDefaults_ConnectByProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_ConnectByProto_2eproto_once_,
                 &protobuf_InitDefaults_ConnectByProto_2eproto_impl);
}
void protobuf_AddDesc_ConnectByProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_ConnectByProto_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ConnectByProto.proto\022\005proto\032\014Entity.pr"
    "oto\"\"\n\021ConnectByProtoReq\022\r\n\005token\030\001 \001(\t\""
    "\320\003\n\021ConnectByProtoRes\022\035\n\003msg\030\001 \001(\0132\020.pro"
    "to.ReturnMsg\022\016\n\006userId\030\002 \001(\t\022\017\n\007account\030"
    "\003 \001(\t\022\020\n\010nickname\030\004 \001(\t\022\013\n\003sex\030\005 \001(\005\022\020\n\010"
    "birthday\030\006 \001(\t\022\014\n\004sgin\030\007 \001(\t\022\022\n\nbackgrou"
    "nd\030\010 \001(\t\022\017\n\007picture\030\t \001(\t\022\016\n\006region\030\n \001("
    "\t\022\r\n\005phone\030\013 \001(\t\022\026\n\016userExperience\030\014 \001(\005"
    "\022\021\n\tuserGrade\030\r \001(\005\022\030\n\020anchorExperience\030"
    "\016 \001(\005\022\023\n\013anchorGrade\030\017 \001(\005\022\022\n\nonlineTime"
    "\030\020 \001(\005\022\014\n\004type\030\021 \001(\005\022\021\n\tpwdStatus\030\022 \001(\005\022"
    "\022\n\nuserStatus\030\023 \001(\005\022\025\n\rautonymStatus\030\024 \001"
    "(\005\022\016\n\006openId\030\025 \001(\t\022\014\n\004qqId\030\026 \001(\t\022\020\n\010ipho"
    "neId\030\027 \001(\t\022\016\n\006isSkip\030\030 \001(\tB \n\036com.sencor"
    "sta.ids.common.protob\006proto3", 588);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ConnectByProto.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_AddDesc_Entity_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ConnectByProto_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ConnectByProto_2eproto_once_);
void protobuf_AddDesc_ConnectByProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ConnectByProto_2eproto_once_,
                 &protobuf_AddDesc_ConnectByProto_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ConnectByProto_2eproto {
  StaticDescriptorInitializer_ConnectByProto_2eproto() {
    protobuf_AddDesc_ConnectByProto_2eproto();
  }
} static_descriptor_initializer_ConnectByProto_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectByProtoReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectByProtoReq::ConnectByProtoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ConnectByProto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ConnectByProtoReq)
}

void ConnectByProtoReq::InitAsDefaultInstance() {
}

ConnectByProtoReq::ConnectByProtoReq(const ConnectByProtoReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.ConnectByProtoReq)
}

void ConnectByProtoReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConnectByProtoReq::~ConnectByProtoReq() {
  // @@protoc_insertion_point(destructor:proto.ConnectByProtoReq)
  SharedDtor();
}

void ConnectByProtoReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConnectByProtoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectByProtoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConnectByProtoReq_descriptor_;
}

const ConnectByProtoReq& ConnectByProtoReq::default_instance() {
  protobuf_InitDefaults_ConnectByProto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ConnectByProtoReq> ConnectByProtoReq_default_instance_;

ConnectByProtoReq* ConnectByProtoReq::New(::google::protobuf::Arena* arena) const {
  ConnectByProtoReq* n = new ConnectByProtoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectByProtoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ConnectByProtoReq)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConnectByProtoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ConnectByProtoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string token = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ConnectByProtoReq.token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ConnectByProtoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ConnectByProtoReq)
  return false;
#undef DO_
}

void ConnectByProtoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ConnectByProtoReq)
  // optional string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.ConnectByProtoReq)
}

::google::protobuf::uint8* ConnectByProtoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ConnectByProtoReq)
  // optional string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.ConnectByProtoReq)
  return target;
}

size_t ConnectByProtoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ConnectByProtoReq)
  size_t total_size = 0;

  // optional string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectByProtoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ConnectByProtoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ConnectByProtoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectByProtoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ConnectByProtoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ConnectByProtoReq)
    UnsafeMergeFrom(*source);
  }
}

void ConnectByProtoReq::MergeFrom(const ConnectByProtoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ConnectByProtoReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ConnectByProtoReq::UnsafeMergeFrom(const ConnectByProtoReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void ConnectByProtoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ConnectByProtoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectByProtoReq::CopyFrom(const ConnectByProtoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ConnectByProtoReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ConnectByProtoReq::IsInitialized() const {

  return true;
}

void ConnectByProtoReq::Swap(ConnectByProtoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectByProtoReq::InternalSwap(ConnectByProtoReq* other) {
  token_.Swap(&other->token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectByProtoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConnectByProtoReq_descriptor_;
  metadata.reflection = ConnectByProtoReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnectByProtoReq

// optional string token = 1;
void ConnectByProtoReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectByProtoReq::token() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoReq.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoReq.token)
}
void ConnectByProtoReq::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoReq.token)
}
void ConnectByProtoReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoReq.token)
}
::std::string* ConnectByProtoReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectByProtoReq::release_token() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoReq.token)
}

inline const ConnectByProtoReq* ConnectByProtoReq::internal_default_instance() {
  return &ConnectByProtoReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectByProtoRes::kMsgFieldNumber;
const int ConnectByProtoRes::kUserIdFieldNumber;
const int ConnectByProtoRes::kAccountFieldNumber;
const int ConnectByProtoRes::kNicknameFieldNumber;
const int ConnectByProtoRes::kSexFieldNumber;
const int ConnectByProtoRes::kBirthdayFieldNumber;
const int ConnectByProtoRes::kSginFieldNumber;
const int ConnectByProtoRes::kBackgroundFieldNumber;
const int ConnectByProtoRes::kPictureFieldNumber;
const int ConnectByProtoRes::kRegionFieldNumber;
const int ConnectByProtoRes::kPhoneFieldNumber;
const int ConnectByProtoRes::kUserExperienceFieldNumber;
const int ConnectByProtoRes::kUserGradeFieldNumber;
const int ConnectByProtoRes::kAnchorExperienceFieldNumber;
const int ConnectByProtoRes::kAnchorGradeFieldNumber;
const int ConnectByProtoRes::kOnlineTimeFieldNumber;
const int ConnectByProtoRes::kTypeFieldNumber;
const int ConnectByProtoRes::kPwdStatusFieldNumber;
const int ConnectByProtoRes::kUserStatusFieldNumber;
const int ConnectByProtoRes::kAutonymStatusFieldNumber;
const int ConnectByProtoRes::kOpenIdFieldNumber;
const int ConnectByProtoRes::kQqIdFieldNumber;
const int ConnectByProtoRes::kIphoneIdFieldNumber;
const int ConnectByProtoRes::kIsSkipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectByProtoRes::ConnectByProtoRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ConnectByProto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ConnectByProtoRes)
}

void ConnectByProtoRes::InitAsDefaultInstance() {
  msg_ = const_cast< ::proto::ReturnMsg*>(
      ::proto::ReturnMsg::internal_default_instance());
}

ConnectByProtoRes::ConnectByProtoRes(const ConnectByProtoRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.ConnectByProtoRes)
}

void ConnectByProtoRes::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  background_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picture_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qqid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iphoneid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isskip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_ = NULL;
  ::memset(&sex_, 0, reinterpret_cast<char*>(&autonymstatus_) -
    reinterpret_cast<char*>(&sex_) + sizeof(autonymstatus_));
  _cached_size_ = 0;
}

ConnectByProtoRes::~ConnectByProtoRes() {
  // @@protoc_insertion_point(destructor:proto.ConnectByProtoRes)
  SharedDtor();
}

void ConnectByProtoRes::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  background_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picture_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  openid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qqid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iphoneid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isskip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ConnectByProtoRes_default_instance_.get()) {
    delete msg_;
  }
}

void ConnectByProtoRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectByProtoRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConnectByProtoRes_descriptor_;
}

const ConnectByProtoRes& ConnectByProtoRes::default_instance() {
  protobuf_InitDefaults_ConnectByProto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ConnectByProtoRes> ConnectByProtoRes_default_instance_;

ConnectByProtoRes* ConnectByProtoRes::New(::google::protobuf::Arena* arena) const {
  ConnectByProtoRes* n = new ConnectByProtoRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectByProtoRes::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ConnectByProtoRes)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ConnectByProtoRes, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ConnectByProtoRes*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sex_ = 0;
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sgin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  background_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(userexperience_, onlinetime_);
  picture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(type_, autonymstatus_);
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qqid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iphoneid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isskip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ConnectByProtoRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ConnectByProtoRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.ReturnMsg msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_userId;
        break;
      }

      // optional string userId = 2;
      case 2: {
        if (tag == 18) {
         parse_userId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ConnectByProtoRes.userId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_account;
        break;
      }

      // optional string account = 3;
      case 3: {
        if (tag == 26) {
         parse_account:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ConnectByProtoRes.account"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_nickname;
        break;
      }

      // optional string nickname = 4;
      case 4: {
        if (tag == 34) {
         parse_nickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ConnectByProtoRes.nickname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_sex;
        break;
      }

      // optional int32 sex = 5;
      case 5: {
        if (tag == 40) {
         parse_sex:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_birthday;
        break;
      }

      // optional string birthday = 6;
      case 6: {
        if (tag == 50) {
         parse_birthday:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_birthday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->birthday().data(), this->birthday().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ConnectByProtoRes.birthday"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sgin;
        break;
      }

      // optional string sgin = 7;
      case 7: {
        if (tag == 58) {
         parse_sgin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgin()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sgin().data(), this->sgin().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ConnectByProtoRes.sgin"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_background;
        break;
      }

      // optional string background = 8;
      case 8: {
        if (tag == 66) {
         parse_background:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_background()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->background().data(), this->background().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ConnectByProtoRes.background"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_picture;
        break;
      }

      // optional string picture = 9;
      case 9: {
        if (tag == 74) {
         parse_picture:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_picture()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->picture().data(), this->picture().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ConnectByProtoRes.picture"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_region;
        break;
      }

      // optional string region = 10;
      case 10: {
        if (tag == 82) {
         parse_region:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), this->region().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ConnectByProtoRes.region"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_phone;
        break;
      }

      // optional string phone = 11;
      case 11: {
        if (tag == 90) {
         parse_phone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ConnectByProtoRes.phone"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_userExperience;
        break;
      }

      // optional int32 userExperience = 12;
      case 12: {
        if (tag == 96) {
         parse_userExperience:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userexperience_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_userGrade;
        break;
      }

      // optional int32 userGrade = 13;
      case 13: {
        if (tag == 104) {
         parse_userGrade:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usergrade_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_anchorExperience;
        break;
      }

      // optional int32 anchorExperience = 14;
      case 14: {
        if (tag == 112) {
         parse_anchorExperience:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &anchorexperience_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_anchorGrade;
        break;
      }

      // optional int32 anchorGrade = 15;
      case 15: {
        if (tag == 120) {
         parse_anchorGrade:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &anchorgrade_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_onlineTime;
        break;
      }

      // optional int32 onlineTime = 16;
      case 16: {
        if (tag == 128) {
         parse_onlineTime:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &onlinetime_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_type;
        break;
      }

      // optional int32 type = 17;
      case 17: {
        if (tag == 136) {
         parse_type:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_pwdStatus;
        break;
      }

      // optional int32 pwdStatus = 18;
      case 18: {
        if (tag == 144) {
         parse_pwdStatus:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pwdstatus_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_userStatus;
        break;
      }

      // optional int32 userStatus = 19;
      case 19: {
        if (tag == 152) {
         parse_userStatus:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userstatus_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_autonymStatus;
        break;
      }

      // optional int32 autonymStatus = 20;
      case 20: {
        if (tag == 160) {
         parse_autonymStatus:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &autonymstatus_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_openId;
        break;
      }

      // optional string openId = 21;
      case 21: {
        if (tag == 170) {
         parse_openId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_openid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->openid().data(), this->openid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ConnectByProtoRes.openId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_qqId;
        break;
      }

      // optional string qqId = 22;
      case 22: {
        if (tag == 178) {
         parse_qqId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qqid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->qqid().data(), this->qqid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ConnectByProtoRes.qqId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_iphoneId;
        break;
      }

      // optional string iphoneId = 23;
      case 23: {
        if (tag == 186) {
         parse_iphoneId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iphoneid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->iphoneid().data(), this->iphoneid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ConnectByProtoRes.iphoneId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_isSkip;
        break;
      }

      // optional string isSkip = 24;
      case 24: {
        if (tag == 194) {
         parse_isSkip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_isskip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->isskip().data(), this->isskip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ConnectByProtoRes.isSkip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ConnectByProtoRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ConnectByProtoRes)
  return false;
#undef DO_
}

void ConnectByProtoRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ConnectByProtoRes)
  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_, output);
  }

  // optional string userId = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.userId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userid(), output);
  }

  // optional string account = 3;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account(), output);
  }

  // optional string nickname = 4;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->nickname(), output);
  }

  // optional int32 sex = 5;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sex(), output);
  }

  // optional string birthday = 6;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), this->birthday().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.birthday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->birthday(), output);
  }

  // optional string sgin = 7;
  if (this->sgin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgin().data(), this->sgin().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.sgin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sgin(), output);
  }

  // optional string background = 8;
  if (this->background().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->background().data(), this->background().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.background");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->background(), output);
  }

  // optional string picture = 9;
  if (this->picture().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->picture().data(), this->picture().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.picture");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->picture(), output);
  }

  // optional string region = 10;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), this->region().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->region(), output);
  }

  // optional string phone = 11;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->phone(), output);
  }

  // optional int32 userExperience = 12;
  if (this->userexperience() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->userexperience(), output);
  }

  // optional int32 userGrade = 13;
  if (this->usergrade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->usergrade(), output);
  }

  // optional int32 anchorExperience = 14;
  if (this->anchorexperience() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->anchorexperience(), output);
  }

  // optional int32 anchorGrade = 15;
  if (this->anchorgrade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->anchorgrade(), output);
  }

  // optional int32 onlineTime = 16;
  if (this->onlinetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->onlinetime(), output);
  }

  // optional int32 type = 17;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->type(), output);
  }

  // optional int32 pwdStatus = 18;
  if (this->pwdstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->pwdstatus(), output);
  }

  // optional int32 userStatus = 19;
  if (this->userstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->userstatus(), output);
  }

  // optional int32 autonymStatus = 20;
  if (this->autonymstatus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->autonymstatus(), output);
  }

  // optional string openId = 21;
  if (this->openid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->openid().data(), this->openid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.openId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->openid(), output);
  }

  // optional string qqId = 22;
  if (this->qqid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->qqid().data(), this->qqid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.qqId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->qqid(), output);
  }

  // optional string iphoneId = 23;
  if (this->iphoneid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iphoneid().data(), this->iphoneid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.iphoneId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->iphoneid(), output);
  }

  // optional string isSkip = 24;
  if (this->isskip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->isskip().data(), this->isskip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.isSkip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->isskip(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.ConnectByProtoRes)
}

::google::protobuf::uint8* ConnectByProtoRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ConnectByProtoRes)
  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_, false, target);
  }

  // optional string userId = 2;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.userId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  // optional string account = 3;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account(), target);
  }

  // optional string nickname = 4;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nickname(), target);
  }

  // optional int32 sex = 5;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sex(), target);
  }

  // optional string birthday = 6;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), this->birthday().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.birthday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->birthday(), target);
  }

  // optional string sgin = 7;
  if (this->sgin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sgin().data(), this->sgin().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.sgin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sgin(), target);
  }

  // optional string background = 8;
  if (this->background().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->background().data(), this->background().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.background");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->background(), target);
  }

  // optional string picture = 9;
  if (this->picture().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->picture().data(), this->picture().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.picture");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->picture(), target);
  }

  // optional string region = 10;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), this->region().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->region(), target);
  }

  // optional string phone = 11;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->phone(), target);
  }

  // optional int32 userExperience = 12;
  if (this->userexperience() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->userexperience(), target);
  }

  // optional int32 userGrade = 13;
  if (this->usergrade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->usergrade(), target);
  }

  // optional int32 anchorExperience = 14;
  if (this->anchorexperience() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->anchorexperience(), target);
  }

  // optional int32 anchorGrade = 15;
  if (this->anchorgrade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->anchorgrade(), target);
  }

  // optional int32 onlineTime = 16;
  if (this->onlinetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->onlinetime(), target);
  }

  // optional int32 type = 17;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->type(), target);
  }

  // optional int32 pwdStatus = 18;
  if (this->pwdstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->pwdstatus(), target);
  }

  // optional int32 userStatus = 19;
  if (this->userstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->userstatus(), target);
  }

  // optional int32 autonymStatus = 20;
  if (this->autonymstatus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->autonymstatus(), target);
  }

  // optional string openId = 21;
  if (this->openid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->openid().data(), this->openid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.openId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->openid(), target);
  }

  // optional string qqId = 22;
  if (this->qqid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->qqid().data(), this->qqid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.qqId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->qqid(), target);
  }

  // optional string iphoneId = 23;
  if (this->iphoneid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iphoneid().data(), this->iphoneid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.iphoneId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->iphoneid(), target);
  }

  // optional string isSkip = 24;
  if (this->isskip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->isskip().data(), this->isskip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ConnectByProtoRes.isSkip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->isskip(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.ConnectByProtoRes)
  return target;
}

size_t ConnectByProtoRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ConnectByProtoRes)
  size_t total_size = 0;

  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  // optional string userId = 2;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // optional string account = 3;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // optional string nickname = 4;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // optional int32 sex = 5;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  // optional string birthday = 6;
  if (this->birthday().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->birthday());
  }

  // optional string sgin = 7;
  if (this->sgin().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sgin());
  }

  // optional string background = 8;
  if (this->background().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->background());
  }

  // optional string picture = 9;
  if (this->picture().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->picture());
  }

  // optional string region = 10;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  // optional string phone = 11;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // optional int32 userExperience = 12;
  if (this->userexperience() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userexperience());
  }

  // optional int32 userGrade = 13;
  if (this->usergrade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->usergrade());
  }

  // optional int32 anchorExperience = 14;
  if (this->anchorexperience() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->anchorexperience());
  }

  // optional int32 anchorGrade = 15;
  if (this->anchorgrade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->anchorgrade());
  }

  // optional int32 onlineTime = 16;
  if (this->onlinetime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->onlinetime());
  }

  // optional int32 type = 17;
  if (this->type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional int32 pwdStatus = 18;
  if (this->pwdstatus() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pwdstatus());
  }

  // optional int32 userStatus = 19;
  if (this->userstatus() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userstatus());
  }

  // optional int32 autonymStatus = 20;
  if (this->autonymstatus() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->autonymstatus());
  }

  // optional string openId = 21;
  if (this->openid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->openid());
  }

  // optional string qqId = 22;
  if (this->qqid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->qqid());
  }

  // optional string iphoneId = 23;
  if (this->iphoneid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iphoneid());
  }

  // optional string isSkip = 24;
  if (this->isskip().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->isskip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectByProtoRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ConnectByProtoRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ConnectByProtoRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectByProtoRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ConnectByProtoRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ConnectByProtoRes)
    UnsafeMergeFrom(*source);
  }
}

void ConnectByProtoRes::MergeFrom(const ConnectByProtoRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ConnectByProtoRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ConnectByProtoRes::UnsafeMergeFrom(const ConnectByProtoRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_msg()) {
    mutable_msg()->::proto::ReturnMsg::MergeFrom(from.msg());
  }
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.birthday().size() > 0) {

    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
  if (from.sgin().size() > 0) {

    sgin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sgin_);
  }
  if (from.background().size() > 0) {

    background_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.background_);
  }
  if (from.picture().size() > 0) {

    picture_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.picture_);
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.userexperience() != 0) {
    set_userexperience(from.userexperience());
  }
  if (from.usergrade() != 0) {
    set_usergrade(from.usergrade());
  }
  if (from.anchorexperience() != 0) {
    set_anchorexperience(from.anchorexperience());
  }
  if (from.anchorgrade() != 0) {
    set_anchorgrade(from.anchorgrade());
  }
  if (from.onlinetime() != 0) {
    set_onlinetime(from.onlinetime());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.pwdstatus() != 0) {
    set_pwdstatus(from.pwdstatus());
  }
  if (from.userstatus() != 0) {
    set_userstatus(from.userstatus());
  }
  if (from.autonymstatus() != 0) {
    set_autonymstatus(from.autonymstatus());
  }
  if (from.openid().size() > 0) {

    openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.openid_);
  }
  if (from.qqid().size() > 0) {

    qqid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qqid_);
  }
  if (from.iphoneid().size() > 0) {

    iphoneid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iphoneid_);
  }
  if (from.isskip().size() > 0) {

    isskip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.isskip_);
  }
}

void ConnectByProtoRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ConnectByProtoRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectByProtoRes::CopyFrom(const ConnectByProtoRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ConnectByProtoRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ConnectByProtoRes::IsInitialized() const {

  return true;
}

void ConnectByProtoRes::Swap(ConnectByProtoRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectByProtoRes::InternalSwap(ConnectByProtoRes* other) {
  std::swap(msg_, other->msg_);
  userid_.Swap(&other->userid_);
  account_.Swap(&other->account_);
  nickname_.Swap(&other->nickname_);
  std::swap(sex_, other->sex_);
  birthday_.Swap(&other->birthday_);
  sgin_.Swap(&other->sgin_);
  background_.Swap(&other->background_);
  picture_.Swap(&other->picture_);
  region_.Swap(&other->region_);
  phone_.Swap(&other->phone_);
  std::swap(userexperience_, other->userexperience_);
  std::swap(usergrade_, other->usergrade_);
  std::swap(anchorexperience_, other->anchorexperience_);
  std::swap(anchorgrade_, other->anchorgrade_);
  std::swap(onlinetime_, other->onlinetime_);
  std::swap(type_, other->type_);
  std::swap(pwdstatus_, other->pwdstatus_);
  std::swap(userstatus_, other->userstatus_);
  std::swap(autonymstatus_, other->autonymstatus_);
  openid_.Swap(&other->openid_);
  qqid_.Swap(&other->qqid_);
  iphoneid_.Swap(&other->iphoneid_);
  isskip_.Swap(&other->isskip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectByProtoRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConnectByProtoRes_descriptor_;
  metadata.reflection = ConnectByProtoRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnectByProtoRes

// optional .proto.ReturnMsg msg = 1;
bool ConnectByProtoRes::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
void ConnectByProtoRes::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::proto::ReturnMsg& ConnectByProtoRes::msg() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.msg)
  return msg_ != NULL ? *msg_
                         : *::proto::ReturnMsg::internal_default_instance();
}
::proto::ReturnMsg* ConnectByProtoRes::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::proto::ReturnMsg;
  }
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.msg)
  return msg_;
}
::proto::ReturnMsg* ConnectByProtoRes::release_msg() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.msg)
  
  ::proto::ReturnMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
void ConnectByProtoRes::set_allocated_msg(::proto::ReturnMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.msg)
}

// optional string userId = 2;
void ConnectByProtoRes::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectByProtoRes::userid() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.userId)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.userId)
}
void ConnectByProtoRes::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.userId)
}
void ConnectByProtoRes::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.userId)
}
::std::string* ConnectByProtoRes::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.userId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectByProtoRes::release_userid() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.userId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.userId)
}

// optional string account = 3;
void ConnectByProtoRes::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectByProtoRes::account() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.account)
}
void ConnectByProtoRes::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.account)
}
void ConnectByProtoRes::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.account)
}
::std::string* ConnectByProtoRes::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectByProtoRes::release_account() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.account)
}

// optional string nickname = 4;
void ConnectByProtoRes::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectByProtoRes::nickname() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.nickname)
}
void ConnectByProtoRes::set_nickname(const char* value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.nickname)
}
void ConnectByProtoRes::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.nickname)
}
::std::string* ConnectByProtoRes::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectByProtoRes::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.nickname)
}

// optional int32 sex = 5;
void ConnectByProtoRes::clear_sex() {
  sex_ = 0;
}
::google::protobuf::int32 ConnectByProtoRes::sex() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.sex)
  return sex_;
}
void ConnectByProtoRes::set_sex(::google::protobuf::int32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.sex)
}

// optional string birthday = 6;
void ConnectByProtoRes::clear_birthday() {
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectByProtoRes::birthday() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.birthday)
  return birthday_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_birthday(const ::std::string& value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.birthday)
}
void ConnectByProtoRes::set_birthday(const char* value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.birthday)
}
void ConnectByProtoRes::set_birthday(const char* value, size_t size) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.birthday)
}
::std::string* ConnectByProtoRes::mutable_birthday() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.birthday)
  return birthday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectByProtoRes::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.birthday)
  
  return birthday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_allocated_birthday(::std::string* birthday) {
  if (birthday != NULL) {
    
  } else {
    
  }
  birthday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birthday);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.birthday)
}

// optional string sgin = 7;
void ConnectByProtoRes::clear_sgin() {
  sgin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectByProtoRes::sgin() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.sgin)
  return sgin_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_sgin(const ::std::string& value) {
  
  sgin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.sgin)
}
void ConnectByProtoRes::set_sgin(const char* value) {
  
  sgin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.sgin)
}
void ConnectByProtoRes::set_sgin(const char* value, size_t size) {
  
  sgin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.sgin)
}
::std::string* ConnectByProtoRes::mutable_sgin() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.sgin)
  return sgin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectByProtoRes::release_sgin() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.sgin)
  
  return sgin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_allocated_sgin(::std::string* sgin) {
  if (sgin != NULL) {
    
  } else {
    
  }
  sgin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgin);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.sgin)
}

// optional string background = 8;
void ConnectByProtoRes::clear_background() {
  background_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectByProtoRes::background() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.background)
  return background_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_background(const ::std::string& value) {
  
  background_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.background)
}
void ConnectByProtoRes::set_background(const char* value) {
  
  background_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.background)
}
void ConnectByProtoRes::set_background(const char* value, size_t size) {
  
  background_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.background)
}
::std::string* ConnectByProtoRes::mutable_background() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.background)
  return background_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectByProtoRes::release_background() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.background)
  
  return background_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_allocated_background(::std::string* background) {
  if (background != NULL) {
    
  } else {
    
  }
  background_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), background);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.background)
}

// optional string picture = 9;
void ConnectByProtoRes::clear_picture() {
  picture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectByProtoRes::picture() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.picture)
  return picture_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_picture(const ::std::string& value) {
  
  picture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.picture)
}
void ConnectByProtoRes::set_picture(const char* value) {
  
  picture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.picture)
}
void ConnectByProtoRes::set_picture(const char* value, size_t size) {
  
  picture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.picture)
}
::std::string* ConnectByProtoRes::mutable_picture() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.picture)
  return picture_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectByProtoRes::release_picture() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.picture)
  
  return picture_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_allocated_picture(::std::string* picture) {
  if (picture != NULL) {
    
  } else {
    
  }
  picture_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), picture);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.picture)
}

// optional string region = 10;
void ConnectByProtoRes::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectByProtoRes::region() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.region)
  return region_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.region)
}
void ConnectByProtoRes::set_region(const char* value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.region)
}
void ConnectByProtoRes::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.region)
}
::std::string* ConnectByProtoRes::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectByProtoRes::release_region() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.region)
}

// optional string phone = 11;
void ConnectByProtoRes::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectByProtoRes::phone() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.phone)
  return phone_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.phone)
}
void ConnectByProtoRes::set_phone(const char* value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.phone)
}
void ConnectByProtoRes::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.phone)
}
::std::string* ConnectByProtoRes::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectByProtoRes::release_phone() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.phone)
}

// optional int32 userExperience = 12;
void ConnectByProtoRes::clear_userexperience() {
  userexperience_ = 0;
}
::google::protobuf::int32 ConnectByProtoRes::userexperience() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.userExperience)
  return userexperience_;
}
void ConnectByProtoRes::set_userexperience(::google::protobuf::int32 value) {
  
  userexperience_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.userExperience)
}

// optional int32 userGrade = 13;
void ConnectByProtoRes::clear_usergrade() {
  usergrade_ = 0;
}
::google::protobuf::int32 ConnectByProtoRes::usergrade() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.userGrade)
  return usergrade_;
}
void ConnectByProtoRes::set_usergrade(::google::protobuf::int32 value) {
  
  usergrade_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.userGrade)
}

// optional int32 anchorExperience = 14;
void ConnectByProtoRes::clear_anchorexperience() {
  anchorexperience_ = 0;
}
::google::protobuf::int32 ConnectByProtoRes::anchorexperience() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.anchorExperience)
  return anchorexperience_;
}
void ConnectByProtoRes::set_anchorexperience(::google::protobuf::int32 value) {
  
  anchorexperience_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.anchorExperience)
}

// optional int32 anchorGrade = 15;
void ConnectByProtoRes::clear_anchorgrade() {
  anchorgrade_ = 0;
}
::google::protobuf::int32 ConnectByProtoRes::anchorgrade() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.anchorGrade)
  return anchorgrade_;
}
void ConnectByProtoRes::set_anchorgrade(::google::protobuf::int32 value) {
  
  anchorgrade_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.anchorGrade)
}

// optional int32 onlineTime = 16;
void ConnectByProtoRes::clear_onlinetime() {
  onlinetime_ = 0;
}
::google::protobuf::int32 ConnectByProtoRes::onlinetime() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.onlineTime)
  return onlinetime_;
}
void ConnectByProtoRes::set_onlinetime(::google::protobuf::int32 value) {
  
  onlinetime_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.onlineTime)
}

// optional int32 type = 17;
void ConnectByProtoRes::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 ConnectByProtoRes::type() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.type)
  return type_;
}
void ConnectByProtoRes::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.type)
}

// optional int32 pwdStatus = 18;
void ConnectByProtoRes::clear_pwdstatus() {
  pwdstatus_ = 0;
}
::google::protobuf::int32 ConnectByProtoRes::pwdstatus() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.pwdStatus)
  return pwdstatus_;
}
void ConnectByProtoRes::set_pwdstatus(::google::protobuf::int32 value) {
  
  pwdstatus_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.pwdStatus)
}

// optional int32 userStatus = 19;
void ConnectByProtoRes::clear_userstatus() {
  userstatus_ = 0;
}
::google::protobuf::int32 ConnectByProtoRes::userstatus() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.userStatus)
  return userstatus_;
}
void ConnectByProtoRes::set_userstatus(::google::protobuf::int32 value) {
  
  userstatus_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.userStatus)
}

// optional int32 autonymStatus = 20;
void ConnectByProtoRes::clear_autonymstatus() {
  autonymstatus_ = 0;
}
::google::protobuf::int32 ConnectByProtoRes::autonymstatus() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.autonymStatus)
  return autonymstatus_;
}
void ConnectByProtoRes::set_autonymstatus(::google::protobuf::int32 value) {
  
  autonymstatus_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.autonymStatus)
}

// optional string openId = 21;
void ConnectByProtoRes::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectByProtoRes::openid() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.openId)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_openid(const ::std::string& value) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.openId)
}
void ConnectByProtoRes::set_openid(const char* value) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.openId)
}
void ConnectByProtoRes::set_openid(const char* value, size_t size) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.openId)
}
::std::string* ConnectByProtoRes::mutable_openid() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.openId)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectByProtoRes::release_openid() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.openId)
  
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    
  } else {
    
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.openId)
}

// optional string qqId = 22;
void ConnectByProtoRes::clear_qqid() {
  qqid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectByProtoRes::qqid() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.qqId)
  return qqid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_qqid(const ::std::string& value) {
  
  qqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.qqId)
}
void ConnectByProtoRes::set_qqid(const char* value) {
  
  qqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.qqId)
}
void ConnectByProtoRes::set_qqid(const char* value, size_t size) {
  
  qqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.qqId)
}
::std::string* ConnectByProtoRes::mutable_qqid() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.qqId)
  return qqid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectByProtoRes::release_qqid() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.qqId)
  
  return qqid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_allocated_qqid(::std::string* qqid) {
  if (qqid != NULL) {
    
  } else {
    
  }
  qqid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qqid);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.qqId)
}

// optional string iphoneId = 23;
void ConnectByProtoRes::clear_iphoneid() {
  iphoneid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectByProtoRes::iphoneid() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.iphoneId)
  return iphoneid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_iphoneid(const ::std::string& value) {
  
  iphoneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.iphoneId)
}
void ConnectByProtoRes::set_iphoneid(const char* value) {
  
  iphoneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.iphoneId)
}
void ConnectByProtoRes::set_iphoneid(const char* value, size_t size) {
  
  iphoneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.iphoneId)
}
::std::string* ConnectByProtoRes::mutable_iphoneid() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.iphoneId)
  return iphoneid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectByProtoRes::release_iphoneid() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.iphoneId)
  
  return iphoneid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_allocated_iphoneid(::std::string* iphoneid) {
  if (iphoneid != NULL) {
    
  } else {
    
  }
  iphoneid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iphoneid);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.iphoneId)
}

// optional string isSkip = 24;
void ConnectByProtoRes::clear_isskip() {
  isskip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectByProtoRes::isskip() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.isSkip)
  return isskip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_isskip(const ::std::string& value) {
  
  isskip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.isSkip)
}
void ConnectByProtoRes::set_isskip(const char* value) {
  
  isskip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.isSkip)
}
void ConnectByProtoRes::set_isskip(const char* value, size_t size) {
  
  isskip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.isSkip)
}
::std::string* ConnectByProtoRes::mutable_isskip() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.isSkip)
  return isskip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectByProtoRes::release_isskip() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.isSkip)
  
  return isskip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectByProtoRes::set_allocated_isskip(::std::string* isskip) {
  if (isskip != NULL) {
    
  } else {
    
  }
  isskip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), isskip);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.isSkip)
}

inline const ConnectByProtoRes* ConnectByProtoRes::internal_default_instance() {
  return &ConnectByProtoRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
