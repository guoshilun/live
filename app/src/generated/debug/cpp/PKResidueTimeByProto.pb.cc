// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PKResidueTimeByProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PKResidueTimeByProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {

namespace {

const ::google::protobuf::Descriptor* PKResidueTimeReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PKResidueTimeReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PKResidueTimeRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PKResidueTimeRes_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PKResidueTimeByProto_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_PKResidueTimeByProto_2eproto() {
  protobuf_AddDesc_PKResidueTimeByProto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PKResidueTimeByProto.proto");
  GOOGLE_CHECK(file != NULL);
  PKResidueTimeReq_descriptor_ = file->message_type(0);
  static const int PKResidueTimeReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PKResidueTimeReq, pkid_),
  };
  PKResidueTimeReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PKResidueTimeReq_descriptor_,
      PKResidueTimeReq::internal_default_instance(),
      PKResidueTimeReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(PKResidueTimeReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PKResidueTimeReq, _internal_metadata_));
  PKResidueTimeRes_descriptor_ = file->message_type(1);
  static const int PKResidueTimeRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PKResidueTimeRes, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PKResidueTimeRes, time_),
  };
  PKResidueTimeRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PKResidueTimeRes_descriptor_,
      PKResidueTimeRes::internal_default_instance(),
      PKResidueTimeRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(PKResidueTimeRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PKResidueTimeRes, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PKResidueTimeByProto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PKResidueTimeReq_descriptor_, PKResidueTimeReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PKResidueTimeRes_descriptor_, PKResidueTimeRes::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PKResidueTimeByProto_2eproto() {
  PKResidueTimeReq_default_instance_.Shutdown();
  delete PKResidueTimeReq_reflection_;
  PKResidueTimeRes_default_instance_.Shutdown();
  delete PKResidueTimeRes_reflection_;
}

void protobuf_InitDefaults_PKResidueTimeByProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto::protobuf_InitDefaults_Entity_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  PKResidueTimeReq_default_instance_.DefaultConstruct();
  PKResidueTimeRes_default_instance_.DefaultConstruct();
  PKResidueTimeReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  PKResidueTimeRes_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_PKResidueTimeByProto_2eproto_once_);
void protobuf_InitDefaults_PKResidueTimeByProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_PKResidueTimeByProto_2eproto_once_,
                 &protobuf_InitDefaults_PKResidueTimeByProto_2eproto_impl);
}
void protobuf_AddDesc_PKResidueTimeByProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_PKResidueTimeByProto_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032PKResidueTimeByProto.proto\022\005proto\032\014Ent"
    "ity.proto\" \n\020PKResidueTimeReq\022\014\n\004pkId\030\001 "
    "\001(\t\"\?\n\020PKResidueTimeRes\022\035\n\003msg\030\001 \001(\0132\020.p"
    "roto.ReturnMsg\022\014\n\004time\030\002 \001(\005B \n\036com.senc"
    "orsta.ids.common.protob\006proto3", 190);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PKResidueTimeByProto.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_AddDesc_Entity_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PKResidueTimeByProto_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_PKResidueTimeByProto_2eproto_once_);
void protobuf_AddDesc_PKResidueTimeByProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_PKResidueTimeByProto_2eproto_once_,
                 &protobuf_AddDesc_PKResidueTimeByProto_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PKResidueTimeByProto_2eproto {
  StaticDescriptorInitializer_PKResidueTimeByProto_2eproto() {
    protobuf_AddDesc_PKResidueTimeByProto_2eproto();
  }
} static_descriptor_initializer_PKResidueTimeByProto_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PKResidueTimeReq::kPkIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PKResidueTimeReq::PKResidueTimeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_PKResidueTimeByProto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PKResidueTimeReq)
}

void PKResidueTimeReq::InitAsDefaultInstance() {
}

PKResidueTimeReq::PKResidueTimeReq(const PKResidueTimeReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.PKResidueTimeReq)
}

void PKResidueTimeReq::SharedCtor() {
  pkid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PKResidueTimeReq::~PKResidueTimeReq() {
  // @@protoc_insertion_point(destructor:proto.PKResidueTimeReq)
  SharedDtor();
}

void PKResidueTimeReq::SharedDtor() {
  pkid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PKResidueTimeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PKResidueTimeReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PKResidueTimeReq_descriptor_;
}

const PKResidueTimeReq& PKResidueTimeReq::default_instance() {
  protobuf_InitDefaults_PKResidueTimeByProto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PKResidueTimeReq> PKResidueTimeReq_default_instance_;

PKResidueTimeReq* PKResidueTimeReq::New(::google::protobuf::Arena* arena) const {
  PKResidueTimeReq* n = new PKResidueTimeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PKResidueTimeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PKResidueTimeReq)
  pkid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PKResidueTimeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PKResidueTimeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pkId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pkid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pkid().data(), this->pkid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PKResidueTimeReq.pkId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PKResidueTimeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PKResidueTimeReq)
  return false;
#undef DO_
}

void PKResidueTimeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PKResidueTimeReq)
  // optional string pkId = 1;
  if (this->pkid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pkid().data(), this->pkid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PKResidueTimeReq.pkId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pkid(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.PKResidueTimeReq)
}

::google::protobuf::uint8* PKResidueTimeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PKResidueTimeReq)
  // optional string pkId = 1;
  if (this->pkid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pkid().data(), this->pkid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PKResidueTimeReq.pkId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pkid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.PKResidueTimeReq)
  return target;
}

size_t PKResidueTimeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PKResidueTimeReq)
  size_t total_size = 0;

  // optional string pkId = 1;
  if (this->pkid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pkid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PKResidueTimeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PKResidueTimeReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PKResidueTimeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PKResidueTimeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PKResidueTimeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PKResidueTimeReq)
    UnsafeMergeFrom(*source);
  }
}

void PKResidueTimeReq::MergeFrom(const PKResidueTimeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PKResidueTimeReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PKResidueTimeReq::UnsafeMergeFrom(const PKResidueTimeReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.pkid().size() > 0) {

    pkid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pkid_);
  }
}

void PKResidueTimeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PKResidueTimeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PKResidueTimeReq::CopyFrom(const PKResidueTimeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PKResidueTimeReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PKResidueTimeReq::IsInitialized() const {

  return true;
}

void PKResidueTimeReq::Swap(PKResidueTimeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PKResidueTimeReq::InternalSwap(PKResidueTimeReq* other) {
  pkid_.Swap(&other->pkid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PKResidueTimeReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PKResidueTimeReq_descriptor_;
  metadata.reflection = PKResidueTimeReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PKResidueTimeReq

// optional string pkId = 1;
void PKResidueTimeReq::clear_pkid() {
  pkid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PKResidueTimeReq::pkid() const {
  // @@protoc_insertion_point(field_get:proto.PKResidueTimeReq.pkId)
  return pkid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PKResidueTimeReq::set_pkid(const ::std::string& value) {
  
  pkid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PKResidueTimeReq.pkId)
}
void PKResidueTimeReq::set_pkid(const char* value) {
  
  pkid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PKResidueTimeReq.pkId)
}
void PKResidueTimeReq::set_pkid(const char* value, size_t size) {
  
  pkid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PKResidueTimeReq.pkId)
}
::std::string* PKResidueTimeReq::mutable_pkid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PKResidueTimeReq.pkId)
  return pkid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PKResidueTimeReq::release_pkid() {
  // @@protoc_insertion_point(field_release:proto.PKResidueTimeReq.pkId)
  
  return pkid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PKResidueTimeReq::set_allocated_pkid(::std::string* pkid) {
  if (pkid != NULL) {
    
  } else {
    
  }
  pkid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pkid);
  // @@protoc_insertion_point(field_set_allocated:proto.PKResidueTimeReq.pkId)
}

inline const PKResidueTimeReq* PKResidueTimeReq::internal_default_instance() {
  return &PKResidueTimeReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PKResidueTimeRes::kMsgFieldNumber;
const int PKResidueTimeRes::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PKResidueTimeRes::PKResidueTimeRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_PKResidueTimeByProto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PKResidueTimeRes)
}

void PKResidueTimeRes::InitAsDefaultInstance() {
  msg_ = const_cast< ::proto::ReturnMsg*>(
      ::proto::ReturnMsg::internal_default_instance());
}

PKResidueTimeRes::PKResidueTimeRes(const PKResidueTimeRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.PKResidueTimeRes)
}

void PKResidueTimeRes::SharedCtor() {
  msg_ = NULL;
  time_ = 0;
  _cached_size_ = 0;
}

PKResidueTimeRes::~PKResidueTimeRes() {
  // @@protoc_insertion_point(destructor:proto.PKResidueTimeRes)
  SharedDtor();
}

void PKResidueTimeRes::SharedDtor() {
  if (this != &PKResidueTimeRes_default_instance_.get()) {
    delete msg_;
  }
}

void PKResidueTimeRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PKResidueTimeRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PKResidueTimeRes_descriptor_;
}

const PKResidueTimeRes& PKResidueTimeRes::default_instance() {
  protobuf_InitDefaults_PKResidueTimeByProto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PKResidueTimeRes> PKResidueTimeRes_default_instance_;

PKResidueTimeRes* PKResidueTimeRes::New(::google::protobuf::Arena* arena) const {
  PKResidueTimeRes* n = new PKResidueTimeRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PKResidueTimeRes::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PKResidueTimeRes)
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
  time_ = 0;
}

bool PKResidueTimeRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PKResidueTimeRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.ReturnMsg msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_time;
        break;
      }

      // optional int32 time = 2;
      case 2: {
        if (tag == 16) {
         parse_time:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PKResidueTimeRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PKResidueTimeRes)
  return false;
#undef DO_
}

void PKResidueTimeRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PKResidueTimeRes)
  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_, output);
  }

  // optional int32 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->time(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.PKResidueTimeRes)
}

::google::protobuf::uint8* PKResidueTimeRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PKResidueTimeRes)
  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_, false, target);
  }

  // optional int32 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.PKResidueTimeRes)
  return target;
}

size_t PKResidueTimeRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PKResidueTimeRes)
  size_t total_size = 0;

  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  // optional int32 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PKResidueTimeRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PKResidueTimeRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PKResidueTimeRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PKResidueTimeRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PKResidueTimeRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PKResidueTimeRes)
    UnsafeMergeFrom(*source);
  }
}

void PKResidueTimeRes::MergeFrom(const PKResidueTimeRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PKResidueTimeRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PKResidueTimeRes::UnsafeMergeFrom(const PKResidueTimeRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_msg()) {
    mutable_msg()->::proto::ReturnMsg::MergeFrom(from.msg());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void PKResidueTimeRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PKResidueTimeRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PKResidueTimeRes::CopyFrom(const PKResidueTimeRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PKResidueTimeRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PKResidueTimeRes::IsInitialized() const {

  return true;
}

void PKResidueTimeRes::Swap(PKResidueTimeRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PKResidueTimeRes::InternalSwap(PKResidueTimeRes* other) {
  std::swap(msg_, other->msg_);
  std::swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PKResidueTimeRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PKResidueTimeRes_descriptor_;
  metadata.reflection = PKResidueTimeRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PKResidueTimeRes

// optional .proto.ReturnMsg msg = 1;
bool PKResidueTimeRes::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
void PKResidueTimeRes::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::proto::ReturnMsg& PKResidueTimeRes::msg() const {
  // @@protoc_insertion_point(field_get:proto.PKResidueTimeRes.msg)
  return msg_ != NULL ? *msg_
                         : *::proto::ReturnMsg::internal_default_instance();
}
::proto::ReturnMsg* PKResidueTimeRes::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::proto::ReturnMsg;
  }
  // @@protoc_insertion_point(field_mutable:proto.PKResidueTimeRes.msg)
  return msg_;
}
::proto::ReturnMsg* PKResidueTimeRes::release_msg() {
  // @@protoc_insertion_point(field_release:proto.PKResidueTimeRes.msg)
  
  ::proto::ReturnMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
void PKResidueTimeRes::set_allocated_msg(::proto::ReturnMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PKResidueTimeRes.msg)
}

// optional int32 time = 2;
void PKResidueTimeRes::clear_time() {
  time_ = 0;
}
::google::protobuf::int32 PKResidueTimeRes::time() const {
  // @@protoc_insertion_point(field_get:proto.PKResidueTimeRes.time)
  return time_;
}
void PKResidueTimeRes::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.PKResidueTimeRes.time)
}

inline const PKResidueTimeRes* PKResidueTimeRes::internal_default_instance() {
  return &PKResidueTimeRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
