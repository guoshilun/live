// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PKCancelByProto.proto

#ifndef PROTOBUF_PKCancelByProto_2eproto__INCLUDED
#define PROTOBUF_PKCancelByProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Entity.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_PKCancelByProto_2eproto();
void protobuf_InitDefaults_PKCancelByProto_2eproto();
void protobuf_AssignDesc_PKCancelByProto_2eproto();
void protobuf_ShutdownFile_PKCancelByProto_2eproto();

class PKCancelByProtoReq;
class PKCancelProtoRes;

// ===================================================================

class PKCancelByProtoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PKCancelByProtoReq) */ {
 public:
  PKCancelByProtoReq();
  virtual ~PKCancelByProtoReq();

  PKCancelByProtoReq(const PKCancelByProtoReq& from);

  inline PKCancelByProtoReq& operator=(const PKCancelByProtoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PKCancelByProtoReq& default_instance();

  static const PKCancelByProtoReq* internal_default_instance();

  void Swap(PKCancelByProtoReq* other);

  // implements Message ----------------------------------------------

  inline PKCancelByProtoReq* New() const { return New(NULL); }

  PKCancelByProtoReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PKCancelByProtoReq& from);
  void MergeFrom(const PKCancelByProtoReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PKCancelByProtoReq* other);
  void UnsafeMergeFrom(const PKCancelByProtoReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tagUserId = 1;
  void clear_taguserid();
  static const int kTagUserIdFieldNumber = 1;
  const ::std::string& taguserid() const;
  void set_taguserid(const ::std::string& value);
  void set_taguserid(const char* value);
  void set_taguserid(const char* value, size_t size);
  ::std::string* mutable_taguserid();
  ::std::string* release_taguserid();
  void set_allocated_taguserid(::std::string* taguserid);

  // @@protoc_insertion_point(class_scope:proto.PKCancelByProtoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr taguserid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_PKCancelByProto_2eproto_impl();
  friend void  protobuf_AddDesc_PKCancelByProto_2eproto_impl();
  friend void protobuf_AssignDesc_PKCancelByProto_2eproto();
  friend void protobuf_ShutdownFile_PKCancelByProto_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PKCancelByProtoReq> PKCancelByProtoReq_default_instance_;

// -------------------------------------------------------------------

class PKCancelProtoRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PKCancelProtoRes) */ {
 public:
  PKCancelProtoRes();
  virtual ~PKCancelProtoRes();

  PKCancelProtoRes(const PKCancelProtoRes& from);

  inline PKCancelProtoRes& operator=(const PKCancelProtoRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PKCancelProtoRes& default_instance();

  static const PKCancelProtoRes* internal_default_instance();

  void Swap(PKCancelProtoRes* other);

  // implements Message ----------------------------------------------

  inline PKCancelProtoRes* New() const { return New(NULL); }

  PKCancelProtoRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PKCancelProtoRes& from);
  void MergeFrom(const PKCancelProtoRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PKCancelProtoRes* other);
  void UnsafeMergeFrom(const PKCancelProtoRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.ReturnMsg msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::proto::ReturnMsg& msg() const;
  ::proto::ReturnMsg* mutable_msg();
  ::proto::ReturnMsg* release_msg();
  void set_allocated_msg(::proto::ReturnMsg* msg);

  // @@protoc_insertion_point(class_scope:proto.PKCancelProtoRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ReturnMsg* msg_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_PKCancelByProto_2eproto_impl();
  friend void  protobuf_AddDesc_PKCancelByProto_2eproto_impl();
  friend void protobuf_AssignDesc_PKCancelByProto_2eproto();
  friend void protobuf_ShutdownFile_PKCancelByProto_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PKCancelProtoRes> PKCancelProtoRes_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PKCancelByProtoReq

// optional string tagUserId = 1;
inline void PKCancelByProtoReq::clear_taguserid() {
  taguserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PKCancelByProtoReq::taguserid() const {
  // @@protoc_insertion_point(field_get:proto.PKCancelByProtoReq.tagUserId)
  return taguserid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PKCancelByProtoReq::set_taguserid(const ::std::string& value) {
  
  taguserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PKCancelByProtoReq.tagUserId)
}
inline void PKCancelByProtoReq::set_taguserid(const char* value) {
  
  taguserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PKCancelByProtoReq.tagUserId)
}
inline void PKCancelByProtoReq::set_taguserid(const char* value, size_t size) {
  
  taguserid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PKCancelByProtoReq.tagUserId)
}
inline ::std::string* PKCancelByProtoReq::mutable_taguserid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PKCancelByProtoReq.tagUserId)
  return taguserid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PKCancelByProtoReq::release_taguserid() {
  // @@protoc_insertion_point(field_release:proto.PKCancelByProtoReq.tagUserId)
  
  return taguserid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PKCancelByProtoReq::set_allocated_taguserid(::std::string* taguserid) {
  if (taguserid != NULL) {
    
  } else {
    
  }
  taguserid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), taguserid);
  // @@protoc_insertion_point(field_set_allocated:proto.PKCancelByProtoReq.tagUserId)
}

inline const PKCancelByProtoReq* PKCancelByProtoReq::internal_default_instance() {
  return &PKCancelByProtoReq_default_instance_.get();
}
// -------------------------------------------------------------------

// PKCancelProtoRes

// optional .proto.ReturnMsg msg = 1;
inline bool PKCancelProtoRes::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
inline void PKCancelProtoRes::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
inline const ::proto::ReturnMsg& PKCancelProtoRes::msg() const {
  // @@protoc_insertion_point(field_get:proto.PKCancelProtoRes.msg)
  return msg_ != NULL ? *msg_
                         : *::proto::ReturnMsg::internal_default_instance();
}
inline ::proto::ReturnMsg* PKCancelProtoRes::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::proto::ReturnMsg;
  }
  // @@protoc_insertion_point(field_mutable:proto.PKCancelProtoRes.msg)
  return msg_;
}
inline ::proto::ReturnMsg* PKCancelProtoRes::release_msg() {
  // @@protoc_insertion_point(field_release:proto.PKCancelProtoRes.msg)
  
  ::proto::ReturnMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void PKCancelProtoRes::set_allocated_msg(::proto::ReturnMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PKCancelProtoRes.msg)
}

inline const PKCancelProtoRes* PKCancelProtoRes::internal_default_instance() {
  return &PKCancelProtoRes_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PKCancelByProto_2eproto__INCLUDED
