// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ReconnectionByProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ReconnectionByProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {

namespace {

const ::google::protobuf::Descriptor* ReconnectionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReconnectionReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReconnectionRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReconnectionRes_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ReconnectionByProto_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ReconnectionByProto_2eproto() {
  protobuf_AddDesc_ReconnectionByProto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ReconnectionByProto.proto");
  GOOGLE_CHECK(file != NULL);
  ReconnectionReq_descriptor_ = file->message_type(0);
  static const int ReconnectionReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectionReq, roomid_),
  };
  ReconnectionReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReconnectionReq_descriptor_,
      ReconnectionReq::internal_default_instance(),
      ReconnectionReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReconnectionReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectionReq, _internal_metadata_));
  ReconnectionRes_descriptor_ = file->message_type(1);
  static const int ReconnectionRes_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectionRes, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectionRes, front_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectionRes, contrary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectionRes, maxbet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectionRes, frontbet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectionRes, contrarybet_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectionRes, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectionRes, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectionRes, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectionRes, isfirstopen_),
  };
  ReconnectionRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReconnectionRes_descriptor_,
      ReconnectionRes::internal_default_instance(),
      ReconnectionRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReconnectionRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconnectionRes, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ReconnectionByProto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReconnectionReq_descriptor_, ReconnectionReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReconnectionRes_descriptor_, ReconnectionRes::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ReconnectionByProto_2eproto() {
  ReconnectionReq_default_instance_.Shutdown();
  delete ReconnectionReq_reflection_;
  ReconnectionRes_default_instance_.Shutdown();
  delete ReconnectionRes_reflection_;
}

void protobuf_InitDefaults_ReconnectionByProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto::protobuf_InitDefaults_Entity_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ReconnectionReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ReconnectionRes_default_instance_.DefaultConstruct();
  ReconnectionReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReconnectionRes_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_ReconnectionByProto_2eproto_once_);
void protobuf_InitDefaults_ReconnectionByProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_ReconnectionByProto_2eproto_once_,
                 &protobuf_InitDefaults_ReconnectionByProto_2eproto_impl);
}
void protobuf_AddDesc_ReconnectionByProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_ReconnectionByProto_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031ReconnectionByProto.proto\022\005proto\032\014Enti"
    "ty.proto\"!\n\017ReconnectionReq\022\016\n\006roomId\030\001 "
    "\001(\t\"\311\001\n\017ReconnectionRes\022\035\n\003msg\030\001 \001(\0132\020.p"
    "roto.ReturnMsg\022\r\n\005front\030\002 \001(\005\022\020\n\010contrar"
    "y\030\003 \001(\005\022\016\n\006maxBet\030\004 \001(\005\022\020\n\010frontBet\030\005 \001("
    "\005\022\023\n\013contraryBet\030\006 \001(\005\022\r\n\005stage\030\007 \001(\t\022\014\n"
    "\004time\030\010 \001(\005\022\r\n\005money\030\t \001(\005\022\023\n\013isFirstOpe"
    "n\030\n \001(\005B \n\036com.sencorsta.ids.common.prot"
    "ob\006proto3", 329);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ReconnectionByProto.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_AddDesc_Entity_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ReconnectionByProto_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ReconnectionByProto_2eproto_once_);
void protobuf_AddDesc_ReconnectionByProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ReconnectionByProto_2eproto_once_,
                 &protobuf_AddDesc_ReconnectionByProto_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ReconnectionByProto_2eproto {
  StaticDescriptorInitializer_ReconnectionByProto_2eproto() {
    protobuf_AddDesc_ReconnectionByProto_2eproto();
  }
} static_descriptor_initializer_ReconnectionByProto_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReconnectionReq::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconnectionReq::ReconnectionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ReconnectionByProto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ReconnectionReq)
}

void ReconnectionReq::InitAsDefaultInstance() {
}

ReconnectionReq::ReconnectionReq(const ReconnectionReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.ReconnectionReq)
}

void ReconnectionReq::SharedCtor() {
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReconnectionReq::~ReconnectionReq() {
  // @@protoc_insertion_point(destructor:proto.ReconnectionReq)
  SharedDtor();
}

void ReconnectionReq::SharedDtor() {
  roomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReconnectionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReconnectionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReconnectionReq_descriptor_;
}

const ReconnectionReq& ReconnectionReq::default_instance() {
  protobuf_InitDefaults_ReconnectionByProto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReconnectionReq> ReconnectionReq_default_instance_;

ReconnectionReq* ReconnectionReq::New(::google::protobuf::Arena* arena) const {
  ReconnectionReq* n = new ReconnectionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReconnectionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ReconnectionReq)
  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReconnectionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ReconnectionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string roomId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ReconnectionReq.roomId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ReconnectionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ReconnectionReq)
  return false;
#undef DO_
}

void ReconnectionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ReconnectionReq)
  // optional string roomId = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReconnectionReq.roomId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomid(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.ReconnectionReq)
}

::google::protobuf::uint8* ReconnectionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ReconnectionReq)
  // optional string roomId = 1;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReconnectionReq.roomId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.ReconnectionReq)
  return target;
}

size_t ReconnectionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ReconnectionReq)
  size_t total_size = 0;

  // optional string roomId = 1;
  if (this->roomid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReconnectionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ReconnectionReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReconnectionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReconnectionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ReconnectionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ReconnectionReq)
    UnsafeMergeFrom(*source);
  }
}

void ReconnectionReq::MergeFrom(const ReconnectionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ReconnectionReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReconnectionReq::UnsafeMergeFrom(const ReconnectionReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.roomid().size() > 0) {

    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
}

void ReconnectionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ReconnectionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconnectionReq::CopyFrom(const ReconnectionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ReconnectionReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReconnectionReq::IsInitialized() const {

  return true;
}

void ReconnectionReq::Swap(ReconnectionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconnectionReq::InternalSwap(ReconnectionReq* other) {
  roomid_.Swap(&other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReconnectionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReconnectionReq_descriptor_;
  metadata.reflection = ReconnectionReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReconnectionReq

// optional string roomId = 1;
void ReconnectionReq::clear_roomid() {
  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReconnectionReq::roomid() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionReq.roomId)
  return roomid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReconnectionReq::set_roomid(const ::std::string& value) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ReconnectionReq.roomId)
}
void ReconnectionReq::set_roomid(const char* value) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ReconnectionReq.roomId)
}
void ReconnectionReq::set_roomid(const char* value, size_t size) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ReconnectionReq.roomId)
}
::std::string* ReconnectionReq::mutable_roomid() {
  
  // @@protoc_insertion_point(field_mutable:proto.ReconnectionReq.roomId)
  return roomid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReconnectionReq::release_roomid() {
  // @@protoc_insertion_point(field_release:proto.ReconnectionReq.roomId)
  
  return roomid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReconnectionReq::set_allocated_roomid(::std::string* roomid) {
  if (roomid != NULL) {
    
  } else {
    
  }
  roomid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomid);
  // @@protoc_insertion_point(field_set_allocated:proto.ReconnectionReq.roomId)
}

inline const ReconnectionReq* ReconnectionReq::internal_default_instance() {
  return &ReconnectionReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReconnectionRes::kMsgFieldNumber;
const int ReconnectionRes::kFrontFieldNumber;
const int ReconnectionRes::kContraryFieldNumber;
const int ReconnectionRes::kMaxBetFieldNumber;
const int ReconnectionRes::kFrontBetFieldNumber;
const int ReconnectionRes::kContraryBetFieldNumber;
const int ReconnectionRes::kStageFieldNumber;
const int ReconnectionRes::kTimeFieldNumber;
const int ReconnectionRes::kMoneyFieldNumber;
const int ReconnectionRes::kIsFirstOpenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconnectionRes::ReconnectionRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ReconnectionByProto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ReconnectionRes)
}

void ReconnectionRes::InitAsDefaultInstance() {
  msg_ = const_cast< ::proto::ReturnMsg*>(
      ::proto::ReturnMsg::internal_default_instance());
}

ReconnectionRes::ReconnectionRes(const ReconnectionRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.ReconnectionRes)
}

void ReconnectionRes::SharedCtor() {
  stage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_ = NULL;
  ::memset(&front_, 0, reinterpret_cast<char*>(&isfirstopen_) -
    reinterpret_cast<char*>(&front_) + sizeof(isfirstopen_));
  _cached_size_ = 0;
}

ReconnectionRes::~ReconnectionRes() {
  // @@protoc_insertion_point(destructor:proto.ReconnectionRes)
  SharedDtor();
}

void ReconnectionRes::SharedDtor() {
  stage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ReconnectionRes_default_instance_.get()) {
    delete msg_;
  }
}

void ReconnectionRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReconnectionRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReconnectionRes_descriptor_;
}

const ReconnectionRes& ReconnectionRes::default_instance() {
  protobuf_InitDefaults_ReconnectionByProto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReconnectionRes> ReconnectionRes_default_instance_;

ReconnectionRes* ReconnectionRes::New(::google::protobuf::Arena* arena) const {
  ReconnectionRes* n = new ReconnectionRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReconnectionRes::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ReconnectionRes)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ReconnectionRes, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ReconnectionRes*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(front_, time_);
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
  stage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(money_, isfirstopen_);

#undef ZR_HELPER_
#undef ZR_

}

bool ReconnectionRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ReconnectionRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.ReturnMsg msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_front;
        break;
      }

      // optional int32 front = 2;
      case 2: {
        if (tag == 16) {
         parse_front:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &front_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_contrary;
        break;
      }

      // optional int32 contrary = 3;
      case 3: {
        if (tag == 24) {
         parse_contrary:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &contrary_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_maxBet;
        break;
      }

      // optional int32 maxBet = 4;
      case 4: {
        if (tag == 32) {
         parse_maxBet:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxbet_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_frontBet;
        break;
      }

      // optional int32 frontBet = 5;
      case 5: {
        if (tag == 40) {
         parse_frontBet:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frontbet_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_contraryBet;
        break;
      }

      // optional int32 contraryBet = 6;
      case 6: {
        if (tag == 48) {
         parse_contraryBet:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &contrarybet_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_stage;
        break;
      }

      // optional string stage = 7;
      case 7: {
        if (tag == 58) {
         parse_stage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stage()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stage().data(), this->stage().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ReconnectionRes.stage"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_time;
        break;
      }

      // optional int32 time = 8;
      case 8: {
        if (tag == 64) {
         parse_time:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_money;
        break;
      }

      // optional int32 money = 9;
      case 9: {
        if (tag == 72) {
         parse_money:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_isFirstOpen;
        break;
      }

      // optional int32 isFirstOpen = 10;
      case 10: {
        if (tag == 80) {
         parse_isFirstOpen:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isfirstopen_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ReconnectionRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ReconnectionRes)
  return false;
#undef DO_
}

void ReconnectionRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ReconnectionRes)
  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_, output);
  }

  // optional int32 front = 2;
  if (this->front() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->front(), output);
  }

  // optional int32 contrary = 3;
  if (this->contrary() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->contrary(), output);
  }

  // optional int32 maxBet = 4;
  if (this->maxbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->maxbet(), output);
  }

  // optional int32 frontBet = 5;
  if (this->frontbet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->frontbet(), output);
  }

  // optional int32 contraryBet = 6;
  if (this->contrarybet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->contrarybet(), output);
  }

  // optional string stage = 7;
  if (this->stage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stage().data(), this->stage().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReconnectionRes.stage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->stage(), output);
  }

  // optional int32 time = 8;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->time(), output);
  }

  // optional int32 money = 9;
  if (this->money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->money(), output);
  }

  // optional int32 isFirstOpen = 10;
  if (this->isfirstopen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->isfirstopen(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.ReconnectionRes)
}

::google::protobuf::uint8* ReconnectionRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ReconnectionRes)
  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_, false, target);
  }

  // optional int32 front = 2;
  if (this->front() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->front(), target);
  }

  // optional int32 contrary = 3;
  if (this->contrary() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->contrary(), target);
  }

  // optional int32 maxBet = 4;
  if (this->maxbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->maxbet(), target);
  }

  // optional int32 frontBet = 5;
  if (this->frontbet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->frontbet(), target);
  }

  // optional int32 contraryBet = 6;
  if (this->contrarybet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->contrarybet(), target);
  }

  // optional string stage = 7;
  if (this->stage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stage().data(), this->stage().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ReconnectionRes.stage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->stage(), target);
  }

  // optional int32 time = 8;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->time(), target);
  }

  // optional int32 money = 9;
  if (this->money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->money(), target);
  }

  // optional int32 isFirstOpen = 10;
  if (this->isfirstopen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->isfirstopen(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.ReconnectionRes)
  return target;
}

size_t ReconnectionRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ReconnectionRes)
  size_t total_size = 0;

  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  // optional int32 front = 2;
  if (this->front() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->front());
  }

  // optional int32 contrary = 3;
  if (this->contrary() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->contrary());
  }

  // optional int32 maxBet = 4;
  if (this->maxbet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxbet());
  }

  // optional int32 frontBet = 5;
  if (this->frontbet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frontbet());
  }

  // optional int32 contraryBet = 6;
  if (this->contrarybet() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->contrarybet());
  }

  // optional string stage = 7;
  if (this->stage().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stage());
  }

  // optional int32 time = 8;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  // optional int32 money = 9;
  if (this->money() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->money());
  }

  // optional int32 isFirstOpen = 10;
  if (this->isfirstopen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isfirstopen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReconnectionRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ReconnectionRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReconnectionRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReconnectionRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ReconnectionRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ReconnectionRes)
    UnsafeMergeFrom(*source);
  }
}

void ReconnectionRes::MergeFrom(const ReconnectionRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ReconnectionRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReconnectionRes::UnsafeMergeFrom(const ReconnectionRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_msg()) {
    mutable_msg()->::proto::ReturnMsg::MergeFrom(from.msg());
  }
  if (from.front() != 0) {
    set_front(from.front());
  }
  if (from.contrary() != 0) {
    set_contrary(from.contrary());
  }
  if (from.maxbet() != 0) {
    set_maxbet(from.maxbet());
  }
  if (from.frontbet() != 0) {
    set_frontbet(from.frontbet());
  }
  if (from.contrarybet() != 0) {
    set_contrarybet(from.contrarybet());
  }
  if (from.stage().size() > 0) {

    stage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stage_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.money() != 0) {
    set_money(from.money());
  }
  if (from.isfirstopen() != 0) {
    set_isfirstopen(from.isfirstopen());
  }
}

void ReconnectionRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ReconnectionRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconnectionRes::CopyFrom(const ReconnectionRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ReconnectionRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReconnectionRes::IsInitialized() const {

  return true;
}

void ReconnectionRes::Swap(ReconnectionRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconnectionRes::InternalSwap(ReconnectionRes* other) {
  std::swap(msg_, other->msg_);
  std::swap(front_, other->front_);
  std::swap(contrary_, other->contrary_);
  std::swap(maxbet_, other->maxbet_);
  std::swap(frontbet_, other->frontbet_);
  std::swap(contrarybet_, other->contrarybet_);
  stage_.Swap(&other->stage_);
  std::swap(time_, other->time_);
  std::swap(money_, other->money_);
  std::swap(isfirstopen_, other->isfirstopen_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReconnectionRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReconnectionRes_descriptor_;
  metadata.reflection = ReconnectionRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReconnectionRes

// optional .proto.ReturnMsg msg = 1;
bool ReconnectionRes::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
void ReconnectionRes::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::proto::ReturnMsg& ReconnectionRes::msg() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.msg)
  return msg_ != NULL ? *msg_
                         : *::proto::ReturnMsg::internal_default_instance();
}
::proto::ReturnMsg* ReconnectionRes::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::proto::ReturnMsg;
  }
  // @@protoc_insertion_point(field_mutable:proto.ReconnectionRes.msg)
  return msg_;
}
::proto::ReturnMsg* ReconnectionRes::release_msg() {
  // @@protoc_insertion_point(field_release:proto.ReconnectionRes.msg)
  
  ::proto::ReturnMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
void ReconnectionRes::set_allocated_msg(::proto::ReturnMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ReconnectionRes.msg)
}

// optional int32 front = 2;
void ReconnectionRes::clear_front() {
  front_ = 0;
}
::google::protobuf::int32 ReconnectionRes::front() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.front)
  return front_;
}
void ReconnectionRes::set_front(::google::protobuf::int32 value) {
  
  front_ = value;
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.front)
}

// optional int32 contrary = 3;
void ReconnectionRes::clear_contrary() {
  contrary_ = 0;
}
::google::protobuf::int32 ReconnectionRes::contrary() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.contrary)
  return contrary_;
}
void ReconnectionRes::set_contrary(::google::protobuf::int32 value) {
  
  contrary_ = value;
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.contrary)
}

// optional int32 maxBet = 4;
void ReconnectionRes::clear_maxbet() {
  maxbet_ = 0;
}
::google::protobuf::int32 ReconnectionRes::maxbet() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.maxBet)
  return maxbet_;
}
void ReconnectionRes::set_maxbet(::google::protobuf::int32 value) {
  
  maxbet_ = value;
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.maxBet)
}

// optional int32 frontBet = 5;
void ReconnectionRes::clear_frontbet() {
  frontbet_ = 0;
}
::google::protobuf::int32 ReconnectionRes::frontbet() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.frontBet)
  return frontbet_;
}
void ReconnectionRes::set_frontbet(::google::protobuf::int32 value) {
  
  frontbet_ = value;
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.frontBet)
}

// optional int32 contraryBet = 6;
void ReconnectionRes::clear_contrarybet() {
  contrarybet_ = 0;
}
::google::protobuf::int32 ReconnectionRes::contrarybet() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.contraryBet)
  return contrarybet_;
}
void ReconnectionRes::set_contrarybet(::google::protobuf::int32 value) {
  
  contrarybet_ = value;
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.contraryBet)
}

// optional string stage = 7;
void ReconnectionRes::clear_stage() {
  stage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReconnectionRes::stage() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.stage)
  return stage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReconnectionRes::set_stage(const ::std::string& value) {
  
  stage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.stage)
}
void ReconnectionRes::set_stage(const char* value) {
  
  stage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ReconnectionRes.stage)
}
void ReconnectionRes::set_stage(const char* value, size_t size) {
  
  stage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ReconnectionRes.stage)
}
::std::string* ReconnectionRes::mutable_stage() {
  
  // @@protoc_insertion_point(field_mutable:proto.ReconnectionRes.stage)
  return stage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReconnectionRes::release_stage() {
  // @@protoc_insertion_point(field_release:proto.ReconnectionRes.stage)
  
  return stage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReconnectionRes::set_allocated_stage(::std::string* stage) {
  if (stage != NULL) {
    
  } else {
    
  }
  stage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stage);
  // @@protoc_insertion_point(field_set_allocated:proto.ReconnectionRes.stage)
}

// optional int32 time = 8;
void ReconnectionRes::clear_time() {
  time_ = 0;
}
::google::protobuf::int32 ReconnectionRes::time() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.time)
  return time_;
}
void ReconnectionRes::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.time)
}

// optional int32 money = 9;
void ReconnectionRes::clear_money() {
  money_ = 0;
}
::google::protobuf::int32 ReconnectionRes::money() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.money)
  return money_;
}
void ReconnectionRes::set_money(::google::protobuf::int32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.money)
}

// optional int32 isFirstOpen = 10;
void ReconnectionRes::clear_isfirstopen() {
  isfirstopen_ = 0;
}
::google::protobuf::int32 ReconnectionRes::isfirstopen() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.isFirstOpen)
  return isfirstopen_;
}
void ReconnectionRes::set_isfirstopen(::google::protobuf::int32 value) {
  
  isfirstopen_ = value;
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.isFirstOpen)
}

inline const ReconnectionRes* ReconnectionRes::internal_default_instance() {
  return &ReconnectionRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
