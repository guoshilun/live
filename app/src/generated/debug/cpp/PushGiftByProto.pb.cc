// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PushGiftByProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PushGiftByProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {

namespace {

const ::google::protobuf::Descriptor* pushGift_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pushGift_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PushGiftByProto_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_PushGiftByProto_2eproto() {
  protobuf_AddDesc_PushGiftByProto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PushGiftByProto.proto");
  GOOGLE_CHECK(file != NULL);
  pushGift_descriptor_ = file->message_type(0);
  static const int pushGift_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushGift, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushGift, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushGift, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushGift, picture_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushGift, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushGift, giftid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushGift, giftname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushGift, gifturl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushGift, gcartoonurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushGift, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushGift, msgid_),
  };
  pushGift_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      pushGift_descriptor_,
      pushGift::internal_default_instance(),
      pushGift_offsets_,
      -1,
      -1,
      -1,
      sizeof(pushGift),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pushGift, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PushGiftByProto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      pushGift_descriptor_, pushGift::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PushGiftByProto_2eproto() {
  pushGift_default_instance_.Shutdown();
  delete pushGift_reflection_;
}

void protobuf_InitDefaults_PushGiftByProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto::protobuf_InitDefaults_Entity_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  pushGift_default_instance_.DefaultConstruct();
  pushGift_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_PushGiftByProto_2eproto_once_);
void protobuf_InitDefaults_PushGiftByProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_PushGiftByProto_2eproto_once_,
                 &protobuf_InitDefaults_PushGiftByProto_2eproto_impl);
}
void protobuf_AddDesc_PushGiftByProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_PushGiftByProto_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025PushGiftByProto.proto\022\005proto\032\014Entity.p"
    "roto\"\302\001\n\010pushGift\022\014\n\004type\030\001 \001(\005\022\016\n\006statu"
    "s\030\002 \001(\005\022\016\n\006userId\030\003 \001(\t\022\017\n\007picture\030\004 \001(\t"
    "\022\020\n\010username\030\005 \001(\t\022\016\n\006giftId\030\006 \001(\t\022\020\n\010gi"
    "ftName\030\007 \001(\t\022\017\n\007giftUrl\030\010 \001(\t\022\023\n\013gCartoo"
    "nUrl\030\t \001(\t\022\016\n\006amount\030\n \001(\005\022\r\n\005msgId\030\013 \001("
    "\tB \n\036com.sencorsta.ids.common.protob\006pro"
    "to3", 283);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PushGiftByProto.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_AddDesc_Entity_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PushGiftByProto_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_PushGiftByProto_2eproto_once_);
void protobuf_AddDesc_PushGiftByProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_PushGiftByProto_2eproto_once_,
                 &protobuf_AddDesc_PushGiftByProto_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PushGiftByProto_2eproto {
  StaticDescriptorInitializer_PushGiftByProto_2eproto() {
    protobuf_AddDesc_PushGiftByProto_2eproto();
  }
} static_descriptor_initializer_PushGiftByProto_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pushGift::kTypeFieldNumber;
const int pushGift::kStatusFieldNumber;
const int pushGift::kUserIdFieldNumber;
const int pushGift::kPictureFieldNumber;
const int pushGift::kUsernameFieldNumber;
const int pushGift::kGiftIdFieldNumber;
const int pushGift::kGiftNameFieldNumber;
const int pushGift::kGiftUrlFieldNumber;
const int pushGift::kGCartoonUrlFieldNumber;
const int pushGift::kAmountFieldNumber;
const int pushGift::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pushGift::pushGift()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_PushGiftByProto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.pushGift)
}

void pushGift::InitAsDefaultInstance() {
}

pushGift::pushGift(const pushGift& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.pushGift)
}

void pushGift::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picture_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  giftid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  giftname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gifturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcartoonurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&amount_) -
    reinterpret_cast<char*>(&type_) + sizeof(amount_));
  _cached_size_ = 0;
}

pushGift::~pushGift() {
  // @@protoc_insertion_point(destructor:proto.pushGift)
  SharedDtor();
}

void pushGift::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picture_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  giftid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  giftname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gifturl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcartoonurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void pushGift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pushGift::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pushGift_descriptor_;
}

const pushGift& pushGift::default_instance() {
  protobuf_InitDefaults_PushGiftByProto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<pushGift> pushGift_default_instance_;

pushGift* pushGift::New(::google::protobuf::Arena* arena) const {
  pushGift* n = new pushGift;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void pushGift::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.pushGift)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(pushGift, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<pushGift*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, status_);
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  giftid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  giftname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gifturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcartoonurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = 0;
  msgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool pushGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.pushGift)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // optional int32 status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_userId;
        break;
      }

      // optional string userId = 3;
      case 3: {
        if (tag == 26) {
         parse_userId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.pushGift.userId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_picture;
        break;
      }

      // optional string picture = 4;
      case 4: {
        if (tag == 34) {
         parse_picture:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_picture()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->picture().data(), this->picture().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.pushGift.picture"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_username;
        break;
      }

      // optional string username = 5;
      case 5: {
        if (tag == 42) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.pushGift.username"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_giftId;
        break;
      }

      // optional string giftId = 6;
      case 6: {
        if (tag == 50) {
         parse_giftId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_giftid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->giftid().data(), this->giftid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.pushGift.giftId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_giftName;
        break;
      }

      // optional string giftName = 7;
      case 7: {
        if (tag == 58) {
         parse_giftName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_giftname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->giftname().data(), this->giftname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.pushGift.giftName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_giftUrl;
        break;
      }

      // optional string giftUrl = 8;
      case 8: {
        if (tag == 66) {
         parse_giftUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gifturl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gifturl().data(), this->gifturl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.pushGift.giftUrl"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_gCartoonUrl;
        break;
      }

      // optional string gCartoonUrl = 9;
      case 9: {
        if (tag == 74) {
         parse_gCartoonUrl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gcartoonurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gcartoonurl().data(), this->gcartoonurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.pushGift.gCartoonUrl"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_amount;
        break;
      }

      // optional int32 amount = 10;
      case 10: {
        if (tag == 80) {
         parse_amount:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_msgId;
        break;
      }

      // optional string msgId = 11;
      case 11: {
        if (tag == 90) {
         parse_msgId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msgid().data(), this->msgid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.pushGift.msgId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.pushGift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.pushGift)
  return false;
#undef DO_
}

void pushGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.pushGift)
  // optional int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }

  // optional string userId = 3;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushGift.userId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->userid(), output);
  }

  // optional string picture = 4;
  if (this->picture().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->picture().data(), this->picture().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushGift.picture");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->picture(), output);
  }

  // optional string username = 5;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushGift.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->username(), output);
  }

  // optional string giftId = 6;
  if (this->giftid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->giftid().data(), this->giftid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushGift.giftId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->giftid(), output);
  }

  // optional string giftName = 7;
  if (this->giftname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->giftname().data(), this->giftname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushGift.giftName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->giftname(), output);
  }

  // optional string giftUrl = 8;
  if (this->gifturl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gifturl().data(), this->gifturl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushGift.giftUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->gifturl(), output);
  }

  // optional string gCartoonUrl = 9;
  if (this->gcartoonurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcartoonurl().data(), this->gcartoonurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushGift.gCartoonUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->gcartoonurl(), output);
  }

  // optional int32 amount = 10;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->amount(), output);
  }

  // optional string msgId = 11;
  if (this->msgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgid().data(), this->msgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushGift.msgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->msgid(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.pushGift)
}

::google::protobuf::uint8* pushGift::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.pushGift)
  // optional int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }

  // optional string userId = 3;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushGift.userId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->userid(), target);
  }

  // optional string picture = 4;
  if (this->picture().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->picture().data(), this->picture().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushGift.picture");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->picture(), target);
  }

  // optional string username = 5;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushGift.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->username(), target);
  }

  // optional string giftId = 6;
  if (this->giftid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->giftid().data(), this->giftid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushGift.giftId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->giftid(), target);
  }

  // optional string giftName = 7;
  if (this->giftname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->giftname().data(), this->giftname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushGift.giftName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->giftname(), target);
  }

  // optional string giftUrl = 8;
  if (this->gifturl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gifturl().data(), this->gifturl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushGift.giftUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->gifturl(), target);
  }

  // optional string gCartoonUrl = 9;
  if (this->gcartoonurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcartoonurl().data(), this->gcartoonurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushGift.gCartoonUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->gcartoonurl(), target);
  }

  // optional int32 amount = 10;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->amount(), target);
  }

  // optional string msgId = 11;
  if (this->msgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgid().data(), this->msgid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.pushGift.msgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->msgid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.pushGift)
  return target;
}

size_t pushGift::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.pushGift)
  size_t total_size = 0;

  // optional int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional int32 status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // optional string userId = 3;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // optional string picture = 4;
  if (this->picture().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->picture());
  }

  // optional string username = 5;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional string giftId = 6;
  if (this->giftid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->giftid());
  }

  // optional string giftName = 7;
  if (this->giftname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->giftname());
  }

  // optional string giftUrl = 8;
  if (this->gifturl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gifturl());
  }

  // optional string gCartoonUrl = 9;
  if (this->gcartoonurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gcartoonurl());
  }

  // optional int32 amount = 10;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->amount());
  }

  // optional string msgId = 11;
  if (this->msgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pushGift::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.pushGift)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const pushGift* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pushGift>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.pushGift)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.pushGift)
    UnsafeMergeFrom(*source);
  }
}

void pushGift::MergeFrom(const pushGift& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.pushGift)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void pushGift::UnsafeMergeFrom(const pushGift& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.picture().size() > 0) {

    picture_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.picture_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.giftid().size() > 0) {

    giftid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.giftid_);
  }
  if (from.giftname().size() > 0) {

    giftname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.giftname_);
  }
  if (from.gifturl().size() > 0) {

    gifturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gifturl_);
  }
  if (from.gcartoonurl().size() > 0) {

    gcartoonurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcartoonurl_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.msgid().size() > 0) {

    msgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgid_);
  }
}

void pushGift::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.pushGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pushGift::CopyFrom(const pushGift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.pushGift)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool pushGift::IsInitialized() const {

  return true;
}

void pushGift::Swap(pushGift* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pushGift::InternalSwap(pushGift* other) {
  std::swap(type_, other->type_);
  std::swap(status_, other->status_);
  userid_.Swap(&other->userid_);
  picture_.Swap(&other->picture_);
  username_.Swap(&other->username_);
  giftid_.Swap(&other->giftid_);
  giftname_.Swap(&other->giftname_);
  gifturl_.Swap(&other->gifturl_);
  gcartoonurl_.Swap(&other->gcartoonurl_);
  std::swap(amount_, other->amount_);
  msgid_.Swap(&other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata pushGift::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pushGift_descriptor_;
  metadata.reflection = pushGift_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// pushGift

// optional int32 type = 1;
void pushGift::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 pushGift::type() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.type)
  return type_;
}
void pushGift::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.pushGift.type)
}

// optional int32 status = 2;
void pushGift::clear_status() {
  status_ = 0;
}
::google::protobuf::int32 pushGift::status() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.status)
  return status_;
}
void pushGift::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:proto.pushGift.status)
}

// optional string userId = 3;
void pushGift::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& pushGift::userid() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.userId)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushGift::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushGift.userId)
}
void pushGift::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushGift.userId)
}
void pushGift::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushGift.userId)
}
::std::string* pushGift::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushGift.userId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* pushGift::release_userid() {
  // @@protoc_insertion_point(field_release:proto.pushGift.userId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushGift::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:proto.pushGift.userId)
}

// optional string picture = 4;
void pushGift::clear_picture() {
  picture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& pushGift::picture() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.picture)
  return picture_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushGift::set_picture(const ::std::string& value) {
  
  picture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushGift.picture)
}
void pushGift::set_picture(const char* value) {
  
  picture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushGift.picture)
}
void pushGift::set_picture(const char* value, size_t size) {
  
  picture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushGift.picture)
}
::std::string* pushGift::mutable_picture() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushGift.picture)
  return picture_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* pushGift::release_picture() {
  // @@protoc_insertion_point(field_release:proto.pushGift.picture)
  
  return picture_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushGift::set_allocated_picture(::std::string* picture) {
  if (picture != NULL) {
    
  } else {
    
  }
  picture_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), picture);
  // @@protoc_insertion_point(field_set_allocated:proto.pushGift.picture)
}

// optional string username = 5;
void pushGift::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& pushGift::username() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushGift::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushGift.username)
}
void pushGift::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushGift.username)
}
void pushGift::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushGift.username)
}
::std::string* pushGift::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushGift.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* pushGift::release_username() {
  // @@protoc_insertion_point(field_release:proto.pushGift.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushGift::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:proto.pushGift.username)
}

// optional string giftId = 6;
void pushGift::clear_giftid() {
  giftid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& pushGift::giftid() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.giftId)
  return giftid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushGift::set_giftid(const ::std::string& value) {
  
  giftid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushGift.giftId)
}
void pushGift::set_giftid(const char* value) {
  
  giftid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushGift.giftId)
}
void pushGift::set_giftid(const char* value, size_t size) {
  
  giftid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushGift.giftId)
}
::std::string* pushGift::mutable_giftid() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushGift.giftId)
  return giftid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* pushGift::release_giftid() {
  // @@protoc_insertion_point(field_release:proto.pushGift.giftId)
  
  return giftid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushGift::set_allocated_giftid(::std::string* giftid) {
  if (giftid != NULL) {
    
  } else {
    
  }
  giftid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), giftid);
  // @@protoc_insertion_point(field_set_allocated:proto.pushGift.giftId)
}

// optional string giftName = 7;
void pushGift::clear_giftname() {
  giftname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& pushGift::giftname() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.giftName)
  return giftname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushGift::set_giftname(const ::std::string& value) {
  
  giftname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushGift.giftName)
}
void pushGift::set_giftname(const char* value) {
  
  giftname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushGift.giftName)
}
void pushGift::set_giftname(const char* value, size_t size) {
  
  giftname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushGift.giftName)
}
::std::string* pushGift::mutable_giftname() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushGift.giftName)
  return giftname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* pushGift::release_giftname() {
  // @@protoc_insertion_point(field_release:proto.pushGift.giftName)
  
  return giftname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushGift::set_allocated_giftname(::std::string* giftname) {
  if (giftname != NULL) {
    
  } else {
    
  }
  giftname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), giftname);
  // @@protoc_insertion_point(field_set_allocated:proto.pushGift.giftName)
}

// optional string giftUrl = 8;
void pushGift::clear_gifturl() {
  gifturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& pushGift::gifturl() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.giftUrl)
  return gifturl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushGift::set_gifturl(const ::std::string& value) {
  
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushGift.giftUrl)
}
void pushGift::set_gifturl(const char* value) {
  
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushGift.giftUrl)
}
void pushGift::set_gifturl(const char* value, size_t size) {
  
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushGift.giftUrl)
}
::std::string* pushGift::mutable_gifturl() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushGift.giftUrl)
  return gifturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* pushGift::release_gifturl() {
  // @@protoc_insertion_point(field_release:proto.pushGift.giftUrl)
  
  return gifturl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushGift::set_allocated_gifturl(::std::string* gifturl) {
  if (gifturl != NULL) {
    
  } else {
    
  }
  gifturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gifturl);
  // @@protoc_insertion_point(field_set_allocated:proto.pushGift.giftUrl)
}

// optional string gCartoonUrl = 9;
void pushGift::clear_gcartoonurl() {
  gcartoonurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& pushGift::gcartoonurl() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.gCartoonUrl)
  return gcartoonurl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushGift::set_gcartoonurl(const ::std::string& value) {
  
  gcartoonurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushGift.gCartoonUrl)
}
void pushGift::set_gcartoonurl(const char* value) {
  
  gcartoonurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushGift.gCartoonUrl)
}
void pushGift::set_gcartoonurl(const char* value, size_t size) {
  
  gcartoonurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushGift.gCartoonUrl)
}
::std::string* pushGift::mutable_gcartoonurl() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushGift.gCartoonUrl)
  return gcartoonurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* pushGift::release_gcartoonurl() {
  // @@protoc_insertion_point(field_release:proto.pushGift.gCartoonUrl)
  
  return gcartoonurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushGift::set_allocated_gcartoonurl(::std::string* gcartoonurl) {
  if (gcartoonurl != NULL) {
    
  } else {
    
  }
  gcartoonurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gcartoonurl);
  // @@protoc_insertion_point(field_set_allocated:proto.pushGift.gCartoonUrl)
}

// optional int32 amount = 10;
void pushGift::clear_amount() {
  amount_ = 0;
}
::google::protobuf::int32 pushGift::amount() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.amount)
  return amount_;
}
void pushGift::set_amount(::google::protobuf::int32 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:proto.pushGift.amount)
}

// optional string msgId = 11;
void pushGift::clear_msgid() {
  msgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& pushGift::msgid() const {
  // @@protoc_insertion_point(field_get:proto.pushGift.msgId)
  return msgid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushGift::set_msgid(const ::std::string& value) {
  
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.pushGift.msgId)
}
void pushGift::set_msgid(const char* value) {
  
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.pushGift.msgId)
}
void pushGift::set_msgid(const char* value, size_t size) {
  
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.pushGift.msgId)
}
::std::string* pushGift::mutable_msgid() {
  
  // @@protoc_insertion_point(field_mutable:proto.pushGift.msgId)
  return msgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* pushGift::release_msgid() {
  // @@protoc_insertion_point(field_release:proto.pushGift.msgId)
  
  return msgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void pushGift::set_allocated_msgid(::std::string* msgid) {
  if (msgid != NULL) {
    
  } else {
    
  }
  msgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgid);
  // @@protoc_insertion_point(field_set_allocated:proto.pushGift.msgId)
}

inline const pushGift* pushGift::internal_default_instance() {
  return &pushGift_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
