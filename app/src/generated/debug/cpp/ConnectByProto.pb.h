// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConnectByProto.proto

#ifndef PROTOBUF_ConnectByProto_2eproto__INCLUDED
#define PROTOBUF_ConnectByProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Entity.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ConnectByProto_2eproto();
void protobuf_InitDefaults_ConnectByProto_2eproto();
void protobuf_AssignDesc_ConnectByProto_2eproto();
void protobuf_ShutdownFile_ConnectByProto_2eproto();

class ConnectByProtoReq;
class ConnectByProtoRes;

// ===================================================================

class ConnectByProtoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ConnectByProtoReq) */ {
 public:
  ConnectByProtoReq();
  virtual ~ConnectByProtoReq();

  ConnectByProtoReq(const ConnectByProtoReq& from);

  inline ConnectByProtoReq& operator=(const ConnectByProtoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectByProtoReq& default_instance();

  static const ConnectByProtoReq* internal_default_instance();

  void Swap(ConnectByProtoReq* other);

  // implements Message ----------------------------------------------

  inline ConnectByProtoReq* New() const { return New(NULL); }

  ConnectByProtoReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnectByProtoReq& from);
  void MergeFrom(const ConnectByProtoReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConnectByProtoReq* other);
  void UnsafeMergeFrom(const ConnectByProtoReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:proto.ConnectByProtoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ConnectByProto_2eproto_impl();
  friend void  protobuf_AddDesc_ConnectByProto_2eproto_impl();
  friend void protobuf_AssignDesc_ConnectByProto_2eproto();
  friend void protobuf_ShutdownFile_ConnectByProto_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ConnectByProtoReq> ConnectByProtoReq_default_instance_;

// -------------------------------------------------------------------

class ConnectByProtoRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ConnectByProtoRes) */ {
 public:
  ConnectByProtoRes();
  virtual ~ConnectByProtoRes();

  ConnectByProtoRes(const ConnectByProtoRes& from);

  inline ConnectByProtoRes& operator=(const ConnectByProtoRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectByProtoRes& default_instance();

  static const ConnectByProtoRes* internal_default_instance();

  void Swap(ConnectByProtoRes* other);

  // implements Message ----------------------------------------------

  inline ConnectByProtoRes* New() const { return New(NULL); }

  ConnectByProtoRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnectByProtoRes& from);
  void MergeFrom(const ConnectByProtoRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConnectByProtoRes* other);
  void UnsafeMergeFrom(const ConnectByProtoRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.ReturnMsg msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::proto::ReturnMsg& msg() const;
  ::proto::ReturnMsg* mutable_msg();
  ::proto::ReturnMsg* release_msg();
  void set_allocated_msg(::proto::ReturnMsg* msg);

  // optional string userId = 2;
  void clear_userid();
  static const int kUserIdFieldNumber = 2;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // optional string account = 3;
  void clear_account();
  static const int kAccountFieldNumber = 3;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string nickname = 4;
  void clear_nickname();
  static const int kNicknameFieldNumber = 4;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional int32 sex = 5;
  void clear_sex();
  static const int kSexFieldNumber = 5;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional string birthday = 6;
  void clear_birthday();
  static const int kBirthdayFieldNumber = 6;
  const ::std::string& birthday() const;
  void set_birthday(const ::std::string& value);
  void set_birthday(const char* value);
  void set_birthday(const char* value, size_t size);
  ::std::string* mutable_birthday();
  ::std::string* release_birthday();
  void set_allocated_birthday(::std::string* birthday);

  // optional string sgin = 7;
  void clear_sgin();
  static const int kSginFieldNumber = 7;
  const ::std::string& sgin() const;
  void set_sgin(const ::std::string& value);
  void set_sgin(const char* value);
  void set_sgin(const char* value, size_t size);
  ::std::string* mutable_sgin();
  ::std::string* release_sgin();
  void set_allocated_sgin(::std::string* sgin);

  // optional string background = 8;
  void clear_background();
  static const int kBackgroundFieldNumber = 8;
  const ::std::string& background() const;
  void set_background(const ::std::string& value);
  void set_background(const char* value);
  void set_background(const char* value, size_t size);
  ::std::string* mutable_background();
  ::std::string* release_background();
  void set_allocated_background(::std::string* background);

  // optional string picture = 9;
  void clear_picture();
  static const int kPictureFieldNumber = 9;
  const ::std::string& picture() const;
  void set_picture(const ::std::string& value);
  void set_picture(const char* value);
  void set_picture(const char* value, size_t size);
  ::std::string* mutable_picture();
  ::std::string* release_picture();
  void set_allocated_picture(::std::string* picture);

  // optional string region = 10;
  void clear_region();
  static const int kRegionFieldNumber = 10;
  const ::std::string& region() const;
  void set_region(const ::std::string& value);
  void set_region(const char* value);
  void set_region(const char* value, size_t size);
  ::std::string* mutable_region();
  ::std::string* release_region();
  void set_allocated_region(::std::string* region);

  // optional string phone = 11;
  void clear_phone();
  static const int kPhoneFieldNumber = 11;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // optional int32 userExperience = 12;
  void clear_userexperience();
  static const int kUserExperienceFieldNumber = 12;
  ::google::protobuf::int32 userexperience() const;
  void set_userexperience(::google::protobuf::int32 value);

  // optional int32 userGrade = 13;
  void clear_usergrade();
  static const int kUserGradeFieldNumber = 13;
  ::google::protobuf::int32 usergrade() const;
  void set_usergrade(::google::protobuf::int32 value);

  // optional int32 anchorExperience = 14;
  void clear_anchorexperience();
  static const int kAnchorExperienceFieldNumber = 14;
  ::google::protobuf::int32 anchorexperience() const;
  void set_anchorexperience(::google::protobuf::int32 value);

  // optional int32 anchorGrade = 15;
  void clear_anchorgrade();
  static const int kAnchorGradeFieldNumber = 15;
  ::google::protobuf::int32 anchorgrade() const;
  void set_anchorgrade(::google::protobuf::int32 value);

  // optional int32 onlineTime = 16;
  void clear_onlinetime();
  static const int kOnlineTimeFieldNumber = 16;
  ::google::protobuf::int32 onlinetime() const;
  void set_onlinetime(::google::protobuf::int32 value);

  // optional int32 type = 17;
  void clear_type();
  static const int kTypeFieldNumber = 17;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 pwdStatus = 18;
  void clear_pwdstatus();
  static const int kPwdStatusFieldNumber = 18;
  ::google::protobuf::int32 pwdstatus() const;
  void set_pwdstatus(::google::protobuf::int32 value);

  // optional int32 userStatus = 19;
  void clear_userstatus();
  static const int kUserStatusFieldNumber = 19;
  ::google::protobuf::int32 userstatus() const;
  void set_userstatus(::google::protobuf::int32 value);

  // optional int32 autonymStatus = 20;
  void clear_autonymstatus();
  static const int kAutonymStatusFieldNumber = 20;
  ::google::protobuf::int32 autonymstatus() const;
  void set_autonymstatus(::google::protobuf::int32 value);

  // optional string openId = 21;
  void clear_openid();
  static const int kOpenIdFieldNumber = 21;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // optional string qqId = 22;
  void clear_qqid();
  static const int kQqIdFieldNumber = 22;
  const ::std::string& qqid() const;
  void set_qqid(const ::std::string& value);
  void set_qqid(const char* value);
  void set_qqid(const char* value, size_t size);
  ::std::string* mutable_qqid();
  ::std::string* release_qqid();
  void set_allocated_qqid(::std::string* qqid);

  // optional string iphoneId = 23;
  void clear_iphoneid();
  static const int kIphoneIdFieldNumber = 23;
  const ::std::string& iphoneid() const;
  void set_iphoneid(const ::std::string& value);
  void set_iphoneid(const char* value);
  void set_iphoneid(const char* value, size_t size);
  ::std::string* mutable_iphoneid();
  ::std::string* release_iphoneid();
  void set_allocated_iphoneid(::std::string* iphoneid);

  // optional string isSkip = 24;
  void clear_isskip();
  static const int kIsSkipFieldNumber = 24;
  const ::std::string& isskip() const;
  void set_isskip(const ::std::string& value);
  void set_isskip(const char* value);
  void set_isskip(const char* value, size_t size);
  ::std::string* mutable_isskip();
  ::std::string* release_isskip();
  void set_allocated_isskip(::std::string* isskip);

  // @@protoc_insertion_point(class_scope:proto.ConnectByProtoRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr birthday_;
  ::google::protobuf::internal::ArenaStringPtr sgin_;
  ::google::protobuf::internal::ArenaStringPtr background_;
  ::google::protobuf::internal::ArenaStringPtr picture_;
  ::google::protobuf::internal::ArenaStringPtr region_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  ::google::protobuf::internal::ArenaStringPtr qqid_;
  ::google::protobuf::internal::ArenaStringPtr iphoneid_;
  ::google::protobuf::internal::ArenaStringPtr isskip_;
  ::proto::ReturnMsg* msg_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 userexperience_;
  ::google::protobuf::int32 usergrade_;
  ::google::protobuf::int32 anchorexperience_;
  ::google::protobuf::int32 anchorgrade_;
  ::google::protobuf::int32 onlinetime_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 pwdstatus_;
  ::google::protobuf::int32 userstatus_;
  ::google::protobuf::int32 autonymstatus_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ConnectByProto_2eproto_impl();
  friend void  protobuf_AddDesc_ConnectByProto_2eproto_impl();
  friend void protobuf_AssignDesc_ConnectByProto_2eproto();
  friend void protobuf_ShutdownFile_ConnectByProto_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ConnectByProtoRes> ConnectByProtoRes_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnectByProtoReq

// optional string token = 1;
inline void ConnectByProtoReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectByProtoReq::token() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoReq.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoReq.token)
}
inline void ConnectByProtoReq::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoReq.token)
}
inline void ConnectByProtoReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoReq.token)
}
inline ::std::string* ConnectByProtoReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectByProtoReq::release_token() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoReq.token)
}

inline const ConnectByProtoReq* ConnectByProtoReq::internal_default_instance() {
  return &ConnectByProtoReq_default_instance_.get();
}
// -------------------------------------------------------------------

// ConnectByProtoRes

// optional .proto.ReturnMsg msg = 1;
inline bool ConnectByProtoRes::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
inline void ConnectByProtoRes::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
inline const ::proto::ReturnMsg& ConnectByProtoRes::msg() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.msg)
  return msg_ != NULL ? *msg_
                         : *::proto::ReturnMsg::internal_default_instance();
}
inline ::proto::ReturnMsg* ConnectByProtoRes::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::proto::ReturnMsg;
  }
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.msg)
  return msg_;
}
inline ::proto::ReturnMsg* ConnectByProtoRes::release_msg() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.msg)
  
  ::proto::ReturnMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void ConnectByProtoRes::set_allocated_msg(::proto::ReturnMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.msg)
}

// optional string userId = 2;
inline void ConnectByProtoRes::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectByProtoRes::userid() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.userId)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.userId)
}
inline void ConnectByProtoRes::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.userId)
}
inline void ConnectByProtoRes::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.userId)
}
inline ::std::string* ConnectByProtoRes::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.userId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectByProtoRes::release_userid() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.userId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.userId)
}

// optional string account = 3;
inline void ConnectByProtoRes::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectByProtoRes::account() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.account)
}
inline void ConnectByProtoRes::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.account)
}
inline void ConnectByProtoRes::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.account)
}
inline ::std::string* ConnectByProtoRes::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectByProtoRes::release_account() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.account)
}

// optional string nickname = 4;
inline void ConnectByProtoRes::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectByProtoRes::nickname() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.nickname)
}
inline void ConnectByProtoRes::set_nickname(const char* value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.nickname)
}
inline void ConnectByProtoRes::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.nickname)
}
inline ::std::string* ConnectByProtoRes::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectByProtoRes::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.nickname)
}

// optional int32 sex = 5;
inline void ConnectByProtoRes::clear_sex() {
  sex_ = 0;
}
inline ::google::protobuf::int32 ConnectByProtoRes::sex() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.sex)
  return sex_;
}
inline void ConnectByProtoRes::set_sex(::google::protobuf::int32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.sex)
}

// optional string birthday = 6;
inline void ConnectByProtoRes::clear_birthday() {
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectByProtoRes::birthday() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.birthday)
  return birthday_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_birthday(const ::std::string& value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.birthday)
}
inline void ConnectByProtoRes::set_birthday(const char* value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.birthday)
}
inline void ConnectByProtoRes::set_birthday(const char* value, size_t size) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.birthday)
}
inline ::std::string* ConnectByProtoRes::mutable_birthday() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.birthday)
  return birthday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectByProtoRes::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.birthday)
  
  return birthday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_allocated_birthday(::std::string* birthday) {
  if (birthday != NULL) {
    
  } else {
    
  }
  birthday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birthday);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.birthday)
}

// optional string sgin = 7;
inline void ConnectByProtoRes::clear_sgin() {
  sgin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectByProtoRes::sgin() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.sgin)
  return sgin_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_sgin(const ::std::string& value) {
  
  sgin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.sgin)
}
inline void ConnectByProtoRes::set_sgin(const char* value) {
  
  sgin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.sgin)
}
inline void ConnectByProtoRes::set_sgin(const char* value, size_t size) {
  
  sgin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.sgin)
}
inline ::std::string* ConnectByProtoRes::mutable_sgin() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.sgin)
  return sgin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectByProtoRes::release_sgin() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.sgin)
  
  return sgin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_allocated_sgin(::std::string* sgin) {
  if (sgin != NULL) {
    
  } else {
    
  }
  sgin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sgin);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.sgin)
}

// optional string background = 8;
inline void ConnectByProtoRes::clear_background() {
  background_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectByProtoRes::background() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.background)
  return background_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_background(const ::std::string& value) {
  
  background_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.background)
}
inline void ConnectByProtoRes::set_background(const char* value) {
  
  background_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.background)
}
inline void ConnectByProtoRes::set_background(const char* value, size_t size) {
  
  background_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.background)
}
inline ::std::string* ConnectByProtoRes::mutable_background() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.background)
  return background_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectByProtoRes::release_background() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.background)
  
  return background_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_allocated_background(::std::string* background) {
  if (background != NULL) {
    
  } else {
    
  }
  background_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), background);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.background)
}

// optional string picture = 9;
inline void ConnectByProtoRes::clear_picture() {
  picture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectByProtoRes::picture() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.picture)
  return picture_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_picture(const ::std::string& value) {
  
  picture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.picture)
}
inline void ConnectByProtoRes::set_picture(const char* value) {
  
  picture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.picture)
}
inline void ConnectByProtoRes::set_picture(const char* value, size_t size) {
  
  picture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.picture)
}
inline ::std::string* ConnectByProtoRes::mutable_picture() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.picture)
  return picture_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectByProtoRes::release_picture() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.picture)
  
  return picture_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_allocated_picture(::std::string* picture) {
  if (picture != NULL) {
    
  } else {
    
  }
  picture_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), picture);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.picture)
}

// optional string region = 10;
inline void ConnectByProtoRes::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectByProtoRes::region() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.region)
  return region_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.region)
}
inline void ConnectByProtoRes::set_region(const char* value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.region)
}
inline void ConnectByProtoRes::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.region)
}
inline ::std::string* ConnectByProtoRes::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectByProtoRes::release_region() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.region)
}

// optional string phone = 11;
inline void ConnectByProtoRes::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectByProtoRes::phone() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.phone)
  return phone_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.phone)
}
inline void ConnectByProtoRes::set_phone(const char* value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.phone)
}
inline void ConnectByProtoRes::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.phone)
}
inline ::std::string* ConnectByProtoRes::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectByProtoRes::release_phone() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.phone)
}

// optional int32 userExperience = 12;
inline void ConnectByProtoRes::clear_userexperience() {
  userexperience_ = 0;
}
inline ::google::protobuf::int32 ConnectByProtoRes::userexperience() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.userExperience)
  return userexperience_;
}
inline void ConnectByProtoRes::set_userexperience(::google::protobuf::int32 value) {
  
  userexperience_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.userExperience)
}

// optional int32 userGrade = 13;
inline void ConnectByProtoRes::clear_usergrade() {
  usergrade_ = 0;
}
inline ::google::protobuf::int32 ConnectByProtoRes::usergrade() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.userGrade)
  return usergrade_;
}
inline void ConnectByProtoRes::set_usergrade(::google::protobuf::int32 value) {
  
  usergrade_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.userGrade)
}

// optional int32 anchorExperience = 14;
inline void ConnectByProtoRes::clear_anchorexperience() {
  anchorexperience_ = 0;
}
inline ::google::protobuf::int32 ConnectByProtoRes::anchorexperience() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.anchorExperience)
  return anchorexperience_;
}
inline void ConnectByProtoRes::set_anchorexperience(::google::protobuf::int32 value) {
  
  anchorexperience_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.anchorExperience)
}

// optional int32 anchorGrade = 15;
inline void ConnectByProtoRes::clear_anchorgrade() {
  anchorgrade_ = 0;
}
inline ::google::protobuf::int32 ConnectByProtoRes::anchorgrade() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.anchorGrade)
  return anchorgrade_;
}
inline void ConnectByProtoRes::set_anchorgrade(::google::protobuf::int32 value) {
  
  anchorgrade_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.anchorGrade)
}

// optional int32 onlineTime = 16;
inline void ConnectByProtoRes::clear_onlinetime() {
  onlinetime_ = 0;
}
inline ::google::protobuf::int32 ConnectByProtoRes::onlinetime() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.onlineTime)
  return onlinetime_;
}
inline void ConnectByProtoRes::set_onlinetime(::google::protobuf::int32 value) {
  
  onlinetime_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.onlineTime)
}

// optional int32 type = 17;
inline void ConnectByProtoRes::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 ConnectByProtoRes::type() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.type)
  return type_;
}
inline void ConnectByProtoRes::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.type)
}

// optional int32 pwdStatus = 18;
inline void ConnectByProtoRes::clear_pwdstatus() {
  pwdstatus_ = 0;
}
inline ::google::protobuf::int32 ConnectByProtoRes::pwdstatus() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.pwdStatus)
  return pwdstatus_;
}
inline void ConnectByProtoRes::set_pwdstatus(::google::protobuf::int32 value) {
  
  pwdstatus_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.pwdStatus)
}

// optional int32 userStatus = 19;
inline void ConnectByProtoRes::clear_userstatus() {
  userstatus_ = 0;
}
inline ::google::protobuf::int32 ConnectByProtoRes::userstatus() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.userStatus)
  return userstatus_;
}
inline void ConnectByProtoRes::set_userstatus(::google::protobuf::int32 value) {
  
  userstatus_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.userStatus)
}

// optional int32 autonymStatus = 20;
inline void ConnectByProtoRes::clear_autonymstatus() {
  autonymstatus_ = 0;
}
inline ::google::protobuf::int32 ConnectByProtoRes::autonymstatus() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.autonymStatus)
  return autonymstatus_;
}
inline void ConnectByProtoRes::set_autonymstatus(::google::protobuf::int32 value) {
  
  autonymstatus_ = value;
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.autonymStatus)
}

// optional string openId = 21;
inline void ConnectByProtoRes::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectByProtoRes::openid() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.openId)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_openid(const ::std::string& value) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.openId)
}
inline void ConnectByProtoRes::set_openid(const char* value) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.openId)
}
inline void ConnectByProtoRes::set_openid(const char* value, size_t size) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.openId)
}
inline ::std::string* ConnectByProtoRes::mutable_openid() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.openId)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectByProtoRes::release_openid() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.openId)
  
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    
  } else {
    
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.openId)
}

// optional string qqId = 22;
inline void ConnectByProtoRes::clear_qqid() {
  qqid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectByProtoRes::qqid() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.qqId)
  return qqid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_qqid(const ::std::string& value) {
  
  qqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.qqId)
}
inline void ConnectByProtoRes::set_qqid(const char* value) {
  
  qqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.qqId)
}
inline void ConnectByProtoRes::set_qqid(const char* value, size_t size) {
  
  qqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.qqId)
}
inline ::std::string* ConnectByProtoRes::mutable_qqid() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.qqId)
  return qqid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectByProtoRes::release_qqid() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.qqId)
  
  return qqid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_allocated_qqid(::std::string* qqid) {
  if (qqid != NULL) {
    
  } else {
    
  }
  qqid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qqid);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.qqId)
}

// optional string iphoneId = 23;
inline void ConnectByProtoRes::clear_iphoneid() {
  iphoneid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectByProtoRes::iphoneid() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.iphoneId)
  return iphoneid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_iphoneid(const ::std::string& value) {
  
  iphoneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.iphoneId)
}
inline void ConnectByProtoRes::set_iphoneid(const char* value) {
  
  iphoneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.iphoneId)
}
inline void ConnectByProtoRes::set_iphoneid(const char* value, size_t size) {
  
  iphoneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.iphoneId)
}
inline ::std::string* ConnectByProtoRes::mutable_iphoneid() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.iphoneId)
  return iphoneid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectByProtoRes::release_iphoneid() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.iphoneId)
  
  return iphoneid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_allocated_iphoneid(::std::string* iphoneid) {
  if (iphoneid != NULL) {
    
  } else {
    
  }
  iphoneid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iphoneid);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.iphoneId)
}

// optional string isSkip = 24;
inline void ConnectByProtoRes::clear_isskip() {
  isskip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectByProtoRes::isskip() const {
  // @@protoc_insertion_point(field_get:proto.ConnectByProtoRes.isSkip)
  return isskip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_isskip(const ::std::string& value) {
  
  isskip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ConnectByProtoRes.isSkip)
}
inline void ConnectByProtoRes::set_isskip(const char* value) {
  
  isskip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ConnectByProtoRes.isSkip)
}
inline void ConnectByProtoRes::set_isskip(const char* value, size_t size) {
  
  isskip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ConnectByProtoRes.isSkip)
}
inline ::std::string* ConnectByProtoRes::mutable_isskip() {
  
  // @@protoc_insertion_point(field_mutable:proto.ConnectByProtoRes.isSkip)
  return isskip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectByProtoRes::release_isskip() {
  // @@protoc_insertion_point(field_release:proto.ConnectByProtoRes.isSkip)
  
  return isskip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectByProtoRes::set_allocated_isskip(::std::string* isskip) {
  if (isskip != NULL) {
    
  } else {
    
  }
  isskip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), isskip);
  // @@protoc_insertion_point(field_set_allocated:proto.ConnectByProtoRes.isSkip)
}

inline const ConnectByProtoRes* ConnectByProtoRes::internal_default_instance() {
  return &ConnectByProtoRes_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ConnectByProto_2eproto__INCLUDED
