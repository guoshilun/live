// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BlockByProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BlockByProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {

namespace {

const ::google::protobuf::Descriptor* BlockByProtoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlockByProtoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BlockByProtoRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlockByProtoRes_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_BlockByProto_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_BlockByProto_2eproto() {
  protobuf_AddDesc_BlockByProto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "BlockByProto.proto");
  GOOGLE_CHECK(file != NULL);
  BlockByProtoReq_descriptor_ = file->message_type(0);
  static const int BlockByProtoReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockByProtoReq, tagid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockByProtoReq, roomid_),
  };
  BlockByProtoReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BlockByProtoReq_descriptor_,
      BlockByProtoReq::internal_default_instance(),
      BlockByProtoReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(BlockByProtoReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockByProtoReq, _internal_metadata_));
  BlockByProtoRes_descriptor_ = file->message_type(1);
  static const int BlockByProtoRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockByProtoRes, msg_),
  };
  BlockByProtoRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BlockByProtoRes_descriptor_,
      BlockByProtoRes::internal_default_instance(),
      BlockByProtoRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(BlockByProtoRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockByProtoRes, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_BlockByProto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BlockByProtoReq_descriptor_, BlockByProtoReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BlockByProtoRes_descriptor_, BlockByProtoRes::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_BlockByProto_2eproto() {
  BlockByProtoReq_default_instance_.Shutdown();
  delete BlockByProtoReq_reflection_;
  BlockByProtoRes_default_instance_.Shutdown();
  delete BlockByProtoRes_reflection_;
}

void protobuf_InitDefaults_BlockByProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::proto::protobuf_InitDefaults_Entity_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  BlockByProtoReq_default_instance_.DefaultConstruct();
  BlockByProtoRes_default_instance_.DefaultConstruct();
  BlockByProtoReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  BlockByProtoRes_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_BlockByProto_2eproto_once_);
void protobuf_InitDefaults_BlockByProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_BlockByProto_2eproto_once_,
                 &protobuf_InitDefaults_BlockByProto_2eproto_impl);
}
void protobuf_AddDesc_BlockByProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_BlockByProto_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022BlockByProto.proto\022\005proto\032\014Entity.prot"
    "o\"0\n\017BlockByProtoReq\022\r\n\005tagId\030\001 \001(\t\022\016\n\006r"
    "oomId\030\002 \001(\t\"0\n\017BlockByProtoRes\022\035\n\003msg\030\001 "
    "\001(\0132\020.proto.ReturnMsgB \n\036com.sencorsta.i"
    "ds.common.protob\006proto3", 183);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BlockByProto.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_AddDesc_Entity_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BlockByProto_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_BlockByProto_2eproto_once_);
void protobuf_AddDesc_BlockByProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_BlockByProto_2eproto_once_,
                 &protobuf_AddDesc_BlockByProto_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BlockByProto_2eproto {
  StaticDescriptorInitializer_BlockByProto_2eproto() {
    protobuf_AddDesc_BlockByProto_2eproto();
  }
} static_descriptor_initializer_BlockByProto_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockByProtoReq::kTagIdFieldNumber;
const int BlockByProtoReq::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockByProtoReq::BlockByProtoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_BlockByProto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BlockByProtoReq)
}

void BlockByProtoReq::InitAsDefaultInstance() {
}

BlockByProtoReq::BlockByProtoReq(const BlockByProtoReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.BlockByProtoReq)
}

void BlockByProtoReq::SharedCtor() {
  tagid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BlockByProtoReq::~BlockByProtoReq() {
  // @@protoc_insertion_point(destructor:proto.BlockByProtoReq)
  SharedDtor();
}

void BlockByProtoReq::SharedDtor() {
  tagid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlockByProtoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockByProtoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlockByProtoReq_descriptor_;
}

const BlockByProtoReq& BlockByProtoReq::default_instance() {
  protobuf_InitDefaults_BlockByProto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BlockByProtoReq> BlockByProtoReq_default_instance_;

BlockByProtoReq* BlockByProtoReq::New(::google::protobuf::Arena* arena) const {
  BlockByProtoReq* n = new BlockByProtoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockByProtoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BlockByProtoReq)
  tagid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BlockByProtoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BlockByProtoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string tagId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tagid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tagid().data(), this->tagid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.BlockByProtoReq.tagId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_roomId;
        break;
      }

      // optional string roomId = 2;
      case 2: {
        if (tag == 18) {
         parse_roomId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomid().data(), this->roomid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.BlockByProtoReq.roomId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BlockByProtoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BlockByProtoReq)
  return false;
#undef DO_
}

void BlockByProtoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BlockByProtoReq)
  // optional string tagId = 1;
  if (this->tagid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tagid().data(), this->tagid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.BlockByProtoReq.tagId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tagid(), output);
  }

  // optional string roomId = 2;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.BlockByProtoReq.roomId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->roomid(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.BlockByProtoReq)
}

::google::protobuf::uint8* BlockByProtoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BlockByProtoReq)
  // optional string tagId = 1;
  if (this->tagid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tagid().data(), this->tagid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.BlockByProtoReq.tagId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tagid(), target);
  }

  // optional string roomId = 2;
  if (this->roomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomid().data(), this->roomid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.BlockByProtoReq.roomId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->roomid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.BlockByProtoReq)
  return target;
}

size_t BlockByProtoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BlockByProtoReq)
  size_t total_size = 0;

  // optional string tagId = 1;
  if (this->tagid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tagid());
  }

  // optional string roomId = 2;
  if (this->roomid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockByProtoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BlockByProtoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BlockByProtoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockByProtoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BlockByProtoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BlockByProtoReq)
    UnsafeMergeFrom(*source);
  }
}

void BlockByProtoReq::MergeFrom(const BlockByProtoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BlockByProtoReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BlockByProtoReq::UnsafeMergeFrom(const BlockByProtoReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.tagid().size() > 0) {

    tagid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tagid_);
  }
  if (from.roomid().size() > 0) {

    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
}

void BlockByProtoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BlockByProtoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockByProtoReq::CopyFrom(const BlockByProtoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BlockByProtoReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BlockByProtoReq::IsInitialized() const {

  return true;
}

void BlockByProtoReq::Swap(BlockByProtoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockByProtoReq::InternalSwap(BlockByProtoReq* other) {
  tagid_.Swap(&other->tagid_);
  roomid_.Swap(&other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockByProtoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlockByProtoReq_descriptor_;
  metadata.reflection = BlockByProtoReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockByProtoReq

// optional string tagId = 1;
void BlockByProtoReq::clear_tagid() {
  tagid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockByProtoReq::tagid() const {
  // @@protoc_insertion_point(field_get:proto.BlockByProtoReq.tagId)
  return tagid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockByProtoReq::set_tagid(const ::std::string& value) {
  
  tagid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.BlockByProtoReq.tagId)
}
void BlockByProtoReq::set_tagid(const char* value) {
  
  tagid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.BlockByProtoReq.tagId)
}
void BlockByProtoReq::set_tagid(const char* value, size_t size) {
  
  tagid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.BlockByProtoReq.tagId)
}
::std::string* BlockByProtoReq::mutable_tagid() {
  
  // @@protoc_insertion_point(field_mutable:proto.BlockByProtoReq.tagId)
  return tagid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockByProtoReq::release_tagid() {
  // @@protoc_insertion_point(field_release:proto.BlockByProtoReq.tagId)
  
  return tagid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockByProtoReq::set_allocated_tagid(::std::string* tagid) {
  if (tagid != NULL) {
    
  } else {
    
  }
  tagid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tagid);
  // @@protoc_insertion_point(field_set_allocated:proto.BlockByProtoReq.tagId)
}

// optional string roomId = 2;
void BlockByProtoReq::clear_roomid() {
  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockByProtoReq::roomid() const {
  // @@protoc_insertion_point(field_get:proto.BlockByProtoReq.roomId)
  return roomid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockByProtoReq::set_roomid(const ::std::string& value) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.BlockByProtoReq.roomId)
}
void BlockByProtoReq::set_roomid(const char* value) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.BlockByProtoReq.roomId)
}
void BlockByProtoReq::set_roomid(const char* value, size_t size) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.BlockByProtoReq.roomId)
}
::std::string* BlockByProtoReq::mutable_roomid() {
  
  // @@protoc_insertion_point(field_mutable:proto.BlockByProtoReq.roomId)
  return roomid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockByProtoReq::release_roomid() {
  // @@protoc_insertion_point(field_release:proto.BlockByProtoReq.roomId)
  
  return roomid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockByProtoReq::set_allocated_roomid(::std::string* roomid) {
  if (roomid != NULL) {
    
  } else {
    
  }
  roomid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomid);
  // @@protoc_insertion_point(field_set_allocated:proto.BlockByProtoReq.roomId)
}

inline const BlockByProtoReq* BlockByProtoReq::internal_default_instance() {
  return &BlockByProtoReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockByProtoRes::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockByProtoRes::BlockByProtoRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_BlockByProto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BlockByProtoRes)
}

void BlockByProtoRes::InitAsDefaultInstance() {
  msg_ = const_cast< ::proto::ReturnMsg*>(
      ::proto::ReturnMsg::internal_default_instance());
}

BlockByProtoRes::BlockByProtoRes(const BlockByProtoRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.BlockByProtoRes)
}

void BlockByProtoRes::SharedCtor() {
  msg_ = NULL;
  _cached_size_ = 0;
}

BlockByProtoRes::~BlockByProtoRes() {
  // @@protoc_insertion_point(destructor:proto.BlockByProtoRes)
  SharedDtor();
}

void BlockByProtoRes::SharedDtor() {
  if (this != &BlockByProtoRes_default_instance_.get()) {
    delete msg_;
  }
}

void BlockByProtoRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockByProtoRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlockByProtoRes_descriptor_;
}

const BlockByProtoRes& BlockByProtoRes::default_instance() {
  protobuf_InitDefaults_BlockByProto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BlockByProtoRes> BlockByProtoRes_default_instance_;

BlockByProtoRes* BlockByProtoRes::New(::google::protobuf::Arena* arena) const {
  BlockByProtoRes* n = new BlockByProtoRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockByProtoRes::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BlockByProtoRes)
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}

bool BlockByProtoRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BlockByProtoRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.ReturnMsg msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BlockByProtoRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BlockByProtoRes)
  return false;
#undef DO_
}

void BlockByProtoRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BlockByProtoRes)
  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_, output);
  }

  // @@protoc_insertion_point(serialize_end:proto.BlockByProtoRes)
}

::google::protobuf::uint8* BlockByProtoRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BlockByProtoRes)
  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.BlockByProtoRes)
  return target;
}

size_t BlockByProtoRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BlockByProtoRes)
  size_t total_size = 0;

  // optional .proto.ReturnMsg msg = 1;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockByProtoRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BlockByProtoRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BlockByProtoRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockByProtoRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BlockByProtoRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BlockByProtoRes)
    UnsafeMergeFrom(*source);
  }
}

void BlockByProtoRes::MergeFrom(const BlockByProtoRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BlockByProtoRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BlockByProtoRes::UnsafeMergeFrom(const BlockByProtoRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_msg()) {
    mutable_msg()->::proto::ReturnMsg::MergeFrom(from.msg());
  }
}

void BlockByProtoRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BlockByProtoRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockByProtoRes::CopyFrom(const BlockByProtoRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BlockByProtoRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BlockByProtoRes::IsInitialized() const {

  return true;
}

void BlockByProtoRes::Swap(BlockByProtoRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockByProtoRes::InternalSwap(BlockByProtoRes* other) {
  std::swap(msg_, other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockByProtoRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlockByProtoRes_descriptor_;
  metadata.reflection = BlockByProtoRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockByProtoRes

// optional .proto.ReturnMsg msg = 1;
bool BlockByProtoRes::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
void BlockByProtoRes::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::proto::ReturnMsg& BlockByProtoRes::msg() const {
  // @@protoc_insertion_point(field_get:proto.BlockByProtoRes.msg)
  return msg_ != NULL ? *msg_
                         : *::proto::ReturnMsg::internal_default_instance();
}
::proto::ReturnMsg* BlockByProtoRes::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::proto::ReturnMsg;
  }
  // @@protoc_insertion_point(field_mutable:proto.BlockByProtoRes.msg)
  return msg_;
}
::proto::ReturnMsg* BlockByProtoRes::release_msg() {
  // @@protoc_insertion_point(field_release:proto.BlockByProtoRes.msg)
  
  ::proto::ReturnMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
void BlockByProtoRes::set_allocated_msg(::proto::ReturnMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BlockByProtoRes.msg)
}

inline const BlockByProtoRes* BlockByProtoRes::internal_default_instance() {
  return &BlockByProtoRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
