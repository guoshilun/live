// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ReconnectionByProto.proto

#ifndef PROTOBUF_ReconnectionByProto_2eproto__INCLUDED
#define PROTOBUF_ReconnectionByProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Entity.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ReconnectionByProto_2eproto();
void protobuf_InitDefaults_ReconnectionByProto_2eproto();
void protobuf_AssignDesc_ReconnectionByProto_2eproto();
void protobuf_ShutdownFile_ReconnectionByProto_2eproto();

class ReconnectionReq;
class ReconnectionRes;

// ===================================================================

class ReconnectionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReconnectionReq) */ {
 public:
  ReconnectionReq();
  virtual ~ReconnectionReq();

  ReconnectionReq(const ReconnectionReq& from);

  inline ReconnectionReq& operator=(const ReconnectionReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReconnectionReq& default_instance();

  static const ReconnectionReq* internal_default_instance();

  void Swap(ReconnectionReq* other);

  // implements Message ----------------------------------------------

  inline ReconnectionReq* New() const { return New(NULL); }

  ReconnectionReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReconnectionReq& from);
  void MergeFrom(const ReconnectionReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReconnectionReq* other);
  void UnsafeMergeFrom(const ReconnectionReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string roomId = 1;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  const ::std::string& roomid() const;
  void set_roomid(const ::std::string& value);
  void set_roomid(const char* value);
  void set_roomid(const char* value, size_t size);
  ::std::string* mutable_roomid();
  ::std::string* release_roomid();
  void set_allocated_roomid(::std::string* roomid);

  // @@protoc_insertion_point(class_scope:proto.ReconnectionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr roomid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ReconnectionByProto_2eproto_impl();
  friend void  protobuf_AddDesc_ReconnectionByProto_2eproto_impl();
  friend void protobuf_AssignDesc_ReconnectionByProto_2eproto();
  friend void protobuf_ShutdownFile_ReconnectionByProto_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReconnectionReq> ReconnectionReq_default_instance_;

// -------------------------------------------------------------------

class ReconnectionRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReconnectionRes) */ {
 public:
  ReconnectionRes();
  virtual ~ReconnectionRes();

  ReconnectionRes(const ReconnectionRes& from);

  inline ReconnectionRes& operator=(const ReconnectionRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReconnectionRes& default_instance();

  static const ReconnectionRes* internal_default_instance();

  void Swap(ReconnectionRes* other);

  // implements Message ----------------------------------------------

  inline ReconnectionRes* New() const { return New(NULL); }

  ReconnectionRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReconnectionRes& from);
  void MergeFrom(const ReconnectionRes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReconnectionRes* other);
  void UnsafeMergeFrom(const ReconnectionRes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.ReturnMsg msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::proto::ReturnMsg& msg() const;
  ::proto::ReturnMsg* mutable_msg();
  ::proto::ReturnMsg* release_msg();
  void set_allocated_msg(::proto::ReturnMsg* msg);

  // optional int32 front = 2;
  void clear_front();
  static const int kFrontFieldNumber = 2;
  ::google::protobuf::int32 front() const;
  void set_front(::google::protobuf::int32 value);

  // optional int32 contrary = 3;
  void clear_contrary();
  static const int kContraryFieldNumber = 3;
  ::google::protobuf::int32 contrary() const;
  void set_contrary(::google::protobuf::int32 value);

  // optional int32 maxBet = 4;
  void clear_maxbet();
  static const int kMaxBetFieldNumber = 4;
  ::google::protobuf::int32 maxbet() const;
  void set_maxbet(::google::protobuf::int32 value);

  // optional int32 frontBet = 5;
  void clear_frontbet();
  static const int kFrontBetFieldNumber = 5;
  ::google::protobuf::int32 frontbet() const;
  void set_frontbet(::google::protobuf::int32 value);

  // optional int32 contraryBet = 6;
  void clear_contrarybet();
  static const int kContraryBetFieldNumber = 6;
  ::google::protobuf::int32 contrarybet() const;
  void set_contrarybet(::google::protobuf::int32 value);

  // optional string stage = 7;
  void clear_stage();
  static const int kStageFieldNumber = 7;
  const ::std::string& stage() const;
  void set_stage(const ::std::string& value);
  void set_stage(const char* value);
  void set_stage(const char* value, size_t size);
  ::std::string* mutable_stage();
  ::std::string* release_stage();
  void set_allocated_stage(::std::string* stage);

  // optional int32 time = 8;
  void clear_time();
  static const int kTimeFieldNumber = 8;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // optional int32 money = 9;
  void clear_money();
  static const int kMoneyFieldNumber = 9;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // optional int32 isFirstOpen = 10;
  void clear_isfirstopen();
  static const int kIsFirstOpenFieldNumber = 10;
  ::google::protobuf::int32 isfirstopen() const;
  void set_isfirstopen(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ReconnectionRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr stage_;
  ::proto::ReturnMsg* msg_;
  ::google::protobuf::int32 front_;
  ::google::protobuf::int32 contrary_;
  ::google::protobuf::int32 maxbet_;
  ::google::protobuf::int32 frontbet_;
  ::google::protobuf::int32 contrarybet_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 isfirstopen_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ReconnectionByProto_2eproto_impl();
  friend void  protobuf_AddDesc_ReconnectionByProto_2eproto_impl();
  friend void protobuf_AssignDesc_ReconnectionByProto_2eproto();
  friend void protobuf_ShutdownFile_ReconnectionByProto_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReconnectionRes> ReconnectionRes_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ReconnectionReq

// optional string roomId = 1;
inline void ReconnectionReq::clear_roomid() {
  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReconnectionReq::roomid() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionReq.roomId)
  return roomid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReconnectionReq::set_roomid(const ::std::string& value) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ReconnectionReq.roomId)
}
inline void ReconnectionReq::set_roomid(const char* value) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ReconnectionReq.roomId)
}
inline void ReconnectionReq::set_roomid(const char* value, size_t size) {
  
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ReconnectionReq.roomId)
}
inline ::std::string* ReconnectionReq::mutable_roomid() {
  
  // @@protoc_insertion_point(field_mutable:proto.ReconnectionReq.roomId)
  return roomid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReconnectionReq::release_roomid() {
  // @@protoc_insertion_point(field_release:proto.ReconnectionReq.roomId)
  
  return roomid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReconnectionReq::set_allocated_roomid(::std::string* roomid) {
  if (roomid != NULL) {
    
  } else {
    
  }
  roomid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomid);
  // @@protoc_insertion_point(field_set_allocated:proto.ReconnectionReq.roomId)
}

inline const ReconnectionReq* ReconnectionReq::internal_default_instance() {
  return &ReconnectionReq_default_instance_.get();
}
// -------------------------------------------------------------------

// ReconnectionRes

// optional .proto.ReturnMsg msg = 1;
inline bool ReconnectionRes::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
inline void ReconnectionRes::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
inline const ::proto::ReturnMsg& ReconnectionRes::msg() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.msg)
  return msg_ != NULL ? *msg_
                         : *::proto::ReturnMsg::internal_default_instance();
}
inline ::proto::ReturnMsg* ReconnectionRes::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::proto::ReturnMsg;
  }
  // @@protoc_insertion_point(field_mutable:proto.ReconnectionRes.msg)
  return msg_;
}
inline ::proto::ReturnMsg* ReconnectionRes::release_msg() {
  // @@protoc_insertion_point(field_release:proto.ReconnectionRes.msg)
  
  ::proto::ReturnMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void ReconnectionRes::set_allocated_msg(::proto::ReturnMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ReconnectionRes.msg)
}

// optional int32 front = 2;
inline void ReconnectionRes::clear_front() {
  front_ = 0;
}
inline ::google::protobuf::int32 ReconnectionRes::front() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.front)
  return front_;
}
inline void ReconnectionRes::set_front(::google::protobuf::int32 value) {
  
  front_ = value;
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.front)
}

// optional int32 contrary = 3;
inline void ReconnectionRes::clear_contrary() {
  contrary_ = 0;
}
inline ::google::protobuf::int32 ReconnectionRes::contrary() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.contrary)
  return contrary_;
}
inline void ReconnectionRes::set_contrary(::google::protobuf::int32 value) {
  
  contrary_ = value;
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.contrary)
}

// optional int32 maxBet = 4;
inline void ReconnectionRes::clear_maxbet() {
  maxbet_ = 0;
}
inline ::google::protobuf::int32 ReconnectionRes::maxbet() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.maxBet)
  return maxbet_;
}
inline void ReconnectionRes::set_maxbet(::google::protobuf::int32 value) {
  
  maxbet_ = value;
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.maxBet)
}

// optional int32 frontBet = 5;
inline void ReconnectionRes::clear_frontbet() {
  frontbet_ = 0;
}
inline ::google::protobuf::int32 ReconnectionRes::frontbet() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.frontBet)
  return frontbet_;
}
inline void ReconnectionRes::set_frontbet(::google::protobuf::int32 value) {
  
  frontbet_ = value;
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.frontBet)
}

// optional int32 contraryBet = 6;
inline void ReconnectionRes::clear_contrarybet() {
  contrarybet_ = 0;
}
inline ::google::protobuf::int32 ReconnectionRes::contrarybet() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.contraryBet)
  return contrarybet_;
}
inline void ReconnectionRes::set_contrarybet(::google::protobuf::int32 value) {
  
  contrarybet_ = value;
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.contraryBet)
}

// optional string stage = 7;
inline void ReconnectionRes::clear_stage() {
  stage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReconnectionRes::stage() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.stage)
  return stage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReconnectionRes::set_stage(const ::std::string& value) {
  
  stage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.stage)
}
inline void ReconnectionRes::set_stage(const char* value) {
  
  stage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ReconnectionRes.stage)
}
inline void ReconnectionRes::set_stage(const char* value, size_t size) {
  
  stage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ReconnectionRes.stage)
}
inline ::std::string* ReconnectionRes::mutable_stage() {
  
  // @@protoc_insertion_point(field_mutable:proto.ReconnectionRes.stage)
  return stage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReconnectionRes::release_stage() {
  // @@protoc_insertion_point(field_release:proto.ReconnectionRes.stage)
  
  return stage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReconnectionRes::set_allocated_stage(::std::string* stage) {
  if (stage != NULL) {
    
  } else {
    
  }
  stage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stage);
  // @@protoc_insertion_point(field_set_allocated:proto.ReconnectionRes.stage)
}

// optional int32 time = 8;
inline void ReconnectionRes::clear_time() {
  time_ = 0;
}
inline ::google::protobuf::int32 ReconnectionRes::time() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.time)
  return time_;
}
inline void ReconnectionRes::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.time)
}

// optional int32 money = 9;
inline void ReconnectionRes::clear_money() {
  money_ = 0;
}
inline ::google::protobuf::int32 ReconnectionRes::money() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.money)
  return money_;
}
inline void ReconnectionRes::set_money(::google::protobuf::int32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.money)
}

// optional int32 isFirstOpen = 10;
inline void ReconnectionRes::clear_isfirstopen() {
  isfirstopen_ = 0;
}
inline ::google::protobuf::int32 ReconnectionRes::isfirstopen() const {
  // @@protoc_insertion_point(field_get:proto.ReconnectionRes.isFirstOpen)
  return isfirstopen_;
}
inline void ReconnectionRes::set_isfirstopen(::google::protobuf::int32 value) {
  
  isfirstopen_ = value;
  // @@protoc_insertion_point(field_set:proto.ReconnectionRes.isFirstOpen)
}

inline const ReconnectionRes* ReconnectionRes::internal_default_instance() {
  return &ReconnectionRes_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ReconnectionByProto_2eproto__INCLUDED
